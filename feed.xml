<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.1.0">Jekyll</generator><link href="https://ordina-jworks.github.io/feed.xml" rel="self" type="application/atom+xml" /><link href="https://ordina-jworks.github.io/" rel="alternate" type="text/html" /><updated>2020-06-15T12:50:16+00:00</updated><id>https://ordina-jworks.github.io/feed.xml</id><title type="html">Ordina JWorks Tech Blog</title><subtitle>We build innovative solutions with Java and JavaScript. To support this mission, we have several Competence Centers. From within those Competence Centers, we provide coaching to the employee and expert advice towards our customer. In order to keep in sync with the latest technologies and the latest trends, we frequently visit conferences around the globe.
</subtitle><entry><title type="html">3D Printing During Times of Corona</title><link href="https://ordina-jworks.github.io/iot/2020/06/15/3D-Printing-During-Times-Of-Corona.html" rel="alternate" type="text/html" title="3D Printing During Times of Corona" /><published>2020-06-15T00:00:00+00:00</published><updated>2020-06-15T00:00:00+00:00</updated><id>https://ordina-jworks.github.io/iot/2020/06/15/3D-Printing-During-Times-Of-Corona</id><content type="html" xml:base="https://ordina-jworks.github.io/iot/2020/06/15/3D-Printing-During-Times-Of-Corona.html">&lt;link rel=&quot;stylesheet&quot; href=&quot;https://cdnjs.cloudflare.com/ajax/libs/lightbox2/2.9.0/css/lightbox.css&quot; /&gt;

&lt;link rel=&quot;stylesheet&quot; href=&quot;https://cdn.jsdelivr.net/npm/bootstrap-grid-only@1.0.0/bootstrap.css&quot; /&gt;

&lt;script src=&quot;https://cdnjs.cloudflare.com/ajax/libs/jquery/3.2.1/jquery.min.js&quot;&gt;&lt;/script&gt;

&lt;script src=&quot;https://cdnjs.cloudflare.com/ajax/libs/lightbox2/2.9.0/js/lightbox.min.js&quot;&gt;&lt;/script&gt;

&lt;script src=&quot;https://cdn.jsdelivr.net/npm/bootstrap-grid-only@1.0.0/index.min.js&quot;&gt;&lt;/script&gt;

&lt;h2 id=&quot;table-of-contents&quot;&gt;Table of Contents&lt;/h2&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;a href=&quot;#introduction&quot;&gt;Introduction&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#shortage-in-equipment&quot;&gt;Shortage in equipment&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#3d-printing-to-the-rescue&quot;&gt;3D printing to the rescue&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#experimenting-with-tpu&quot;&gt;Experimenting with TPU&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#resources&quot;&gt;Resources&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;introduction&quot;&gt;Introduction&lt;/h2&gt;

&lt;p&gt;These are trying times we are living in.&lt;br /&gt;
Since the outbreak of the Corona virus we have been living in some form of lockdown.
We are limited in our ability to go out and do anything, and when we do, it is recommended to take the necessary precautions like keeping a safe distance and wearing a mask.
The masks are among the things we didn’t have enough of, certainly in the beginning of the outbreak.&lt;br /&gt;
In this blog post I’ll dig a little deeper in using 3D printing tech to make masks and other equipment/material that can be of use.&lt;/p&gt;

&lt;p&gt;&lt;img alt=&quot;stack&quot; src=&quot;/img/2020-06-15-3D-Printing-during-corona/covid-19-corona-virus.jpg&quot; class=&quot;image fit&quot; style=&quot;margin:0px auto; max-width: 500px;&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;shortage-in-equipment&quot;&gt;Shortage in equipment&lt;/h2&gt;

&lt;p&gt;The strain on our healthcare system and the supplies has been massive.
Masks were kept for healthcare workers even if they were just surgical masks and not the FFP2/3 masks.
Masks are slowly becoming more widely available for the general population again, however the government relied on people to make their own masks in the beginning.&lt;/p&gt;

&lt;p&gt;Luckily our country was spared from the overwhelming load on the hospitals like in Italy.
While the situation was very serious in the hospitals, we never had a lack of ventilators or had to turn people away because the hospitals were at or already beyond their capacity.&lt;/p&gt;

&lt;h2 id=&quot;3d-printing-to-the-rescue&quot;&gt;3D printing to the rescue&lt;/h2&gt;

&lt;p&gt;3D printing is a very handy technology.
It allows for rapid prototyping and small-scale production without the need to set up a full production line.
The 3D printing community is a very large one, and also a very active one.&lt;/p&gt;

&lt;p&gt;Because of the high load on the intensive care units in Italy with many people requiring to be put on a ventilator for life support, it became clear that the supply line could not meet the demand.
Because the hospitals were in need of these valves and the supplier could not provide them, the 3D printing community jumped in, and soon after the first version was designed and 3D printed.
However the valve design is patented and this hindered individuals and companies from stepping in and helping with printing extra valves.
The hospitals can request production of these masks, sidestepping the patent in times of emergency, but they have to be present and patient consent is also needed (depending on local laws).&lt;/p&gt;

&lt;p&gt;The pictures below show the masks.
The first picture shows the real valve (left) versus a 3D printed one using filament printing technologies.
The second picture shows later iterations of the 3D printed valves printed using polymer material that is laser fused.&lt;/p&gt;

&lt;div style=&quot;text-align: center; margin: 0px auto;&quot;&gt;
    &lt;a href=&quot;/img/2020-06-15-3D-Printing-during-corona/venturi-valve-real-vs-printed.jpg&quot; data-lightbox=&quot;fdm&quot; data-title=&quot;A real Venturi valve vs a 3D printed one&quot;&gt;
        &lt;img alt=&quot;stack&quot; src=&quot;/img/2020-06-15-3D-Printing-during-corona/venturi-valve-real-vs-printed.jpg&quot; class=&quot;image fit&quot; style=&quot;margin:0px auto; width: 22%; display: inline-block;&quot; /&gt;
    &lt;/a&gt;
    &lt;a href=&quot;/img/2020-06-15-3D-Printing-during-corona/venturi-valve-laser-printed.jpg&quot; data-lightbox=&quot;fdm&quot; data-title=&quot;Many laser printed Venturi valves&quot;&gt;
        &lt;img alt=&quot;stack&quot; src=&quot;/img/2020-06-15-3D-Printing-during-corona/venturi-valve-laser-printed.jpg&quot; class=&quot;image fit&quot; style=&quot;margin:0px auto; width: 37.4%; display: inline-block;&quot; /&gt;
    &lt;/a&gt;
     &lt;a href=&quot;/img/2020-06-15-3D-Printing-during-corona/3D-printed-valves.jpg&quot; data-lightbox=&quot;fdm&quot; data-title=&quot;3D printed Venturi valves that have been prepared for use&quot;&gt;
        &lt;img alt=&quot;stack&quot; src=&quot;/img/2020-06-15-3D-Printing-during-corona/3D-printed-valves.jpg&quot; class=&quot;image fit&quot; style=&quot;margin:0px auto; width: 39%; display: inline-block;&quot; /&gt;
    &lt;/a&gt;
&lt;/div&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;These valves are not officially approved for use in medical devices, but since “necessity knows no law” it might be better to use these 3D printed valves and saving lives instead of letting people die.
The STL files have not been shared publicly, except for some imitations, &lt;a href=&quot;https://cults3d.com/en/3d-model/tool/venturi-valvula-pedrovo13&quot; target=&quot;_blank&quot;&gt;linked for educational purposes only!&lt;/a&gt;
The manufacturers have not taken any legal action against this 3D printed design.
Using the original valves is still recommended and once the supply from the manufacturers can meet the demand these will once again be used as some of the intricate details of the valve are hard to mimic with current 3D printing technologies.&lt;/p&gt;

&lt;iframe src=&quot;https://www.viewstl.com/?embedded&amp;amp;url=https://ordina-jworks.github.io/img/2020-06-15-3D-Printing-during-corona/venturi-valve.stl&quot; style=&quot;border:0;margin:0;width:100%;height:350px;&quot;&gt;&lt;/iframe&gt;

&lt;p&gt;But not only valves are being 3D printed.
Since there is also a great demand for face masks, and they were, certainly in the beginning, in very short supply.
So mask designs started popping up in the online communities, at first very basic and rudimentary designs but over the following days/weeks the designs became more specialized and optimized.&lt;/p&gt;

&lt;p&gt;These masks are not meant to replace the actual FFP2/3 or N95 masks but can offer people at least protection, if not for themselves, at least for others by preventing particles from the nose or mouth to spread as far as without wearing a mask.
3D printing materials are also (usually) not medically certified so precautions have to be taken.
Especially when printing masks with &lt;a href=&quot;https://nl.wikipedia.org/wiki/Fused_deposition_modeling&quot; target=&quot;_blank&quot;&gt;FDM technology&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;It might be possible for contaminants to get in between the layers and in microscopic cavities in the printed material.
Therefor it is highly recommended to either disinfect the masks after use, and even more preferred to do this in addition to also sealing the mask with a sealant.
This sealant can be varnish or any other material which does not cause irritation when touching human skin.&lt;/p&gt;

&lt;p&gt;Below are some of the designs I experimented with and my personal findings of each mask in terms of fabrication easy and wearing comfort.&lt;/p&gt;

&lt;p&gt;This was one of the first masks I printed, &lt;a href=&quot;https://www.thingiverse.com/thing:4239615&quot; target=&quot;_blank&quot;&gt;designed by The 3D Handyman on YouTube and Thingiverse.&lt;/a&gt;&lt;/p&gt;
&lt;div style=&quot;text-align: center; margin: 0px auto;&quot;&gt;
    &lt;a href=&quot;/img/2020-06-15-3D-Printing-during-corona/v1-mask.stl&quot; data-lightbox=&quot;fdm&quot; data-title=&quot;&quot;&gt;
        &lt;iframe src=&quot;https://www.viewstl.com/?embedded&amp;amp;url=https://ordina-jworks.github.io/img/2020-06-15-3D-Printing-during-corona/v1-mask.stl&quot; class=&quot;image fit&quot; style=&quot;margin:0px auto; width: 49%; height: 350px; display: inline-block;&quot;&gt;&lt;/iframe&gt;
    &lt;/a&gt;
    &lt;a href=&quot;/img/2020-06-15-3D-Printing-during-corona/v1-cap.stl&quot; data-lightbox=&quot;fdm&quot; data-title=&quot;&quot;&gt;
        &lt;iframe src=&quot;https://www.viewstl.com/?embedded&amp;amp;url=https://ordina-jworks.github.io/img/2020-06-15-3D-Printing-during-corona/v1-cap.stl&quot; class=&quot;image fit&quot; style=&quot;margin:0px auto; width: 49%; height: 350px; display: inline-block;&quot;&gt;&lt;/iframe&gt;
    &lt;/a&gt;
&lt;/div&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;The mask is modelled to the face of the creator, as can be seen in the instructional video:&lt;/p&gt;
&lt;div style=&quot;position: relative; width: 100%; height: 0; padding-bottom: 55%;&quot;&gt;
    &lt;iframe src=&quot;https://www.youtube.com/embed/kBQcNBPRkh0&quot; width=&quot;100%&quot; height=&quot;100%;&quot; style=&quot;position: absolute; left: 0; top: 0; bottom: 0; right: 0;&quot;&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;It fits rather well, but when printed in PLA (or ABS) the edge can be rather uncomfortable.
I tried and succeeded in printing this mask in TPU which greatly improves the comfort when wearing it.
The TPU printed version does rely quite a bit more on the elastic strap to keep the lid with the filter pinned to the mask as the clips do not work that well when printed in this material.
I also designed an inlay for the cap/mask to hold the filter in place so that the filter cannot be blown out or sucked inside the mask.&lt;/p&gt;

&lt;div style=&quot;text-align: center; margin: 0px auto;&quot;&gt;
    &lt;a href=&quot;/img/2020-06-15-3D-Printing-during-corona/IMG_0434.jpg&quot; data-lightbox=&quot;fdm&quot; data-title=&quot;First attempt at making masks&quot;&gt;
        &lt;img alt=&quot;stack&quot; src=&quot;/img/2020-06-15-3D-Printing-during-corona/IMG_0434.jpg&quot; class=&quot;image fit&quot; style=&quot;margin:0px auto; width: 15.3%; display: inline-block;&quot; /&gt;
    &lt;/a&gt;
    &lt;a href=&quot;/img/2020-06-15-3D-Printing-during-corona/IMG_0580.jpg&quot; data-lightbox=&quot;fdm&quot; data-title=&quot;Mask, inlays, filter and filter cap&quot;&gt;
        &lt;img alt=&quot;stack&quot; src=&quot;/img/2020-06-15-3D-Printing-during-corona/IMG_0580.jpg&quot; class=&quot;image fit&quot; style=&quot;margin:0px auto; width: 27%; display: inline-block;&quot; /&gt;
    &lt;/a&gt;
     &lt;a href=&quot;/img/2020-06-15-3D-Printing-during-corona/IMG_0581.jpg&quot; data-lightbox=&quot;fdm&quot; data-title=&quot;Assembled masks&quot;&gt;
        &lt;img alt=&quot;stack&quot; src=&quot;/img/2020-06-15-3D-Printing-during-corona/IMG_0581.jpg&quot; class=&quot;image fit&quot; style=&quot;margin:0px auto; width: 27%; display: inline-block;&quot; /&gt;
    &lt;/a&gt;
    &lt;a href=&quot;/img/2020-06-15-3D-Printing-during-corona/IMG_0443.jpg&quot; data-lightbox=&quot;fdm&quot; data-title=&quot;Overview of all the V1 masks I printed&quot;&gt;
        &lt;img alt=&quot;stack&quot; src=&quot;/img/2020-06-15-3D-Printing-during-corona/IMG_0443.jpg&quot; class=&quot;image fit&quot; style=&quot;margin:0px auto; width: 27%; display: inline-block;&quot; /&gt;
    &lt;/a&gt;
&lt;/div&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;This was the second mask design I printed, &lt;a href=&quot;https://www.thingiverse.com/thing:4292905&quot; target=&quot;_blank&quot;&gt;also designed by The 3D Handyman on YouTube and Thingiverse.&lt;/a&gt;&lt;/p&gt;
&lt;div style=&quot;text-align: center; margin: 0px auto;&quot;&gt;
    &lt;a href=&quot;/img/2020-06-15-3D-Printing-during-corona/v2-mask.stl&quot; data-lightbox=&quot;fdm&quot; data-title=&quot;&quot;&gt;
        &lt;iframe src=&quot;https://www.viewstl.com/?embedded&amp;amp;url=https://ordina-jworks.github.io/img/2020-06-15-3D-Printing-during-corona/v2-mask.stl&quot; class=&quot;image fit&quot; style=&quot;margin:0px auto; width: 32%; height: 350px; display: inline-block;&quot;&gt;&lt;/iframe&gt;
    &lt;/a&gt;
    &lt;a href=&quot;/img/2020-06-15-3D-Printing-during-corona/v2-cap.stl&quot; data-lightbox=&quot;fdm&quot; data-title=&quot;&quot;&gt;
        &lt;iframe src=&quot;https://www.viewstl.com/?embedded&amp;amp;url=https://ordina-jworks.github.io/img/2020-06-15-3D-Printing-during-corona/v2-cap.stl&quot; class=&quot;image fit&quot; style=&quot;margin:0px auto; width: 32%; height: 350px; display: inline-block;&quot;&gt;&lt;/iframe&gt;
    &lt;/a&gt;
     &lt;a href=&quot;/img/2020-06-15-3D-Printing-during-corona/v2-mold.stl&quot; data-lightbox=&quot;fdm&quot; data-title=&quot;&quot;&gt;
        &lt;iframe src=&quot;https://www.viewstl.com/?embedded&amp;amp;url=https://ordina-jworks.github.io/img/2020-06-15-3D-Printing-during-corona/v2-mold.stl&quot; class=&quot;image fit&quot; style=&quot;margin:0px auto; width: 32%; height: 350px; display: inline-block;&quot;&gt;&lt;/iframe&gt;
    &lt;/a&gt;
&lt;/div&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;This mask is much more complex, not modelled to one specific face and requires additional steps after printing.
It comes with a mold on which silicone caulk should be applied to create a comfortable seal with the wearers face.
The instructional video explains it all in great detail:&lt;/p&gt;
&lt;div style=&quot;position: relative; width: 100%; height: 0; padding-bottom: 55%;&quot;&gt;
    &lt;iframe src=&quot;https://www.youtube.com/embed/gwOZ_gwkojg&quot; width=&quot;100%&quot; height=&quot;100%;&quot; style=&quot;position: absolute; left: 0; top: 0; bottom: 0; right: 0;&quot;&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;This mask fits very well and although it requires quite a bit of extra work, I prefer it over the first version!
It sits very comfortable and does not require printing with TPU.
The silicone molding process does take some trial an error but the mask shown in the pictures is from the first attempt!&lt;/p&gt;

&lt;div style=&quot;text-align: center; margin: 0px auto;&quot;&gt;
     &lt;a href=&quot;/img/2020-06-15-3D-Printing-during-corona/IMG_0584.jpg&quot; data-lightbox=&quot;fdm&quot; data-title=&quot;Printed mask &amp;amp; Silicone mold&quot;&gt;
        &lt;img alt=&quot;stack&quot; src=&quot;/img/2020-06-15-3D-Printing-during-corona/IMG_0584.jpg&quot; class=&quot;image fit&quot; style=&quot;margin:0px auto; width: 20.5%; display: inline-block;&quot; /&gt;
    &lt;/a&gt;
    &lt;a href=&quot;/img/2020-06-15-3D-Printing-during-corona/IMG_0486.jpg&quot; data-lightbox=&quot;fdm&quot; data-title=&quot;Mask with silicone seal 1&quot;&gt;
        &lt;img alt=&quot;stack&quot; src=&quot;/img/2020-06-15-3D-Printing-during-corona/IMG_0486.jpg&quot; class=&quot;image fit&quot; style=&quot;margin:0px auto; width: 11.5%; display: inline-block;&quot; /&gt;
    &lt;/a&gt;
    &lt;a href=&quot;/img/2020-06-15-3D-Printing-during-corona/IMG_0487.jpg&quot; data-lightbox=&quot;fdm&quot; data-title=&quot;Mask with silicone seal 2&quot;&gt;
        &lt;img alt=&quot;stack&quot; src=&quot;/img/2020-06-15-3D-Printing-during-corona/IMG_0487.jpg&quot; class=&quot;image fit&quot; style=&quot;margin:0px auto; width: 11.5%; display: inline-block;&quot; /&gt;
    &lt;/a&gt;
     &lt;a href=&quot;/img/2020-06-15-3D-Printing-during-corona/IMG_0488.jpg&quot; data-lightbox=&quot;fdm&quot; data-title=&quot;Mask with silicone seal 3&quot;&gt;
        &lt;img alt=&quot;stack&quot; src=&quot;/img/2020-06-15-3D-Printing-during-corona/IMG_0488.jpg&quot; class=&quot;image fit&quot; style=&quot;margin:0px auto; width: 11.5%; display: inline-block;&quot; /&gt;
    &lt;/a&gt;
    &lt;a href=&quot;/img/2020-06-15-3D-Printing-during-corona/IMG_0582.jpg&quot; data-lightbox=&quot;fdm&quot; data-title=&quot;Mask, filter and filter cap&quot;&gt;
        &lt;img alt=&quot;stack&quot; src=&quot;/img/2020-06-15-3D-Printing-during-corona/IMG_0582.jpg&quot; class=&quot;image fit&quot; style=&quot;margin:0px auto; width: 20.5%; display: inline-block;&quot; /&gt;
    &lt;/a&gt;
     &lt;a href=&quot;/img/2020-06-15-3D-Printing-during-corona/IMG_0583.jpg&quot; data-lightbox=&quot;fdm&quot; data-title=&quot;Assembled mask&quot;&gt;
        &lt;img alt=&quot;stack&quot; src=&quot;/img/2020-06-15-3D-Printing-during-corona/IMG_0583.jpg&quot; class=&quot;image fit&quot; style=&quot;margin:0px auto; width: 11.5%; display: inline-block;&quot; /&gt;
    &lt;/a&gt;
&lt;/div&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;There are many, many more mask designs online.
You can always design a custom mask or look on &lt;a href=&quot;https://www.thingiverse.com/&quot; target=&quot;_blank&quot;&gt;thingiverse&lt;/a&gt; or any other 3D modelling site for designs from other people.
The community is very large and very engaged when it comes to prototyping.
A lot of trial and error is involved before getting a mask design right, and even when printing before the print is just right so it can be worn.
Printing with different materials like TPU can also be tricky and time consuming to get right, in the section below I talk a bit more about what TPU is and why it’s harder to print with.&lt;/p&gt;

&lt;p&gt;Disclaimer: These masks are not the real deal, they are not meant to be used in hospitals, they are meant to provide a means to protect oneself when not better materials/equipment is at hand.
They also only offer an additional protection at best, and it is recommended to maintain all social distancing measures, even when wearing a mask!
All the masks shown here have been sealed with varnish or paint to allow for safer use and easier disinfection.&lt;/p&gt;

&lt;p&gt;In addition to masks there are also tools/adapters being printed to more easily hold masks or holder for plastic face shield, to use in combination with a mask.&lt;/p&gt;

&lt;p&gt;The straps are a very small piece that can hold the bands of a mask, this allows the mask tightness to be adjusted and provides greater comfort for the wearer.&lt;/p&gt;
&lt;div style=&quot;position: relative; width: 100%; height: 0; padding-bottom: 55%;&quot;&gt;
    &lt;iframe src=&quot;https://www.viewstl.com/?embedded&amp;amp;url=https://ordina-jworks.github.io/img/2020-06-15-3D-Printing-during-corona/strap.stl&quot; class=&quot;image fit&quot; style=&quot;margin:0px auto; width: 100%; height: 350px; display: inline-block;&quot;&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;p&gt;These can be printed quite fast on a very rough quality setting.&lt;/p&gt;

&lt;p&gt;The second much printed item are the holders for face shields.
These face shields provide an additional layer of protection to the wearer, usually this is combined with wearing a regular face mask.
The holders fit around the wearer’s head and the plastic face shield clicks onto the holder by the pins.&lt;/p&gt;

&lt;div style=&quot;text-align: center; margin: 0px auto;&quot;&gt;
    &lt;a href=&quot;/img/2020-06-15-3D-Printing-during-corona/shield1.jpg&quot; data-lightbox=&quot;fdm&quot; data-title=&quot;Printed holder and plastic sheet&quot;&gt;
        &lt;img alt=&quot;stack&quot; src=&quot;/img/2020-06-15-3D-Printing-during-corona/shield1.jpg&quot; class=&quot;image fit&quot; style=&quot;margin:0px auto; width: 49%; display: inline-block;&quot; /&gt;
    &lt;/a&gt;
    &lt;a href=&quot;/img/2020-06-15-3D-Printing-during-corona/shield2.jpg&quot; data-lightbox=&quot;fdm&quot; data-title=&quot;Assembled face shield&quot;&gt;
        &lt;img alt=&quot;stack&quot; src=&quot;/img/2020-06-15-3D-Printing-during-corona/shield2.jpg&quot; class=&quot;image fit&quot; style=&quot;margin:0px auto; width: 49%; display: inline-block;&quot; /&gt;
    &lt;/a&gt;
&lt;/div&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;
&lt;div style=&quot;position: relative; width: 100%; height: 0; padding-bottom: 55%;&quot;&gt;
    &lt;iframe src=&quot;https://www.viewstl.com/?embedded&amp;amp;url=https://ordina-jworks.github.io/img/2020-06-15-3D-Printing-during-corona/shield-holder.stl&quot; class=&quot;image fit&quot; style=&quot;margin:0px auto; width: 100%; height: 350px; display: inline-block;&quot;&gt;&lt;/iframe&gt;
&lt;/div&gt;

&lt;h2 id=&quot;experimenting-with-tpu&quot;&gt;Experimenting with TPU&lt;/h2&gt;

&lt;p&gt;One of the disadvantages of regular materials like &lt;a href=&quot;https://en.wikipedia.org/wiki/Polylactic_acid&quot; target=&quot;_blank&quot;&gt;PLA&lt;/a&gt;, &lt;a href=&quot;https://en.wikipedia.org/wiki/Acrylonitrile_butadiene_styrene&quot; target=&quot;_blank&quot;&gt;ABS&lt;/a&gt; or &lt;a href=&quot;https://en.wikipedia.org/wiki/Polyethylene_terephthalate&quot; target=&quot;_blank&quot;&gt;PETG&lt;/a&gt; is that they are fairly rigid, they do not flex very much or at all.
When printing masks or devices that need to be worn on the head, some form of flexibility is advisable to make the printed object conform to the shape of the head/face.&lt;/p&gt;

&lt;p&gt;Enter &lt;a href=&quot;https://en.wikipedia.org/wiki/Thermoplastic_polyurethane&quot; target=&quot;_blank&quot;&gt;TPU or Thermoplastic Polyurethane&lt;/a&gt;.
This material is flexible and can also be 3D printed.
This makes the material suitable for use in designs that need to be able to conform to the contours of a human face.&lt;/p&gt;

&lt;div style=&quot;text-align: center; margin: 0px auto;&quot;&gt;
    &lt;video width=&quot;270&quot; height=&quot;480&quot; autoplay=&quot;&quot; muted=&quot;&quot; loop=&quot;&quot;&gt;
        &lt;source src=&quot;/img/2020-06-15-3D-Printing-during-corona/IMG_0440.MOV&quot; type=&quot;video/mp4&quot; /&gt;
    &lt;/video&gt;
&lt;/div&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;The flexibility of the material is denoted on a hardness scale: The Shore hardness scale.&lt;/p&gt;

&lt;p&gt;&lt;img alt=&quot;Shore hardness scale&quot; src=&quot;/img/2020-06-15-3D-Printing-during-corona/shore-hardness.png&quot; class=&quot;image fit&quot; style=&quot;margin:0px auto; max-width: 600px;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;This scale has three scales:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Scale 00&lt;/li&gt;
  &lt;li&gt;Scale A: Soft rubber types&lt;/li&gt;
  &lt;li&gt;Scale D: Hard rubber types&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;As you can see, these scales do somewhat overlap.
For 3D printing the harder the TPU material is, the easier it is to print.
The lower the A or D scale value of the TPU material, the lower the printing speed and the shorter the retraction distance/speed has to be!&lt;/p&gt;

&lt;p&gt;TPU is harder to print than regular PLA or ABS.
It is recommended to print TPU on a direct extruder at a lower than normal printing speed.
However, it can also be printed on bowden fed extruders, but the printing speed needs to be lowered even further to prevent the filament from spooling up or clogging in the bowden tube.
Retraction distance also needs to be lowered to prevent the extruder from clogging up.
This will increase stringing to some degree though.&lt;/p&gt;

&lt;p&gt;3D printing is already trial and error, but for printing flexibles like TPU this is even more so.
The material is a lot more unforgiving than PLA or even ABS and the settings need to be fine-tuned for each different printer and TPU material before prints will come out looking somewhat decent.&lt;/p&gt;

&lt;p&gt;The image below shows the difference between a bowden extruder (left), which has a guiding tube made of teflon and a direct drive extruder (right).
&lt;img alt=&quot;Bowden versus Direct drive extruder&quot; src=&quot;/img/2020-06-15-3D-Printing-during-corona/bowden-vs-direct.webp&quot; class=&quot;image fit&quot; style=&quot;margin:0px auto; max-width: 600px;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Below is a video of my 3D printer with a bowden type extruder printing TPU just fine, albeit very slowly.&lt;/p&gt;
&lt;div style=&quot;text-align: center; margin: 0px auto;&quot;&gt;
    &lt;video width=&quot;480&quot; height=&quot;270&quot; autoplay=&quot;&quot; muted=&quot;&quot; loop=&quot;&quot;&gt;
        &lt;source src=&quot;/img/2020-06-15-3D-Printing-during-corona/IMG_0442.MOV&quot; type=&quot;video/mp4&quot; /&gt;
    &lt;/video&gt;
&lt;/div&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;resources&quot;&gt;Resources&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.3dprintingmedia.network/covid-19-3d-printed-valve-for-reanimation-device/&quot; target=&quot;_blank&quot;&gt;Italian hospital saves Covid-19 patients lives by 3D printing valves for reanimation devices&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.fastcompany.com/90477940/these-good-samaritans-with-a-3d-printer-are-saving-lives-by-making-new-respirator-valves-for-free&quot; target=&quot;_blank&quot;&gt;These Good Samaritans with a 3D printer are saving lives by making new respirator valves for free&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://cults3d.com/en/3d-model/tool/venturi-valvula-pedrovo13&quot; target=&quot;_blank&quot;&gt;Venturi Valve STL files&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.thingiverse.com/thing:4239615&quot; target=&quot;_blank&quot;&gt;Custom Fitted Respirator Filter Mask - COVID-19: Files&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=kBQcNBPRkh0&quot; target=&quot;_blank&quot;&gt;Custom Fitted Respirator Filter Mask - COVID-19: YouTube&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.thingiverse.com/thing:4292905&quot; target=&quot;_blank&quot;&gt;Universal Respirator / Face Mask w/ Mold for a Silicone Seal: Files&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=gwOZ_gwkojg&quot; target=&quot;_blank&quot;&gt;Universal Respirator / Face Mask w/ Mold for a Silicone Seal: YouTube&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.thingiverse.com/thing:4249113&quot; target=&quot;_blank&quot;&gt;Surgical mask strap&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://3dverkstan.se/protective-visor/&quot; target=&quot;_blank&quot;&gt;Face shield holder&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.x3d.com.au/blog/best-tpu-filaments-according-to-shore-hardness&quot; target=&quot;_blank&quot;&gt;Shore hardness&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://all3dp.com/2/direct-vs-bowden-extruder-technology-shootout/&quot; target=&quot;_blank&quot;&gt;Direct drive vs Bowden&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><author><name>{&quot;first_name&quot;=&gt;&quot;Kevin&quot;, &quot;last_name&quot;=&gt;&quot;Van den Abeele&quot;, &quot;github&quot;=&gt;&quot;beele&quot;, &quot;twitter&quot;=&gt;&quot;_nabeele&quot;, &quot;linkedin&quot;=&gt;&quot;Mr-IoT&quot;, &quot;permalink&quot;=&gt;&quot;/author/kevin-van-den-abeele/&quot;, &quot;avatar&quot;=&gt;&quot;kevin-van-den-abeele.jpg&quot;, &quot;title&quot;=&gt;&quot;Consultant&quot;, &quot;title2&quot;=&gt;&quot;Competence Leader Internet of Things&quot;, &quot;email&quot;=&gt;&quot;kevin.vandenabeele@ordina.be&quot;, &quot;bio&quot;=&gt;&quot;Kevin is a frontend consultant at Ordina, passionate about all modern web applications and smart tech. In his role as Competence Leader Smart Technologies he uses his knowledge of building custom software to build innovative solutions using new technologies. Loves to tinker with gadgets and electronics.&quot;}</name><email>kevin.vandenabeele@ordina.be</email></author><category term="IoT" /><category term="3D printing" /><category term="Printing" /><category term="Building" /><category term="Technology" /><category term="Smart Technology" /><category term="FDM" /><category term="PLA" /><category term="TPU" /><category term="masks" /><category term="ventilator" /><category term="respirator" /><category term="corona" /><category term="covid" /><category term="covid-19" /><category term="sars-cov-2" /><category term="FFP2" /><category term="FFP3" /><category term="N95" /><category term="Surgical mask" /><summary type="html"></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://ordina-jworks.github.io/img/2020-06-15-3D-Printing-during-corona/banner.jpg" /><media:content medium="image" url="https://ordina-jworks.github.io/img/2020-06-15-3D-Printing-during-corona/banner.jpg" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">From 6 weeks to 90 minutes: let Terraform do your work</title><link href="https://ordina-jworks.github.io/cloud/2020/06/02/terraform.html" rel="alternate" type="text/html" title="From 6 weeks to 90 minutes: let Terraform do your work" /><published>2020-06-02T00:00:00+00:00</published><updated>2020-06-02T00:00:00+00:00</updated><id>https://ordina-jworks.github.io/cloud/2020/06/02/terraform</id><content type="html" xml:base="https://ordina-jworks.github.io/cloud/2020/06/02/terraform.html">&lt;h3 id=&quot;reading-time-7-minutes-and-2-seconds&quot;&gt;Reading time: 7 minutes and 2 seconds&lt;/h3&gt;

&lt;h1 id=&quot;table-of-contents&quot;&gt;Table of contents&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;#how-much-infrastructure-can-you-get-in-6-weeks-time&quot;&gt;How much infrastructure can you get in 6 weeks time&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#why-use-terraform-to-supercharge-infrastructure-provisioning&quot;&gt;Why use Terraform to supercharge infrastructure provisioning&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#how-to-structure-terraform-to-allow-for-a-two-second-tire-change&quot;&gt;How to structure Terraform to allow for a two second tire change&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#how-can-you-beat-us&quot;&gt;How can you beat us&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#where-to-draw-a-line-everything-in-terraform&quot;&gt;Where to draw a line, everything in terraform&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#finally-two-golden-tips-when-using-terraform&quot;&gt;Finally, two golden tips when using Terraform&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;how-much-infrastructure-can-you-get-in-6-weeks-time&quot;&gt;How much infrastructure can you get in 6 weeks time&lt;/h2&gt;

&lt;p&gt;The landscape discussed in this post is used to host a set of applications for a large corporation to assist one of their core products.
The end-goal of this platform is to support their target market across Europe.&lt;/p&gt;

&lt;p&gt;A single environment consists of a namespace on a shared OpenShift cluster, a database and a reverse proxy.
In order to spin up a new environment to onboard a new development team the following steps need to be executed:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Order resources on the shared OpenShift cluster: ticket 1 for the OpenShift team&lt;/li&gt;
  &lt;li&gt;Order a reverse proxy: ticket 2 for reverse proxy team&lt;/li&gt;
  &lt;li&gt;Order a database: ticket 3 for the database team&lt;/li&gt;
  &lt;li&gt;Order a DNS record for the environment to point to OpenShift routers: ticket 4 for the DNS team&lt;/li&gt;
  &lt;li&gt;Create a new environment in environment repository&lt;/li&gt;
  &lt;li&gt;Run a Jenkins job to create certificates for the environment&lt;/li&gt;
  &lt;li&gt;Update the credentials for the new database in online tooling&lt;/li&gt;
  &lt;li&gt;Update the credentials for the new database in offline password storage&lt;/li&gt;
  &lt;li&gt;Git-encrypt the database credentials and put them in the environment repository&lt;/li&gt;
  &lt;li&gt;Update the database connection details in environment repository&lt;/li&gt;
  &lt;li&gt;Run an Ansible playbook to create a new namespace in OpenShift and set up the base configuration for the namespace (Docker registry credentials, custom service accounts, …)&lt;/li&gt;
  &lt;li&gt;Sync OpenShift service account credentials into Jenkins credential store&lt;/li&gt;
  &lt;li&gt;Roll out Jenkins to add the new credentials by starting a Jenkins job executing an Ansible playbook&lt;/li&gt;
  &lt;li&gt;Create reverse proxy configuration in reverse proxy repository&lt;/li&gt;
  &lt;li&gt;Use a self-service portal to request access for Jenkins to update the configuration on the reverse proxy&lt;/li&gt;
  &lt;li&gt;Roll out the reverse proxy configuration using a Jenkins job&lt;/li&gt;
  &lt;li&gt;Roll out the environment configuration and application landscape to the new namespace through a Jenkins job that runs OC process and OC applies using the configuration&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;This sums up the best-case scenario.
Since it requires multiple teams to perform disconnected tasks at different times, errors are frequent and slow to resolve.
Next to that, there is a lot of manual work.
This work includes copy and pasting configuration from different sources into different repositories and systems.
Since any manual action, especially involving copying data between locations, is prone to errors, this introduces even more failure points.
Combining the time it takes for tickets to be executed, copying the manual configuration to the correct locations and the debugging involved in getting the environment online results in lead times expressed in weeks.
On one occasion the lead time to set up a single environment for a new team escalated to 6 weeks.
Due to the high lead times at least 1 or 2 spare environments are provisioned in order to provide teams with at least a minimal environment to start working with.
This of course introduces additional cost.&lt;/p&gt;

&lt;p&gt;High lead times, human errors and unnecessary operational costs were the main issues of this manual process.
Since the decision was made to migrate to the public cloud, timing was perfect.
Moving to a different infrastructure provided the perfect opportunity to optimize and automate this process.
The expectation was to reduce the lead times to hours, minimize human errors, and minimize capital and operational costs when providing a development team with a new environment.&lt;/p&gt;

&lt;h2 id=&quot;why-use-terraform-to-supercharge-infrastructure-provisioning&quot;&gt;Why use Terraform to supercharge infrastructure provisioning&lt;/h2&gt;

&lt;p&gt;As mentioned, one of the main triggers to revisit our infrastructure setup and look into automation was the move to public cloud.
We selected Azure as the cloud provider.
The reasons why Azure was selected are beyond the scope of this blog post.
We might discuss this in a future blog post though.&lt;/p&gt;

&lt;p&gt;The logical choice for automating the infrastructure provisioning would be ARM templates, since this is the native provided way for infrastructure as code in Azure.
Together with an external ARM expert, we attempted to set up the target infrastructure using this template technology.
Unfortunately, multiple walls were hit due to the nature of the corporate setup on Azure.
One of the limitations that were hit, was the inability for ARM to make changes to resources that were provided by a central team.
More specifically, using a VNET that wasn’t managed by ARM to deploy an Azure Kubernetes Service proved to be difficult or even impossible.&lt;/p&gt;

&lt;p&gt;Using the CLI and scripts to create the setup was attempted as well, but this didn’t fit the vision of a declarative setup for provisioning infrastructure.
Re-applying the same scripts either broke the setup or created additional, unneeded resources.
A clear no-go.&lt;/p&gt;

&lt;p&gt;As a third option, Terraform was investigated.
It adhered to the vision of declarative definitions and all the components required by the landscape were available in the Azure Terraform provider.
Some basic setups were created and it showed great potential for the required setup.
Terraform roll outs proved to be more stable and the import mechanism properly supports using components which aren’t fully managed by Terraform.
So Terraform to the rescue!&lt;/p&gt;

&lt;h2 id=&quot;how-to-structure-terraform-to-allow-for-a-two-second-tire-change&quot;&gt;How to structure Terraform to allow for a two second tire change&lt;/h2&gt;

&lt;p&gt;One of the challenges of creating a Terraform setup is to determine a way to structure the code.
Looking online provided more questions than answers.
A lot of documentation can be found about how to structure a specific module or how to create modules, but almost no resources discuss how to structure the modules into logical, reusable components.&lt;/p&gt;

&lt;p&gt;The setup was divided into two different categories: managed services wrappers and standardized setup modules.&lt;/p&gt;

&lt;p&gt;The first category is quite straight forward.
For every managed service that is being used, a module is created.
This module includes all the required Terraform resources for that service to operate.
For example, the key vault module contains the Azure Key Vault Terraform resource, but also the role assignments for the different Active Directory groups that require access to that key vault.
Another example is the container registry module.
It contains the Azure Container Registry (ACR) Terraform resource, some role assignments and the Azure Monitoring Diagnostics Settings for making sure the ACR logs are shipped into the correct logs analytics bucket.
This abstraction allows for opinionated grouping of resources that are required for a managed service to operate.&lt;/p&gt;

&lt;p&gt;The second category is a grouping of modules of the first category in order to provide a complete package of features.
This set of modules are the ones that are actually provisioned during a deployment.
Currently, only two of these modules exist: a cluster module and a namespace module.&lt;/p&gt;

&lt;p&gt;The cluster module contains all modules required to set up the shared resources for all environments with a similar purpose.
For example, all resources shared by all development environments.
This module contains the Kubernetes cluster module, multiple resource group modules, a key vault module, networking modules and modules that configure identity and role management.
This module is used once per cluster, meaning once for development, acceptance and production respectively.&lt;/p&gt;

&lt;p&gt;The second module is used to set up a namespace for a specific purpose: an environment for a development team, a specific testing environment or a rock-solid production environment.
This module contains the DNS zone configuration, an API gateway module, another key vault module and a database module.&lt;/p&gt;

&lt;p&gt;These cluster and namespace modules are then used in a single Terraform module per cluster: meaning a single module for the development cluster together with all namespaces in that cluster.
This makes making changes to the infrastructure as easy as running a single Jenkins job executing that module.
We decided to version the modules and created specific modules for development, acceptance and production.
This separation, in combination with the versioning, has allowed us to test module updates and upgrades of the configuration upfront.
Similar to deploying application code to an acceptance or test environment before rolling it into production.&lt;/p&gt;

&lt;h2 id=&quot;where-to-draw-a-line-everything-in-terraform&quot;&gt;Where to draw a line, everything in terraform&lt;/h2&gt;

&lt;p&gt;When we first started using Terraform, we were tempted to configure the entire landscape using it.
A good example was the API manager setup we were using.
The Terraform setup included detailed configuration of the application it was hosting.
Another example was a Kubernetes Terraform module we created, that beside infrastructure related setup for storage classes, was also creating service accounts for operators we were running.
This leakage of concerns made it hard to maintain, but it also introduced duplication of configuration towards the application deployment.&lt;/p&gt;

&lt;p&gt;We decided to take a stricter approach, and consider two main responsibilities: orchestration and provisioning.
Orchestration could be translated to an engineer that would take a screwdriver and set up all the required infrastructure.
The outcome of this work would be the minimum needed setup to start using the services and configure them for actual use.&lt;/p&gt;

&lt;p&gt;Provisioning is the work that comes after this, and doesn’t require a screwdriver, or being near the box.
We decided that the orchestration part, setting up the infrastructure, is where we use Terraform exclusively.
The provisioning part, where we start to configure the infrastructure to work with our application, is where we use tools that are native to the application deployment.&lt;/p&gt;

&lt;p&gt;We didn’t get there immediately though.
In early iterations, we had split it into two Terraform runs: an orchestration run and a configuration run.
In later iterations we were able to replace the configuration runs with components that were closer to the application landscape, which was a combination of privileged Kustomize deployment runs and building our own Kubernetes operators.&lt;/p&gt;

&lt;p&gt;A good rule of thumb is; if you can tie the component you are configuring to something that has meaning in the application domain, it should be managed in the application landscape.
Another good indication that the application domain leaked into the infrastructure domain is when you have to re-orchestrate your infrastructure together with application changes.&lt;/p&gt;

&lt;h2 id=&quot;how-can-you-beat-us&quot;&gt;How can you beat us&lt;/h2&gt;

&lt;p&gt;With this setup, lead-time for provisioning an environment went down from 6 weeks of ticketing magic to just a 90 minute Jenkins run.
The decision to adopt Terraform helped us to minimize human errors, and has enabled us to deploy new environments by a single push of a button.
Infrastructure upgrades have become more and more stable over the adoption period and the different modules have matured to the point where they barely change anymore.&lt;/p&gt;

&lt;p&gt;The work being done by the Azure Terraform provider community has helped tremendously.
They release new versions of the provider every week.
They aren’t at feature parity with ARM, not by a long shot, but at the pace they are adding support for features, they will catch up very fast.
The provider is also very stable and if an issue occurs (like &lt;a href=&quot;https://github.com/terraform-providers/terraform-provider-azurerm/issues/6525&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;this&lt;/a&gt; AKS bug) it’s fixed within the next release.&lt;/p&gt;

&lt;h2 id=&quot;finally-two-golden-tips-when-using-terraform&quot;&gt;Finally, two golden tips when using Terraform&lt;/h2&gt;

&lt;p&gt;The first is to start using remote state storage as soon as possible when using Terraform.
It provides an easy way to get an accurate Terraform plan which in turn provides an accurate overview of the actions Terraform will execute during the roll-out.&lt;/p&gt;

&lt;p&gt;The second one is to roll out the modules often and validate their effects by running tests against them.
Test either outcome, not just the configuration.
The further up the application stack these tests run, the better.
In our current setup, the infrastructure runs are part of a nightly test which performs the following steps:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Completely trash the test infrastructure&lt;/li&gt;
  &lt;li&gt;Deploy the infrastructure based on the latest configuration&lt;/li&gt;
  &lt;li&gt;Deploy the application landscape on top of it&lt;/li&gt;
  &lt;li&gt;Run the application landscape end-to-end tests against that freshly created setup&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Every morning the team smiles when the build is green or (less often now) starts figuring out which component broke and fix it immediately.&lt;/p&gt;

&lt;p&gt;Special thanks to the amazing Unicorn team for creating this setup and to &lt;a href=&quot;https://twitter.com/joyrex2001&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;Vincent van Dam&lt;/a&gt; for co-writing this post!&lt;/p&gt;</content><author><name>{&quot;first_name&quot;=&gt;&quot;Pieter&quot;, &quot;last_name&quot;=&gt;&quot;Vincken&quot;, &quot;linkedin&quot;=&gt;&quot;pieter-vincken-a94b5153&quot;, &quot;twitter&quot;=&gt;&quot;PieterVincken&quot;, &quot;github&quot;=&gt;&quot;pietervincken&quot;, &quot;permalink&quot;=&gt;&quot;/author/pieter_vincken/&quot;, &quot;avatar&quot;=&gt;&quot;pieter-vincken.jpeg&quot;, &quot;title&quot;=&gt;&quot;Cloud Automation Engineer&quot;, &quot;email&quot;=&gt;&quot;pieter.vincken@ordina.be&quot;, &quot;bio&quot;=&gt;&quot;Pieter Vincken is a Cloud Automation Engineer with a strong interest in anything related to Cloud Native. He likes to optimize development workflows, from Ideation until code running in production, by enabling CI/CD to be fully automated. Any solutions he creates, will have started as an architectural drawing.&quot;}</name><email>pieter.vincken@ordina.be</email></author><category term="Cloud" /><category term="Terraform" /><category term="Configuration Management" /><category term="Infrastructure-as-code" /><category term="Cloud" /><summary type="html">Reading time: 7 minutes and 2 seconds</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://ordina-jworks.github.io/img/2020-05-30-terraform/terraform.png" /><media:content medium="image" url="https://ordina-jworks.github.io/img/2020-05-30-terraform/terraform.png" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">Frontend Developer Love 2020</title><link href="https://ordina-jworks.github.io/conference/2020/05/15/frontend-developer-love-2020.html" rel="alternate" type="text/html" title="Frontend Developer Love 2020" /><published>2020-05-15T00:00:00+00:00</published><updated>2020-05-15T00:00:00+00:00</updated><id>https://ordina-jworks.github.io/conference/2020/05/15/frontend-developer-love-2020</id><content type="html" xml:base="https://ordina-jworks.github.io/conference/2020/05/15/frontend-developer-love-2020.html">&lt;h1 id=&quot;table-of-contents&quot;&gt;Table of Contents&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;#introduction&quot;&gt;Introduction&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#how-thinking-small-is-changing-software-development-big-time-by-sander-hoogendoorn&quot;&gt;How thinking small is changing software development big time&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#how-to-pack-your-webpack-by-johannes-ewald&quot;&gt;How to pack your Webpack&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#svelte-the-last-framework-we-need-by-alexander-esselink&quot;&gt;Svelte: the last framework we need?&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#serverless-gives-you-wings-by-yan-cui&quot;&gt;Serverless gives you wings&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#modern-solutions-for-e2e-testing-by-anastasiia-dragich&quot;&gt;Modern solutions for e2e testing&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#practical-a11y-for-web-apps-by-bob-bijvoet&quot;&gt;Practical a11y for web apps&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#micro-interactions-with-react-spring-by-emma-bostian&quot;&gt;Micro-interactions with React Spring&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#but-youre-not-facebook-by-kitze&quot;&gt;But, you’re not Facebook&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#beats-rhymes-and-unit-tests-by-tony-edwards&quot;&gt;Beats, rhymes and unit tests&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#graphql-without-a-database-by-roy-derks&quot;&gt;GraphQL without a database&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#dx-is-the-new-black-learnings-from-using-nuxt-and-storybook-at-scale-by-aurélie-violette&quot;&gt;DX is the new black. Learnings from using Nuxt and Storybook at scale&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#refactor-your-life-by-noer-paanakker--sima-milli&quot;&gt;Refactor your life&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#blazor-with-webassembly-by-don-wibier&quot;&gt;Blazor with WebAssembly&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#audio-streaming---using-webrtc-for-building-your-own-voice-ais-by-lee-boonstra&quot;&gt;Audio Streaming - Using WebRTC for building your own Voice AIs&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#the-future-of-real-time-offline-data-by-nader-dabit&quot;&gt;The future of real-time, offline, data&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#the-state-of-webassembly-by-sendil-kumarn&quot;&gt;The state of WebAssembly&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#conclusion&quot;&gt;Conclusion&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;introduction&quot;&gt;Introduction&lt;/h1&gt;

&lt;p&gt;The Frontend Developer Love conference day was the first of 3 conference days that I was visiting in Amsterdam.
While the last 2 days were focussed on VueJS, the first day was filled with more generic frontend topics.
These topics ranged from Webpack, serverless to micro-interactions and more inspirational talks.
With a big countdown clock, the conference was about to start.&lt;/p&gt;

&lt;p&gt;&lt;img alt=&quot;Countdown clock on screen before the Frontend Developer Love conference started&quot; src=&quot;/img/frontend-love-2020/countdown.jpg&quot; class=&quot;image fit&quot; style=&quot;margin:0px auto;&quot; /&gt;&lt;/p&gt;

&lt;h1 id=&quot;how-thinking-small-is-changing-software-development-big-time-by-sander-hoogendoorn&quot;&gt;How thinking small is changing software development big time, by &lt;a href=&quot;https://twitter.com/aahogendoorn&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;Sander Hoogendoorn&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;As a keynote, we started the day with a non-technical talk.
These days we developers face mainly two challenges: the speed at which we have to deliver results and the legacy code that we must handle.
With the constant changing technology landscape, we can expect that software will not survive for 1000 years.
Regularly adapting and delivering is a key component of delivering quality software.
Sander talked about his current and previous experiences in the volatile world of software development.
Like how a 9-to-5 mentality is not always the right choice as not everybody is that productive during the day.
&lt;img alt=&quot;Graph depicting productivity of a geek during the day&quot; src=&quot;/img/frontend-love-2020/geek-productivity-at-work.png&quot; class=&quot;image fit&quot; style=&quot;margin:0px auto;&quot; /&gt;
Factors such as strict working hours ruin productivity.
But the same can be said about the usage of open floor plans which explains the popularity of noise-cancelling headphones.
We need to think for ourselves and don’t copy what other big corporations might be doing.
In the end, it all boils down to trying to release as fast, as often and as small as you can.
Even if that means following weird office hours…&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Check out &lt;a href=&quot;https://www.youtube.com/watch?v=64LI5v470VY&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;Sander’s talk&lt;/a&gt;, &lt;a href=&quot;https://twitter.com/aahogendoorn&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;Sander’s Twitter&lt;/a&gt;, &lt;a href=&quot;https://speakerdeck.com/aahoogendoorn/its-a-small-world-after-all-full-edition-fall-2019&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;his slides&lt;/a&gt; and the &lt;a href=&quot;https://www.insanityworks.org/acme/2013/5/14/geek-productivity-chart.html&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;geek productivity chart resource&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h1 id=&quot;how-to-pack-your-webpack-by-johannes-ewald&quot;&gt;How to pack your Webpack, by &lt;a href=&quot;https://twitter.com/jhnns&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;Johannes Ewald&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;In this talk, Johannes explained more what Webpack is and how you can define your own Webpack config.
While most frontend developers use CLIs these days, a lot can be learned from actually writing a Webpack config so that you know what your favourite CLI is generating.
With the latest Webpack we now have TypeScript support in our Webpack config file.
He also described the several key components of a Webpack config.
Such as the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;entry&lt;/code&gt; element which denotes the base of your module tree.&lt;/p&gt;

&lt;p&gt;In the end Johannes gave a couple of tips to create a good Webpack along with some tips for your code to decrease the bundle size that Webpack will generate:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Most apps will have a good bundle size just by setting the Webpack &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;mode&lt;/code&gt; to &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;production&lt;/code&gt;. You don’t need to overthink your configuration, Webpack already optimises a lot for you&lt;/li&gt;
  &lt;li&gt;Lazy load modules with the use of &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;import()&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;Check &lt;a href=&quot;https://bundlephobia.com&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;bundlephobia.com&lt;/a&gt; to determine if a bundle could be replaced by something more lightweight or more tree-shakeable&lt;/li&gt;
  &lt;li&gt;Measure the performance with a tool like &lt;a href=&quot;https://developers.google.com/web/tools/lighthouse/&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;Lighthouse&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Don’t overestimate long-term caching. It is ok for fonts, images and CSS but caching whole pages could be not as rewarding for the amount of effort you need to put into it&lt;/li&gt;
  &lt;li&gt;Minify your CSS with a tool like &lt;a href=&quot;https://github.com/NMFR/optimize-css-assets-webpack-plugin&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;optimize-css-assets-webpack-plugin&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;p&gt;Check out &lt;a href=&quot;https://www.youtube.com/watch?v=z8YP5ZEUIxA&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;Johannes’ talk&lt;/a&gt;, &lt;a href=&quot;https://twitter.com/jhnns&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;Johannes’s Twitter&lt;/a&gt; and his &lt;a href=&quot;https://peerigon.github.io/talks/2020-02-19-frontend-developer-love-how-to-pack-your-webpack/slides/#/&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;slides&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h1 id=&quot;svelte-the-last-framework-we-need-by-alexander-esselink&quot;&gt;Svelte: the last framework we need?, by &lt;a href=&quot;https://twitter.com/DexterLabsNL&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;Alexander Esselink&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;On its website, &lt;a href=&quot;https://svelte.dev/&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;Svelte&lt;/a&gt;  claims to allow you to write “cybernetically enhanced web apps”.
But what does that mean?
Alexander tried to explain why Svelte is such a great framework.
To start with, Svelte is &lt;a href=&quot;https://svelte.dev/blog/svelte-3-rethinking-reactivity&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;truly reactive&lt;/a&gt;.
While in most frameworks you need to call certain functions like a ‘set’ or ‘setState’, Svelte parses your JS to add reactivity.
So a basic statement like &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;count += 1;&lt;/code&gt; will be reactive as all code that relies on the value of &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;count&lt;/code&gt; will be updated.
An example Svelte component could look like this:&lt;/p&gt;
&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;script&amp;gt;&lt;/span&gt;
	&lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;count&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

	&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;handleClick&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;nx&quot;&gt;count&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;

&lt;span class=&quot;nt&quot;&gt;&amp;lt;button&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;on:click=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;{handleClick}&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
	Clicked {count} {count === 1 ? 'time' : 'times'}
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/button&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;style&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;button&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;nl&quot;&gt;border&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1px&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;solid&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;red&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/style&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;As you can see, we have grouped everything of the component into one file: styling, the script and the HTML code.
Between the style tags, you can put your regular CSS.
Between the script tags, you can put JavaScript while your HTML can reference anything that you’ve defined within your script tag such as &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;count&lt;/code&gt;.
This allows for the creation of small readable components that anybody, even someone without prior knowledge of Svelte can read.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Check out &lt;a href=&quot;https://www.youtube.com/watch?v=U4ll3QWkpD4&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;Alexander’s talk&lt;/a&gt;, &lt;a href=&quot;https://twitter.com/DexterLabsNL&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;Alexander’s Twitter&lt;/a&gt;, &lt;a href=&quot;https://svelte.dev/&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;Svelte.dev&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h1 id=&quot;serverless-gives-you-wings-by-yan-cui&quot;&gt;Serverless gives you wings, by &lt;a href=&quot;https://twitter.com/theburningmonk&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;Yan Cui&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;These days we can expect that we will have users of our web applications that are distributed around the world and they will use our web app 24/7.
Because of this, deploying your web application into the cloud is very interesting.
It is resilient, scalable, fast and secure.
As we always need to prepare for success, these are all contributing elements to choose for something in the cloud.
For some, using Docker seems to be the holy grail, especially in combination with container services like Kubernetes.
But to quote Matt Klein: “Unless you’re an infrastructure company, infrastructure is basically overhead”.&lt;/p&gt;

&lt;p&gt;Going serverless means that:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;you don’t pay for it if no-one uses it&lt;/li&gt;
  &lt;li&gt;you don’t need to worry about scaling&lt;/li&gt;
  &lt;li&gt;you don’t need to provision and manage servers&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;With the help of Functions-as-a-Service tools like &lt;a href=&quot;https://cloud.google.com/functions&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;Google Cloud Functions&lt;/a&gt;, &lt;a href=&quot;https://aws.amazon.com/lambda/&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;AWS Lambda&lt;/a&gt; and more, frontend developers can leverage whole blocks of business logic into functions that live in the cloud.
As a result, they can decrease the amount of work that backenders need to do, thus allowing them to focus on more critical stuff and not being occupied with providing some basic API.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Check out &lt;a href=&quot;https://www.youtube.com/watch?v=A6wbpkSmhrA&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;Yan’s talk&lt;/a&gt;, &lt;a href=&quot;https://twitter.com/theburningmonk&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;Yan’s Twitter&lt;/a&gt; and his &lt;a href=&quot;https://www.slideshare.net/theburningmonk/serverless-gives-you-wings&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;slides&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h1 id=&quot;modern-solutions-for-e2e-testing-by-anastasiia-dragich&quot;&gt;Modern solutions for e2e testing, by Anastasiia Dragich&lt;/h1&gt;
&lt;p&gt;During her talk, Anastasiia gave an overview of all current end-to-end testing frameworks.
While the &lt;a href=&quot;https://www.selenium.dev/projects/&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;Selenium WebDriver&lt;/a&gt; can be considered as Genesis, we have seen a steady rise of different e2e frameworks.
If you’re looking for an all-in-one solution, &lt;a href=&quot;https://www.cypress.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;Cypress&lt;/a&gt; is the obvious choice.
But we have some other options although they might not be all-in-one solutions.
&lt;a href=&quot;https://pptr.dev/&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;Puppeteer&lt;/a&gt; for example is a quicker alternative as its only task is to control a browser so you can add your own testrunner like &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;jest&lt;/code&gt;.
But while Puppeteer is a valid choice, there is a new kid on the block called &lt;a href=&quot;https://github.com/microsoft/playwright&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;PlayWright&lt;/a&gt;.
PlayWright is built by the same Puppeteer people who now work for Microsoft.
It is a Node library to automate the Chromium, Webkit and Firefox browsers with a single API.&lt;/p&gt;

&lt;p&gt;An example of how powerful PlayWright is, lies in the fact that we have full control over the browser context.
For example, we can emulate that we visit a website from a specific location with a specific type of mobile browser and take a screenshot:&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;webkit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;devices&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;playwright&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;iPhone11&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;devices&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;iPhone 11 Pro&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;

&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;async&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;browser&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;await&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;webkit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;launch&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;context&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;await&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;browser&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;newContext&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;viewport&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;iPhone11&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;viewport&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;userAgent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;iPhone11&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;userAgent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;geolocation&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;longitude&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;12.492507&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;latitude&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;41.889938&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;permissions&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;geolocation&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;page&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;await&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;context&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;newPage&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;await&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;page&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;goto&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;https://maps.google.com&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;await&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;page&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;click&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;text=&quot;Your location&quot;&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;await&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;page&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;waitForRequest&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/.*preview&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\/&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;pwa/&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;await&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;page&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;screenshot&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;colosseum-iphone.png&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;await&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;browser&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;close&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;})();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;In the end, there are multiple tools available to perform e2e tests on your web application, you just have to pick the one that best fits your needs.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Check out &lt;a href=&quot;https://www.youtube.com/watch?v=KdjYUtjVs3I&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;Anastassiia’s talk&lt;/a&gt;, &lt;a href=&quot;https://www.selenium.dev/projects/&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;Selenium WebDriver&lt;/a&gt;, &lt;a href=&quot;https://www.cypress.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;Cypress&lt;/a&gt;, &lt;a href=&quot;https://pptr.dev/&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;Puppeteer&lt;/a&gt; and &lt;a href=&quot;https://github.com/microsoft/playwright&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;PlayWright&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h1 id=&quot;practical-a11y-for-web-apps-by-bob-bijvoet&quot;&gt;Practical a11y for web apps, by Bob Bijvoet&lt;/h1&gt;
&lt;p&gt;Even before you start writing a11y specific HTML such as the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;aria-label&lt;/code&gt; attribute, we can take certain tips into consideration to make our web apps more accessible.
As a start, our pages should be perceivable:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Logical ordering of elements: what’s important such as an article header should come first&lt;/li&gt;
  &lt;li&gt;Don’t rely on colour: be aware that not everybody can perceive colour the same way as you can. Use shapes and different sizes to distinguish between elements, colour in itself is not enough&lt;/li&gt;
  &lt;li&gt;Use contrast: all different elements should be distinguishable one from the other&lt;/li&gt;
  &lt;li&gt;Don’t rely on orientation: with the rising number of mobile users, you should keep in mind that not everybody uses their phone in portrait mode, make sure that your web application also works in landscape mode&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;While trying to make your page as perceivable as possible, don’t forget to focus on making your page operable.
A lot of users rely on a keyboard so make sure that they can tab through your content easily.
Having a logical focus order makes most sense.
To make your page more operable, add labels to UI elements to help them describe what they do.
For example, it is of no use to add a search icon to a search button without adding the “Search” text somewhere.
Screen reader users will be very grateful for such small adaptations.&lt;/p&gt;

&lt;p&gt;Most of the tips that Bob gave were easy to verify on your own.
For example, try to use your web application with only your keyboard to check if it’s easy to operate.
Or how about turning of your CSS to see if the order is logical and if your application is still usable.
And if you can, try to use your web application with just a screen reader.
On a Windows, &lt;a href=&quot;https://www.nvaccess.org/&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;NVDA&lt;/a&gt; is a good option while MacOS X has the &lt;a href=&quot;https://www.apple.com/voiceover/info/guide/_1121.html&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;VoiceOver&lt;/a&gt; option.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Check out &lt;a href=&quot;https://www.youtube.com/watch?v=btxOl52LTns&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;Bob’s talk&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h1 id=&quot;micro-interactions-with-react-spring-by-emma-bostian&quot;&gt;Micro-interactions with React Spring, by &lt;a href=&quot;https://twitter.com/EmmaBostian&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;Emma Bostian&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;Micro-interactions are small animations.
They are important in your web app as they have a lot of added value.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;They enforce perceived performance&lt;/li&gt;
  &lt;li&gt;They illustrate a state change&lt;/li&gt;
  &lt;li&gt;They draw attention to something&lt;/li&gt;
  &lt;li&gt;They inform the user about the status of a task&lt;/li&gt;
  &lt;li&gt;They build habits&lt;/li&gt;
  &lt;li&gt;They delight our users&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Ideally, for each interaction that results in a state change you should have an animation.
This will help improve the user experience as the user will better perceive what has changed.
It is best to keep in mind that:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Animations should be accessible. Accessibility should never suffer from the introduction of an animation&lt;/li&gt;
  &lt;li&gt;You should make them relatable&lt;/li&gt;
  &lt;li&gt;You should be intentional with the placement&lt;/li&gt;
  &lt;li&gt;You don’t let your users wait. Why not already start an animation while for example your backend call is going?&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;During her talk, Emma showcased her live coding skills as she took a full screen menu and animated it with the use of &lt;a href=&quot;https://www.react-spring.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;React-spring&lt;/a&gt;.
React-spring looks to be an interesting library that exposes hooks such as &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;useSpring()&lt;/code&gt; to easily configure animations.
Having for example a menu slide in from the top of your page with a change in opacity, could be something as simple as this in your component:&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;fullMenuVisible&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;setFullMenuVisible&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;useState&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;fullMenuAnimation&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;useSpring&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;
	&lt;span class=&quot;na&quot;&gt;transform&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;fullMenuVisible&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;?&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;`translateY(0)`&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;`translateY(-100%)`&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
	&lt;span class=&quot;na&quot;&gt;opacity&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;fullMenuVisible&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;?&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;After that you can add &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;fullMenuAnimation&lt;/code&gt; to your HTML with the react-spring factory &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;animated&lt;/code&gt;.
A menu can thus end up like this:&lt;/p&gt;

&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;animated&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;className=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;menu menu--full&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;style=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;{fullMenuAnimation}&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
	&lt;span class=&quot;nt&quot;&gt;&amp;lt;nav&amp;gt;&lt;/span&gt;
		&lt;span class=&quot;nt&quot;&gt;&amp;lt;ul&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;className=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;menu-list menu-list--full&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
			&lt;span class=&quot;nt&quot;&gt;&amp;lt;li&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;className=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;menu-list-item menu-list-item--full&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
				&lt;span class=&quot;nt&quot;&gt;&amp;lt;a&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;/&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;Home&lt;span class=&quot;nt&quot;&gt;&amp;lt;/a&amp;gt;&lt;/span&gt;
			&lt;span class=&quot;nt&quot;&gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
			&lt;span class=&quot;c&quot;&gt;&amp;lt;!-- more elements --&amp;gt;&lt;/span&gt;
		&lt;span class=&quot;nt&quot;&gt;&amp;lt;/ul&amp;gt;&lt;/span&gt;
	&lt;span class=&quot;nt&quot;&gt;&amp;lt;/nav&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/animated&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;.div&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;blockquote&gt;
  &lt;p&gt;Check out &lt;a href=&quot;https://www.youtube.com/watch?v=NBb5Dt-uc40&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;Emma’s talk&lt;/a&gt;, &lt;a href=&quot;https://twitter.com/EmmaBostian&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;Emma’s Twitter&lt;/a&gt;, &lt;a href=&quot;https://www.react-spring.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;React-spring&lt;/a&gt;, the &lt;a href=&quot;https://codesandbox.io/s/boring-sun-qe6kn?fontsize=14&amp;amp;hidenavigation=1&amp;amp;theme=dark&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;Codesandbox with the end result&lt;/a&gt;, &lt;a href=&quot;https://stackoverflow.blog/2020/01/16/how-to-create-micro-interactions-with-react-spring-part-1/&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;Emma’s blog post about micro interactions part 1&lt;/a&gt; and &lt;a href=&quot;https://stackoverflow.blog/2020/01/23/micro-interactions-with-react-spring-part-2/&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;Emma’s blog post about micro interactions part 2&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h1 id=&quot;but-youre-not-facebook-by-kitze&quot;&gt;But, you’re not Facebook, by &lt;a href=&quot;https://twitter.com/thekitze&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;Kitze&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;“This is going to be the most entertaining talk of the day, mark my words”, said the friend next to me.
And he was right, Kitze was able to give a fun yet very interesting talk about the current culture in IT companies.
We tend to aim for certain goals that are just not necessary to achieve.
Why should you have a PWA portfolio for example?
Or what’s the point in having a 100 score on all Lighthouse tests?&lt;/p&gt;

&lt;p&gt;&lt;img alt=&quot;Lighthouse scores all 100%&quot; src=&quot;/img/frontend-love-2020/kitze-lighthouse-100.png&quot; class=&quot;image fit&quot; style=&quot;margin:0px auto;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;But what should you do?
Stop solving solved problems! 
There are already enough methods to implement button styling, state management and so on.
There are complete design systems that you can reuse, so why not reuse them?
Because ultimately, your end-users don’t care about the technology.
Look at your analytics once in a while and see if your users like your app or not.
Because even if you have overengineered your app, if the end-users don’t like it then there’s no point.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Check out &lt;a href=&quot;https://twitter.com/thekitze&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;Kitze’s Twitter&lt;/a&gt;, &lt;a href=&quot;https://sizzy.co/&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;Sizzy&lt;/a&gt;, &lt;a href=&quot;https://www.twitch.tv/thekitze&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;Kitze’s Twitch&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h1 id=&quot;beats-rhymes-and-unit-tests-by-tony-edwards&quot;&gt;Beats, rhymes and unit tests, by &lt;a href=&quot;https://twitter.com/tonyedwardspz&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;Tony Edwards&lt;/a&gt;&lt;/h1&gt;

&lt;p&gt;The &lt;a href=&quot;https://wicg.github.io/speech-api/&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;Web Speech API&lt;/a&gt; consists of 2 parts: the &lt;a href=&quot;https://wicg.github.io/speech-api/#api_description&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;Speech Recognition API&lt;/a&gt; and the &lt;a href=&quot;https://wicg.github.io/speech-api/#tts-section&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;Speech Synthesis API&lt;/a&gt;.
In short, the Speech Recognition API allows you to transform speech into text and the Speech Synthesis API allows you to transform text into speech.
In his talk, Tony asked himself: how good would the Speech Recognition API be in analysing hip-hop lyrics.
Tony showcased his abilities to bring a live demo of the implementation of the Speech Recognition API.
Would it be able to transform his live lyrics into text?
Even though the technology still has a long way to go, it was still impressive that it was able to transcribe more than half of his live lyrics.&lt;/p&gt;

&lt;p&gt;&lt;img alt=&quot;55% end result of his live lyrics correctly transcribed&quot; src=&quot;/img/frontend-love-2020/beats-rhymes-unit-tests-results.png&quot; class=&quot;image fit&quot; style=&quot;margin:0px auto;&quot; /&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Check out &lt;a href=&quot;https://www.youtube.com/watch?v=x_L1eQT6TyA&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;Tony’s talk&lt;/a&gt;, &lt;a href=&quot;https://twitter.com/tonyedwardspz&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;Tony’s Twitter&lt;/a&gt; and a Spotify list with &lt;a href=&quot;https://open.spotify.com/playlist/6kCeuSEq5PE7qrMebN8uNf&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;songs from the talk&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h1 id=&quot;graphql-without-a-database-by-roy-derks&quot;&gt;GraphQL without a database, by &lt;a href=&quot;https://twitter.com/gethackteam&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;Roy Derks&lt;/a&gt;&lt;/h1&gt;

&lt;p&gt;GraphQL is one of those technologies that a lot of frontenders want to use.
But most backenders are not that keen to add a GraphQL API to their existing REST APIs.
But why would that stop you?
There are multiple options to integrate a GraphQL API in your project without having to bother your backenders.
Roy highlighted two of them.&lt;/p&gt;

&lt;p&gt;The first one was &lt;a href=&quot;https://www.apollographql.com/docs/link/links/rest/&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;apollo-link-rest&lt;/a&gt;.
This allows you to call REST endpoints from within your GraphQL queries while having all your data managed by &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ApolloClient&lt;/code&gt;.
These REST endpoints can be bundled together in the same GraphQL query so that getting information about a product with ID 3 and data about its rating and categories, might end up like this:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;query getProduct {
	product @rest(type: &quot;Product&quot;, path: &quot;product/3&quot;) {
		id
		name
		price
		thumbnail
		categories @rest(type: &quot;Category&quot;, path: &quot;products/3/categories&quot;) {
			name
		}
		rating @rest(type: &quot;Rating&quot;, path: &quot;products/3/rating&quot;) {
			average
			count
		}
	}
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Another way to integrate a GraphQL API is to use the package &lt;a href=&quot;https://www.npmjs.com/package/openapi-to-graphql&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;OpenAPI-to-GraphQL&lt;/a&gt;.
The idea behind this is to use an OpenAPI specification coming from something like &lt;a href=&quot;https://swagger.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;Swagger&lt;/a&gt; that will be used to generate a schema which will build a GraphQL server.
To help with all this, there even is a &lt;a href=&quot;https://github.com/IBM/openapi-to-graphql/tree/master/packages/openapi-to-graphql-cli&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;CLI&lt;/a&gt; to make your life even more easy.&lt;/p&gt;

&lt;p&gt;With these two tools, you can already start integrating the usage of GraphQL in your frontend code without having to rely on backend.
The backend is not forced to immediately start making the transition from classic REST APIs to GraphQL.
This is the perfect way to test out if GraphQL brings any added value to your project.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Check out &lt;a href=&quot;https://www.youtube.com/watch?v=yygC60yamh8&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;Roy’s talk&lt;/a&gt;, &lt;a href=&quot;https://twitter.com/gethackteam&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;Roy’s Twitter&lt;/a&gt;, &lt;a href=&quot;https://www.slideshare.net/RoyDerks1/graphql-without-a-database-frontend-developer-love&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;his slides&lt;/a&gt;, &lt;a href=&quot;https://www.apollographql.com/docs/link/links/rest/&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;apollo-link-rest&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h1 id=&quot;dx-is-the-new-black-learnings-from-using-nuxt-and-storybook-at-scale-by-aurélie-violette&quot;&gt;DX is the new black. Learnings from using Nuxt and Storybook at scale, by &lt;a href=&quot;https://twitter.com/purple_orwel&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;Aurélie Violette&lt;/a&gt;&lt;/h1&gt;

&lt;p&gt;Aurélie used &lt;a href=&quot;https://storybook.js.org/&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;Storybook&lt;/a&gt; in her projects as a tool to demo stuff, have live documentation and to enable visually driven development.
Storybook in itself is already a great tool to showcase your components with their different use cases.
But Aurélie extended its functionality by adding the &lt;a href=&quot;https://www.npmjs.com/package/@storybook/addon-knobs&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;Knobs addon&lt;/a&gt; as well as the &lt;a href=&quot;https://www.npmjs.com/package/@storybook/addon-docs&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;Docs addon&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The concepts that she uses, is to bring “Nuxt logic” to your Storybook project.
By adding components into Storybook, developers are tempted to just write the visualisation of their components with some mock data.
But why not add some business logic into it instead of just being occupied with showcasing your components?
If your actual component uses data coming from a store, why not implement a store in your Storybook stories to help you mimic the real use case of your components?
Storybook’s functionality can be extended by writing decorators.
An example she gave of a decorator to add a store to your components is this:&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;	
&lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;addons&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;makeDecorator&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;@storybook/addons&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;STORY_CHANGED&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;@storybook/core-events&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;
 
&lt;span class=&quot;k&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;withStore&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;makeDecorator&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;withStore&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;parameterName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;store&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;skipIfNoParametersOrOptions&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;wrapper&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getStory&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;context&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;parameters&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{}&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;})&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;modules&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{}&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;parameters&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;nx&quot;&gt;created&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;modules&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
          &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;$store&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;registerModule&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;modules&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;channel&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;addons&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getChannel&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;channel&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;on&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;STORY_CHANGED&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
          &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;modules&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;$store&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;unregisterModule&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
          &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;template&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;lt;story&amp;gt;&amp;lt;/story&amp;gt;&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;After activating the decorator with &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;addDecorator(withStore)&lt;/code&gt;, your components will have access to the store.
So now you can make your examples in Storybook even more linked to the real use of the components.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Check out &lt;a href=&quot;https://www.youtube.com/watch?v=R9NXT_qU7qM&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;Aurélie’s talk&lt;/a&gt;, &lt;a href=&quot;https://twitter.com/purple_orwel&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;Aurélie’s Twitter&lt;/a&gt; and her &lt;a href=&quot;https://slides.com/aurelieviolette-1/dx-is-the-new-black#/&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;slides&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h1 id=&quot;refactor-your-life-by-noer-paanakker--sima-milli&quot;&gt;Refactor your life, by Noer Paanakker &amp;amp; Sima Milli&lt;/h1&gt;

&lt;div style=&quot;position: relative; width: 100%; height: 0; padding-bottom: 55%;&quot;&gt;
&lt;iframe src=&quot;https://www.youtube.com/embed/GSyQayMEID8?rel=0&quot; width=&quot;100%&quot; height=&quot;100%;&quot; style=&quot;position: absolute; left: 0; top: 0; bottom: 0; right: 0;&quot;&gt;&lt;/iframe&gt;
&lt;/div&gt;

&lt;p&gt;Noer and Sima talked about &lt;a href=&quot;https://www.hackyourfuture.net/&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;Hack Your Future&lt;/a&gt;, a coding school for people that have limited access to education and the labour market.
They talked about a few of the heart breaking stories of their students and highlighted how the program helped these people try to build a brighter future for themselves.
In just over 4 years, they’ve helped get 120+ people land a good tech job.
With &lt;em&gt;Behind The Source&lt;/em&gt;, they highlight a couple of the other stories on how being a refugee wasn’t a choice but becoming a developer was a choice.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Check out &lt;a href=&quot;https://www.youtube.com/watch?v=jczJ9IPH-Aw&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;Noer &amp;amp; Sima’s talk&lt;/a&gt;, &lt;a href=&quot;https://www.hackyourfuture.net/&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;Hack Your Future&lt;/a&gt; and the &lt;a href=&quot;https://www.youtube.com/watch?v=GSyQayMEID8&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;Behind The Source video&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h1 id=&quot;blazor-with-webassembly-by-don-wibier&quot;&gt;Blazor with WebAssembly, by &lt;a href=&quot;https://twitter.com/donwibier&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;Don Wibier&lt;/a&gt;&lt;/h1&gt;

&lt;p&gt;Blazor lets you build interactive web applications in C# instead of JavaScript.
In fact, it allows you to create a component-based UI with a combination of C#, HTML and CSS.
Both the client and server-side code are written in C#.
This has one big benefit: you can share code and libraries between your front- and backend code.&lt;/p&gt;

&lt;p&gt;A really basic example of Blazor code would be this:&lt;/p&gt;
&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;h1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Counter&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/h1&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&amp;gt;
&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Current&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;count&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;nd&quot;&gt;currentCount&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/p&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&amp;gt;
&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;button&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;btn btn-primary&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;nd&quot;&gt;onclick&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;IncrementCount&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Click&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;me&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/button&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&amp;gt;
&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;nd&quot;&gt;code&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;kr&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;currentCount&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

	&lt;span class=&quot;kr&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;IncrementCount&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;nx&quot;&gt;currentCount&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Those familiar with C# and mainly .Net Razor pages, will recognise the syntax.
Razor allows you to write both your HTML and C# in the same file.&lt;/p&gt;

&lt;p&gt;One of the interesting features of Blazor is the ability to compile it to WebAssembly.
In fact, your client-side C# code is being run by WebAssembly in your browser.&lt;/p&gt;

&lt;p&gt;In a Blazor project, you even have your client-side and server-side code right besides each other.
A typical Blazor project has the following structure:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;/Client&lt;/li&gt;
  &lt;li&gt;/Server&lt;/li&gt;
  &lt;li&gt;/Shared&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;In this structure, your whole frontend is situated in &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/Client&lt;/code&gt; while all your backend code is situated in &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/Server&lt;/code&gt;.
If you are in need of any code sharing, you can put it into &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/Shared&lt;/code&gt; and it will be available in both &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/Client&lt;/code&gt; and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/Server&lt;/code&gt;.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Check out &lt;a href=&quot;https://www.youtube.com/watch?v=ZAFqw952GQM&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;Don’s talk&lt;/a&gt;, &lt;a href=&quot;https://twitter.com/donwibier&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;Don’s Twitter&lt;/a&gt; and &lt;a href=&quot;https://dotnet.microsoft.com/apps/aspnet/web-apps/blazor&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;Blazor&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h1 id=&quot;audio-streaming---using-webrtc-for-building-your-own-voice-ais-by-lee-boonstra&quot;&gt;Audio Streaming - Using WebRTC for building your own Voice AIs, by &lt;a href=&quot;https://twitter.com/ladysign&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;Lee Boonstra&lt;/a&gt;&lt;/h1&gt;

&lt;p&gt;Tools like the &lt;a href=&quot;https://assistant.google.com/&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;Google Assistant&lt;/a&gt;, &lt;a href=&quot;https://developer.amazon.com/en-US/alexa&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;Amazon Alexa&lt;/a&gt; and &lt;a href=&quot;https://www.apple.com/siri/&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;Apple’s Siri&lt;/a&gt; are becoming more popular.
The usage of voice assistants is becoming more mainstream as prices are dropping and they are becoming less of a gimmick and more of a tool to use during your everyday life.&lt;/p&gt;

&lt;p&gt;And while there are lots of developer tools available to integrate your app with these particular voice assistants, this might not be your best course of action.
You’re limited to the technical requirements of these assistants, they might be overkill for your use case or they might not fit for your enterprise usage.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://webrtc.org/&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;WebRTC&lt;/a&gt; is an open web standard and is available as a regular JavaScript API in all major browsers.
It allows for real-time communication (RTC) in the form of audio and video communication via direct peer-to-peer communication.
&lt;a href=&quot;https://github.com/muaz-khan/RecordRTC&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;RecordRTC&lt;/a&gt; is a WebRTC JavaScript library for audio, video, screen and canvas recording.
By combining RecordRTC together with a tool such as &lt;a href=&quot;https://dialogflow.com/&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;Dialogflow&lt;/a&gt; that can parse voice recordings to text, we can create our very own voice assistant.&lt;/p&gt;

&lt;p&gt;Tools such as Dialogflow use machine learning to parse voice recordings to achieve intent matching.
An intent categorizes an end-user’s intention for one conversation turn.
By trying to match phrases or parts of phrases, Dialogflow tries to classify the end-user expression to the best intent.
It then tries to parse the input with the help of the intent to extract information.
For the example of weather forecast queries, if Dialogflow is able to match the queries to the forecast intent, it knows it can try to extract information such as time and location.&lt;/p&gt;

&lt;p&gt;&lt;img alt=&quot;Intent matching diagram for weather forecast queries&quot; src=&quot;/img/frontend-love-2020/intent-match-forecast.svg&quot; class=&quot;image fit&quot; style=&quot;margin:0px auto;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Linked to this intent, one can add actions to perform or responses to give.
By training the system, the classification of intents can be improved as to ensure that the voice assistant gives back the correct answer.
During her talk, Lee demonstrated the &lt;a href=&quot;https://github.com/dialogflow/selfservicekiosk-audio-streaming&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;Airport SelfService Kiosk&lt;/a&gt;, a demo in which microphone streaming is used to give the end-user information linked to their flight in an airport.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Check out &lt;a href=&quot;https://www.youtube.com/watch?v=6JD8WC1LV7g&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;Lee’s talk&lt;/a&gt;, &lt;a href=&quot;https://twitter.com/ladysign&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;Lee’s Twitter&lt;/a&gt;, her &lt;a href=&quot;https://speakerdeck.com/savelee/implementing-a-custom-ai-voice-assistant-by-streaming-webrtc-to-dialogflow-and-cloud-speech&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;slides&lt;/a&gt;, &lt;a href=&quot;https://www.webrtc-experiment.com/RecordRTC/&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;RecordRTC&lt;/a&gt;, &lt;a href=&quot;https://dialogflow.com/&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;Dialogflow&lt;/a&gt; and the &lt;a href=&quot;https://github.com/dialogflow/selfservicekiosk-audio-streaming&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;Airport SelfService Kiosk&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h1 id=&quot;the-future-of-real-time-offline-data-by-nader-dabit&quot;&gt;The future of real-time, offline, data, by &lt;a href=&quot;https://twitter.com/dabit3&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;Nader Dabit&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;When trying to write an offline-first app, you should take three things into account:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Code should work offline &amp;amp; online&lt;/li&gt;
  &lt;li&gt;Write your data locally and replicate it to a database: you should always have a local copy of all the relevant data&lt;/li&gt;
  &lt;li&gt;Provide good user experience in case of bad internet: your app should still be usable when your user has internet issues&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Your app should feel real-time:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Give your user a sense of real-time: don’t delay things and add animations to enhance the feeling of real-time&lt;/li&gt;
  &lt;li&gt;Allow for synchronisation between multiple devices&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Tools such as &lt;a href=&quot;https://aws.amazon.com/appsync/&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;AWS AppSync&lt;/a&gt; and &lt;a href=&quot;https://aws.amazon.com/amplify/&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;AWS Amplify&lt;/a&gt; can help you with that.
AppSync is a managed service that uses GraphQL to make it easy for applications to get the data they need from multiple sources with the option to have real-time updates.
Amplify is a framework to build cloud-based full-stack serverless apps.
By combining the forces of these two tools, we can create real-time, offline data, especially if we combine it with GraphQL.&lt;/p&gt;

&lt;p&gt;Your data model can be defined by a GraphQL schema.
In your application, you can use GraphQL subscriptions to have real-time updates for your application data.
There are options to get updates such as long polling, server sent events and web sockets.
It depends on your use case to choose what option is best for you.&lt;/p&gt;

&lt;p&gt;But getting real-time updates also forces you to think about conflict detection and resolution.
Like what do you do when you get multiple updates at the same time?
What if your connection is down for a while?
There are a couple of popular ways to tackle these issues.&lt;/p&gt;

&lt;p&gt;AppSync already uses the solution of monotonic counters combined with a base table that contains all your base data while also maintaining a change table to log all operations that happen on the base data.
AppSync will auto-merge everything for you while also offering other options if necessary.
Check the &lt;a href=&quot;https://aws-amplify.github.io/docs/js/datastore&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;Amplify DataStore documentation&lt;/a&gt; for more information.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Check out &lt;a href=&quot;https://www.youtube.com/watch?v=dkMEkD9OsPY&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;Nader’s talk&lt;/a&gt;, &lt;a href=&quot;https://twitter.com/dabit3&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;Nader’s Twitter&lt;/a&gt;, &lt;a href=&quot;https://aws.amazon.com/appsync/&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;AWS AppSync&lt;/a&gt;, &lt;a href=&quot;https://aws.amazon.com/amplify/&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;AWS Amplify&lt;/a&gt; and the &lt;a href=&quot;https://aws-amplify.github.io/docs/js/datastore&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;Amplify DataStore documentation&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h1 id=&quot;the-state-of-webassembly-by-sendil-kumarn&quot;&gt;The state of WebAssembly, by &lt;a href=&quot;https://twitter.com/sendilkumarn&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;Sendil Kumarn&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;The final talk of the day was by Sendil who came to explain what the current state of WebAssembly is.
WASM, short for WebAssembly, is a high-level definition of how to run bytecode in your JavaScript engine.
At its core, it’s a stack machine that uses a linear memory model by using a shared array buffer.
Contrary to what you might expect, WASM is not faster if you would use it for lots of DOM operations.
The advantage of WASM lies in the fast calculations that can be done.&lt;/p&gt;

&lt;p&gt;To write WASM, you can look at multiple higher-level languages that compile to WASM code.
If you’re a fan of C/C++, the tool &lt;a href=&quot;https://github.com/emscripten-core&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;Emscripten&lt;/a&gt; helps you out by compiling a C/C++ module to an HTML page.
For the Rust lovers, you can simply annotate a function with &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;#[wasm_bindgen]&lt;/code&gt; to activate the &lt;a href=&quot;https://rustwasm.github.io/wasm-bindgen/&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;wasm-bindgen library&lt;/a&gt; and allowing to compile a WASM function.
For the TypeScript lovers, there is a strict subset of TypeScript called &lt;a href=&quot;https://docs.assemblyscript.org/&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;AssemblyScript&lt;/a&gt; that allows for compilation.&lt;/p&gt;

&lt;p&gt;So the tools are already there to write WASM code but the future looks really bright as multiple features are currently being specified:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/WebAssembly/interface-types&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;Interface types&lt;/a&gt; to help describe higher-level values such as strings and records&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/WebAssembly/simd&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;Single Instruction Multiple Data&lt;/a&gt; so that WASM will be more efficient on newer instruction set architectures up to 128-bit.&lt;/li&gt;
  &lt;li&gt;Garbage collection&lt;/li&gt;
  &lt;li&gt;… and more!&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;All this will lead to an even better performance of WebAssembly combined with more use cases so that WASM can become a more popular standard on the web.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Check out &lt;a href=&quot;https://www.youtube.com/watch?v=2KDU1qdIobA&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;Sendil’s talk&lt;/a&gt;, &lt;a href=&quot;https://twitter.com/sendilkumarn&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;Sendil’s Twitter&lt;/a&gt;, &lt;a href=&quot;https://webassembly.org/getting-started/developers-guide/&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;WASM.org getting started with Emscripten&lt;/a&gt;, &lt;a href=&quot;https://rustwasm.github.io/wasm-bindgen/&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;wasm-bindgen library&lt;/a&gt; and &lt;a href=&quot;https://docs.assemblyscript.org/&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;AssemblyScript&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h1 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h1&gt;
&lt;p&gt;The first of three days in Amsterdam was packed with lots of great talks on a multitude of subjects.
Combine those interesting topics with a great venue (the screen opened for access to the break room!) and you have a killer combination.
If this was day 1, I could not wait for day 2 and 3 that were going to be more focused on VueJS.
I returned to my hotel satisfied with the amount of stuff I had learned that day and was excited for what was still to come.&lt;/p&gt;

&lt;p&gt;&lt;img alt=&quot;During breaks, the stage opened to provide access to the break room&quot; src=&quot;/img/frontend-love-2020/opening-stage.jpeg&quot; class=&quot;image fit&quot; style=&quot;margin:0px auto;&quot; /&gt;&lt;/p&gt;</content><author><name>{&quot;first_name&quot;=&gt;&quot;Elke&quot;, &quot;last_name&quot;=&gt;&quot;Heymans&quot;, &quot;github&quot;=&gt;&quot;ElkeCodes&quot;, &quot;twitter&quot;=&gt;&quot;elkecodes&quot;, &quot;linkedin&quot;=&gt;&quot;elkeheymans&quot;, &quot;permalink&quot;=&gt;&quot;/author/elke-heymans/&quot;, &quot;avatar&quot;=&gt;&quot;elke-heymans.jpg&quot;, &quot;title&quot;=&gt;&quot;Frontend Developer&quot;, &quot;email&quot;=&gt;&quot;elke.heymans@ordina.be&quot;, &quot;bio&quot;=&gt;&quot;Elke is a Frontend Developer with a focus on Vue, TypeScript, Angular and is very interested in other frontend technologies. In her spare time you can find her taking photographs at events, training for half marathons or enjoying music by collecting records and attending concerts.&quot;}</name><email>elke.heymans@ordina.be</email></author><category term="Conference" /><category term="Conference" /><category term="Vue.js" /><category term="React" /><category term="GraphQL" /><category term="WebAssembly" /><category term="a11y" /><summary type="html">Table of Contents</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://ordina-jworks.github.io/img/frontend-developer-love-2020.png" /><media:content medium="image" url="https://ordina-jworks.github.io/img/frontend-developer-love-2020.png" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">Jib: The next big thing to build your Docker images</title><link href="https://ordina-jworks.github.io/docker/2020/05/07/jib.html" rel="alternate" type="text/html" title="Jib: The next big thing to build your Docker images" /><published>2020-05-07T00:00:00+00:00</published><updated>2020-05-07T00:00:00+00:00</updated><id>https://ordina-jworks.github.io/docker/2020/05/07/jib</id><content type="html" xml:base="https://ordina-jworks.github.io/docker/2020/05/07/jib.html">&lt;h1 id=&quot;table-of-contents&quot;&gt;Table of contents&lt;/h1&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;#introduction&quot;&gt;Introduction&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#jib&quot;&gt;Jib&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#usage&quot;&gt;Usage&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#conclusion&quot;&gt;Conclusion&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#useful-links&quot;&gt;Useful links&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;introduction&quot;&gt;Introduction&lt;/h1&gt;

&lt;p&gt;Nowadays, you hear a lot about the term ‘containerization’ and the benefits of this technology.
Containerization has become a very popular thing in software and cloud development as more users and companies start to adopt it. 
Because of this, user experience and usability also have to grow. 
In other words, how do we make the creation of a Docker image as easy as possible for a developer? After all, we do love it when things just &lt;strong&gt;work&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;The process of creating a Docker image has always evolved in the years to be as simple as possible. 
With the amount of resources and information we have today, it shouldn’t be hard to write your own Dockerfile. 
You can also use a Maven / Gradle plugin which interacts with your Docker CLI if you want to avoid writing Dockerfiles.&lt;/p&gt;

&lt;p&gt;But what if it could be even more simpler?&lt;/p&gt;
&lt;h1 id=&quot;jib&quot;&gt;Jib&lt;/h1&gt;
&lt;p&gt;Enter Jib. 
Jib is an image builder plugin released in 2018 and made and maintained by Google. 
To explain what it does, I will use a quote from the &lt;a href=&quot;https://cloud.google.com/blog/products/gcp/introducing-jib-build-java-docker-images-better&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;official Google Blog announcement&lt;/a&gt;:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Jib is a fast and simple container image builder that handles all the steps of packaging your application into a container image. It does not require you to write a Dockerfile or have docker installed, and it is directly integrated into Maven and Gradle.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;This seems like a big thing, doesn’t it? Overall, the biggest benefits of Jib are:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;No need for a Docker daemon anymore in your environment;&lt;/li&gt;
  &lt;li&gt;No seperate docker build / push commands in your pipeline;&lt;/li&gt;
  &lt;li&gt;Supports both Maven and Gradle projects;&lt;/li&gt;
  &lt;li&gt;Dockerizes your application into multiple layers and separates your dependencies from your own classes to significantly reduce build time (in contrast to building fat JARs);&lt;/li&gt;
  &lt;li&gt;Jib only builds the changed layers, so unless you add / update dependencies, it won’t rebuild the dependency layer!&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;usage&quot;&gt;Usage&lt;/h1&gt;
&lt;p&gt;Using the Jib plugin is pretty easy and straight-forward as it was designed to be so. 
All properties and settings work perfectly out of the box. 
This means that I can just add the plugin to my build tool and it will be able to create a Docker image without further ado. 
However, if your container setup is more complex, Jib allows you to override every property that best suits your needs. 
You no longer need a Dockerfile in your project, Jib is perfectly capable of handling your image setup on its own.&lt;/p&gt;

&lt;p&gt;You can try the Jib plugin by either using your current Java project or by cloning the &lt;a href=&quot;#https://github.com/spring-projects/spring-petclinic&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;Spring Pet Clinic Sample Application&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Once you have your project open in your IDE, open the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;pom.xml&lt;/code&gt; (Maven) or &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;build.gradle&lt;/code&gt; (Gradle) file to start adding the Jib plugin. 
Don’t forget to build a fresh JAR!&lt;/p&gt;

&lt;h3 id=&quot;gradle&quot;&gt;Gradle&lt;/h3&gt;
&lt;p&gt;To use &lt;a href=&quot;https://github.com/GoogleContainerTools/jib/tree/master/jib-gradle-plugin&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;Jib in Gradle&lt;/a&gt;, you first need to add the plugin to your &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;build.gradle&lt;/code&gt; file. You can do this in the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;plugins&lt;/code&gt; block.&lt;/p&gt;

&lt;div class=&quot;language-groovy highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;plugins&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;...&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;id&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'com.google.cloud.tools.jib'&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;version&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'2.1.0'&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Afterwards, you can add your Jib plugin configuration to the file, with the settings that you prefer.&lt;/p&gt;

&lt;div class=&quot;language-groovy highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;jib&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;to&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;image&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'yolanv/jib-demo:gradle'&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;o&quot;&gt;---&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;jib&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;to&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;image&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'yolanv/jib-demo:gradle'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p style=&quot;text-align: center; font-style: italic;&quot;&gt;Two ways of specifying your Jib configuration in Gradle&lt;/p&gt;

&lt;p&gt;Now you can run the following command:&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;gradle jib&lt;/code&gt;&lt;/p&gt;

&lt;h3 id=&quot;maven&quot;&gt;Maven&lt;/h3&gt;
&lt;p&gt;With &lt;a href=&quot;https://github.com/GoogleContainerTools/jib/tree/master/jib-maven-plugin&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;Jib for Maven&lt;/a&gt;, the configuration is more or less the same as in Gradle, except that you need to write it in XML.&lt;/p&gt;

&lt;p&gt;In Maven, you have to add your preferred configuration with the plugin declaration. 
Add the following in the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;plugins&lt;/code&gt; element:&lt;/p&gt;

&lt;div class=&quot;language-xml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;plugin&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;groupId&amp;gt;&lt;/span&gt;com.google.cloud.tools&lt;span class=&quot;nt&quot;&gt;&amp;lt;/groupId&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;artifactId&amp;gt;&lt;/span&gt;jib-maven-plugin&lt;span class=&quot;nt&quot;&gt;&amp;lt;/artifactId&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;version&amp;gt;&lt;/span&gt;2.1.0&lt;span class=&quot;nt&quot;&gt;&amp;lt;/version&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;configuration&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;to&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;image&amp;gt;&lt;/span&gt;yolanv/jib-demo:maven&lt;span class=&quot;nt&quot;&gt;&amp;lt;/image&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/to&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/configuration&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/plugin&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;You can trigger the Jib plugin with the following command:&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;mvn compile jib:build&lt;/code&gt;&lt;/p&gt;

&lt;hr /&gt;
&lt;p&gt;The plugin configuration tells Jib that, whenever Jib gets triggered, it should build an image named &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;yolanv/jib-demo&lt;/code&gt; with the corresponding image tag.
Running the command will trigger Jib to start building and pushing your Docker image.&lt;/p&gt;

&lt;h1 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h1&gt;
&lt;p&gt;In a short time, we were able to successfully build a Docker image and push it to our registry. 
It requires very little configuration (depending on your setup ofcourse), it only builds the changed layers and we don’t even need to have a Docker daemon installed!&lt;/p&gt;

&lt;p style=&quot;text-align: center; font-style: italic;&quot;&gt;&lt;img alt=&quot;Docker repository&quot; src=&quot;/img/2020-03-30-jib/docker-repo.png&quot; class=&quot;image fit&quot; style=&quot;margin:0px auto; max-width: 750px;&quot; /&gt;&lt;/p&gt;
&lt;p style=&quot;text-align: center; font-style: italic;&quot;&gt;Docker Hub repository with two pushed tags done with Jib&lt;/p&gt;

&lt;p&gt;Personally, I think this is a very powerful plugin that will be used in new and old projects. 
While I think that it is important for people to understand how Docker works and how Docker images are built, Jib still gives a lot of advantages over using regular Dockerfiles.&lt;/p&gt;

&lt;h1 id=&quot;useful-links&quot;&gt;Useful links&lt;/h1&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/GoogleContainerTools/jib&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;Jib Repository&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/GoogleContainerTools/jib/tree/master/jib-maven-plugin&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;Jib Maven Documentation&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/GoogleContainerTools/jib/tree/master/jib-gradle-plugin&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;Jib Gradle Documentation&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><author><name>{&quot;first_name&quot;=&gt;&quot;Yolan&quot;, &quot;last_name&quot;=&gt;&quot;Vloeberghs&quot;, &quot;linkedin&quot;=&gt;&quot;yolan-vloeberghs-23825aa3&quot;, &quot;github&quot;=&gt;&quot;yolanv&quot;, &quot;permalink&quot;=&gt;&quot;/author/yolan-vloeberghs/&quot;, &quot;avatar&quot;=&gt;&quot;yolan-vloeberghs.jpg&quot;, &quot;title&quot;=&gt;&quot;Java Consultant&quot;, &quot;email&quot;=&gt;&quot;yolan.vloeberghs@ordina.be&quot;, &quot;bio&quot;=&gt;&quot;Yolan Vloeberghs is a Java Consultant with a keen passion for Spring Boot projects and Java technology. He loves to play around with various technologies and frameworks and is very passionated and eager to learn about everything related to cloud development.&quot;}</name><email>yolan.vloeberghs@ordina.be</email></author><category term="Docker" /><category term="JIB" /><category term="Docker" /><category term="Kubernetes" /><category term="Containerization" /><summary type="html">Table of contents Introduction Jib Usage Conclusion Useful links Introduction Nowadays, you hear a lot about the term ‘containerization’ and the benefits of this technology. Containerization has become a very popular thing in software and cloud development as more users and companies start to adopt it. Because of this, user experience and usability also have to grow. In other words, how do we make the creation of a Docker image as easy as possible for a developer? After all, we do love it when things just work. The process of creating a Docker image has always evolved in the years to be as simple as possible. With the amount of resources and information we have today, it shouldn’t be hard to write your own Dockerfile. You can also use a Maven / Gradle plugin which interacts with your Docker CLI if you want to avoid writing Dockerfiles. But what if it could be even more simpler? Jib Enter Jib. Jib is an image builder plugin released in 2018 and made and maintained by Google. To explain what it does, I will use a quote from the official Google Blog announcement: Jib is a fast and simple container image builder that handles all the steps of packaging your application into a container image. It does not require you to write a Dockerfile or have docker installed, and it is directly integrated into Maven and Gradle. This seems like a big thing, doesn’t it? Overall, the biggest benefits of Jib are: No need for a Docker daemon anymore in your environment; No seperate docker build / push commands in your pipeline; Supports both Maven and Gradle projects; Dockerizes your application into multiple layers and separates your dependencies from your own classes to significantly reduce build time (in contrast to building fat JARs); Jib only builds the changed layers, so unless you add / update dependencies, it won’t rebuild the dependency layer! Usage Using the Jib plugin is pretty easy and straight-forward as it was designed to be so. All properties and settings work perfectly out of the box. This means that I can just add the plugin to my build tool and it will be able to create a Docker image without further ado. However, if your container setup is more complex, Jib allows you to override every property that best suits your needs. You no longer need a Dockerfile in your project, Jib is perfectly capable of handling your image setup on its own. You can try the Jib plugin by either using your current Java project or by cloning the Spring Pet Clinic Sample Application. Once you have your project open in your IDE, open the pom.xml (Maven) or build.gradle (Gradle) file to start adding the Jib plugin. Don’t forget to build a fresh JAR! Gradle To use Jib in Gradle, you first need to add the plugin to your build.gradle file. You can do this in the plugins block. plugins { ... id 'com.google.cloud.tools.jib' version '2.1.0' } Afterwards, you can add your Jib plugin configuration to the file, with the settings that you prefer. jib { to { image 'yolanv/jib-demo:gradle' } } --- jib.to.image = 'yolanv/jib-demo:gradle' Two ways of specifying your Jib configuration in Gradle Now you can run the following command: gradle jib Maven With Jib for Maven, the configuration is more or less the same as in Gradle, except that you need to write it in XML. In Maven, you have to add your preferred configuration with the plugin declaration. Add the following in the plugins element: &amp;lt;plugin&amp;gt; &amp;lt;groupId&amp;gt;com.google.cloud.tools&amp;lt;/groupId&amp;gt; &amp;lt;artifactId&amp;gt;jib-maven-plugin&amp;lt;/artifactId&amp;gt; &amp;lt;version&amp;gt;2.1.0&amp;lt;/version&amp;gt; &amp;lt;configuration&amp;gt; &amp;lt;to&amp;gt; &amp;lt;image&amp;gt;yolanv/jib-demo:maven&amp;lt;/image&amp;gt; &amp;lt;/to&amp;gt; &amp;lt;/configuration&amp;gt; &amp;lt;/plugin&amp;gt; You can trigger the Jib plugin with the following command: mvn compile jib:build The plugin configuration tells Jib that, whenever Jib gets triggered, it should build an image named yolanv/jib-demo with the corresponding image tag. Running the command will trigger Jib to start building and pushing your Docker image. Conclusion In a short time, we were able to successfully build a Docker image and push it to our registry. It requires very little configuration (depending on your setup ofcourse), it only builds the changed layers and we don’t even need to have a Docker daemon installed! Docker Hub repository with two pushed tags done with Jib Personally, I think this is a very powerful plugin that will be used in new and old projects. While I think that it is important for people to understand how Docker works and how Docker images are built, Jib still gives a lot of advantages over using regular Dockerfiles. Useful links Jib Repository Jib Maven Documentation Jib Gradle Documentation</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://ordina-jworks.github.io/img/2020-03-30-jib/jib-logo.jpg" /><media:content medium="image" url="https://ordina-jworks.github.io/img/2020-03-30-jib/jib-logo.jpg" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">Data Warehouse in the Cloud</title><link href="https://ordina-jworks.github.io/architecture/2020/05/06/datawarehouse-in-cloud.html" rel="alternate" type="text/html" title="Data Warehouse in the Cloud" /><published>2020-05-06T00:00:00+00:00</published><updated>2020-05-06T00:00:00+00:00</updated><id>https://ordina-jworks.github.io/architecture/2020/05/06/datawarehouse-in-cloud</id><content type="html" xml:base="https://ordina-jworks.github.io/architecture/2020/05/06/datawarehouse-in-cloud.html">&lt;h1 id=&quot;introduction&quot;&gt;Introduction&lt;/h1&gt;

&lt;p&gt;Almost all the companies have a kind of data warehouse available for reporting purposes. 
Those reporting environments are most of the time hosted in an on-premise infrastructure, nowadays a lot of companies are investing money to upgrade their existing environment to a more flexible and scalable infrastructure that is hosted in the cloud. 
This can be the Azure Cloud, AWS, Google Cloud, etc.
Not only the Data Warehouse itself is important, we need to look at the complete picture.&lt;/p&gt;

&lt;h1 id=&quot;dataops&quot;&gt;DataOps&lt;/h1&gt;

&lt;p&gt;DataOps can help to give better insights, reduce the time to go to production and help in creating the whole package due to its process-oriented methodology. 
Different teams will work more intense together to improve the quality of the delivered value.&lt;/p&gt;

&lt;p style=&quot;text-align: center;&quot;&gt;&lt;img src=&quot;/img/2020-04-29-datawarehouse-in-cloud/dataops.png&quot; alt=&quot;Workspace&quot; class=&quot;image&quot; style=&quot;margin:0px auto; max-width:100%&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Data is moved from the source to the Factory (Data Warehouse). 
In this factory a lot of steps and processes will take place to improve the quality of the data and gain us insights into how the data flows.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Quality:&lt;/b&gt; The quality of data must be guaranteed; this can be done through automated tests during the processing of the data. Statistical Process Control (SPC) is there to monitor and control the data analytics pipeline.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Centralization &amp;amp; Freedom:&lt;/b&gt; The data is stored in a central place, which will give the different users (Data Engineer, Data Analysts, Data Scientists, Data Visualization users, Business users) the ability to play with the data to create insights on the data. Those new insights can result in new processes that needs to be implemented to make them available for all users.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Catalog:&lt;/b&gt; A data catalog will be one of the crucial parts. The catalog maps the complete data lineage. It gives visibility on how the data has been transformed during the whole process, and the catalog contains all the definitions.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Automation:&lt;/b&gt; The days of installing new versions of software or processing logic manually must be mini. Automation can be implemented to improve the time to go to production. Continuous Integration (CI) and Continuous Delivery/Deployment (CD) are key here. Azure DevOps can be used for creating the CI/CD pipelines.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Security &amp;amp; Privacy:&lt;/b&gt; Data needs to be protected to make sure that not everybody may/can see all the data. Also, the data must be GDPR compliant. Some questions to ask here: “Can we restore production data on our other environment without anonymization?”, “Do we need all the data in another environment?”, “Who can access what data?”.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Monitor &amp;amp; Improve:&lt;/b&gt; In every process, monitoring is key to improve the quality of the implemented processes and helps to guide the team to deliver more and better products.&lt;/p&gt;

&lt;p&gt;At the end of the factory chain, Value is delivered to the end-users in the form of Actionable dashboards that will provide them insights on the data that can be used for further analysis.&lt;/p&gt;

&lt;h1 id=&quot;data-warehouse&quot;&gt;Data Warehouse&lt;/h1&gt;

&lt;p&gt;When a new modern Data Warehouse needs to be designed. 
It is important to create a cloud and technology agnostic architecture. 
The tools to use, the platform that is needed, are less important. 
The picture below shows the different phases and how the data flows.&lt;/p&gt;

&lt;p style=&quot;text-align: center;&quot;&gt;&lt;img src=&quot;/img/2020-04-29-datawarehouse-in-cloud/dataphases.png&quot; alt=&quot;Workspace&quot; class=&quot;image&quot; style=&quot;margin:0px auto; max-width:100%&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;source-systems&quot;&gt;Source Systems&lt;/h3&gt;
&lt;p&gt;You need to consider all the sources that are available for designing the data warehouse. 
It can be existing sources that are hosted on on-premise infrastructure or already in the cloud. 
IoT devices are becoming more and more popular these days. 
These devices generate a lot of data and the system needs to be able to process/store large amounts of data.&lt;/p&gt;
&lt;h3 id=&quot;data-ingestion&quot;&gt;Data Ingestion&lt;/h3&gt;
&lt;p&gt;What technology can we use to ingest the data from the sources to an Information Reservoir (Storage system)? 
Processing Streaming Data requires a different approach than data that only needs to be processed once or several times a day/week.&lt;/p&gt;
&lt;h3 id=&quot;information-reservoir--processing&quot;&gt;Information Reservoir &amp;amp; Processing&lt;/h3&gt;
&lt;p&gt;Where do we need to store the ingested data? 
That depends on the kind of data that is processed. 
When processing structured data, a relational database might be a good idea. 
But what to do with unstructured data? 
This data shouldn’t be stored in a database and the choice should maybe better go to a kind of file system.&lt;/p&gt;
&lt;h3 id=&quot;information-consumption--analytic-methods&quot;&gt;Information Consumption &amp;amp; Analytic Methods&lt;/h3&gt;
&lt;p&gt;This phase in the process is not always required, because the business is not ready to do some Data Science and Machine learning. 
When in the design phase it might be a good idea to think about it. 
What is not needed now may be applicable within a few weeks or months.&lt;/p&gt;
&lt;h3 id=&quot;data-access--target-applications&quot;&gt;Data Access &amp;amp; Target Applications&lt;/h3&gt;
&lt;p&gt;The main question here is: How will the processed data be made available to all the end users? 
It is possible that you need to support different kind of tools. 
MS Excel is the most used BI-tool for analyzing data.
If you want attractive and interactive dashboards another visualization tool is needed like Power BI or Tableau.&lt;/p&gt;

&lt;h1 id=&quot;choosing-the-technology-and-tools&quot;&gt;Choosing the Technology and Tools&lt;/h1&gt;

&lt;p&gt;After the global picture is completed, and all the phases are cleared out, it is time to choose the platform and components that are needed. 
The picture below shows an example of a Modern Data Warehouse in the Azure Cloud.&lt;/p&gt;

&lt;p style=&quot;text-align: center;&quot;&gt;&lt;img src=&quot;/img/2020-04-29-datawarehouse-in-cloud/moderndwh.png&quot; alt=&quot;Workspace&quot; class=&quot;image&quot; style=&quot;margin:0px auto; max-width:100%&quot; /&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;The structured and unstructured data will be ingested in the Data Lake Storage Gen2 using Azure Data Factory.
    &lt;ul&gt;
      &lt;li&gt;Data Lake Storage Gen2 is the world’s most productive Data Lake. It combines the power of an Hadoop compatible file system with the integrated hierarchical namespace with the massive scale and economy of Azure Blob Storage to help speed your transition from proof of concept to production.&lt;/li&gt;
      &lt;li&gt;Azure Data Factory is a cloud-based data integration service that allows you to create data-driven workflows in the cloud for orchestrating and automating data movement and data transformations.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Ingested data needs to be clean and maybe the data must be transformed and combined with other data. For example, some unstructured and structured data must be combined to create a clean dataset.
    &lt;ul&gt;
      &lt;li&gt;Azure Databricks is an Apache Spark-based analytics platform optimized for the Azure cloud platform. It is an interactive workspace that can be set up in minutes, auto scales and collaborates on shared projects. It supports languages such as SQL, Java, Python, Scala and R as well as other Data Science libraries such as TensorFlow and PyTorch.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;The cleaned data must be ingested in the DWH. As DWH we choose Azure Synapse Analytics (Former Azure SQL Data Warehouse). For filling the Data Warehouse, PolyBase or Azure Data Factory can be used. 
The stored data in the DWH can be modelled with Data Vault 2.0, or a star schema. Our preferred choice is storing the data in a Data Vault model. This gives us much more flexibility.
Optionally, one or more Data Marts can be created. It is not required to store the Data Marts physically, virtual Data Marts are also possible
    &lt;ul&gt;
      &lt;li&gt;Azure Synapse Analytics is the fast, flexible and trusted cloud data warehouse that lets you scale, compute and store elastically and independently, with a massively parallel processing architecture.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;The stored data, from the DWH or the Data Marts is the source of our data visualization tool. Because we have chosen to use the Microsoft stack, Power BI is our chosen tool for this purpose.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;The picture above does not contain all the needed components. 
Another component that is required in all our approaches is Azure Key Vault. 
This component will store all our connection strings, Certificates, Secrets and Keys. 
To secure your resources, Azure Private links enables you to access resources over a private endpoint in your own virtual network.&lt;/p&gt;

&lt;p&gt;The architecture can easily be extended to enable Data Science.&lt;/p&gt;

&lt;p style=&quot;text-align: center;&quot;&gt;&lt;img src=&quot;/img/2020-04-29-datawarehouse-in-cloud/dwhdatascience.png&quot; alt=&quot;Workspace&quot; class=&quot;image&quot; style=&quot;margin:0px auto; max-width:100%&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Scalable machine learning/deep learning techniques will derive deeper insights in the data using Python, Scala or R using notebooks in Azure Databricks. 
To create insights, the (un)cleaned data and even the data stored in our DWH is used. Results can be stored back in the Data Lake or in the DWH, and Power BI is also be able to connect directly to your Databricks environment.&lt;/p&gt;</content><author><name>{&quot;first_name&quot;=&gt;&quot;Dennis&quot;, &quot;last_name&quot;=&gt;&quot;Herremans&quot;, &quot;permalink&quot;=&gt;&quot;/author/dennisherremans/&quot;, &quot;avatar&quot;=&gt;&quot;dennisherremans.jpg&quot;, &quot;title&quot;=&gt;&quot;Microsoft BI Consultant&quot;, &quot;email&quot;=&gt;&quot;dennis.herremans@ordina.be&quot;, &quot;bio&quot;=&gt;&quot;Dennis is a Microsoft BI consultant at Ordina.&quot;}</name><email>dennis.herremans@ordina.be</email></author><category term="Architecture" /><category term="Architecture" /><summary type="html">Introduction</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://ordina-jworks.github.io/img/2020-04-29-datawarehouse-in-cloud/datascience.jpg" /><media:content medium="image" url="https://ordina-jworks.github.io/img/2020-04-29-datawarehouse-in-cloud/datascience.jpg" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">DevOpsDays 2019</title><link href="https://ordina-jworks.github.io/conference/2020/03/31/DevOpsDays-2019.html" rel="alternate" type="text/html" title="DevOpsDays 2019" /><published>2020-03-31T00:00:00+00:00</published><updated>2020-03-31T00:00:00+00:00</updated><id>https://ordina-jworks.github.io/conference/2020/03/31/DevOpsDays-2019</id><content type="html" xml:base="https://ordina-jworks.github.io/conference/2020/03/31/DevOpsDays-2019.html">&lt;blockquote&gt;
  &lt;p&gt;The 7th edition of DevOpsDays Amsterdam in ‘Pakhuis de Zwijger’ was my first experience with &lt;a href=&quot;https://devopsdays.org/&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;DevOpsDays&lt;/a&gt;. 
I’d like to share some talks and my impressions about the conference, because sharing ideas worth spreading is what we aim for at JWorks.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;img alt=&quot;Conference crowd outside&quot; src=&quot;/img/2020-03-31-devopsdays/devopsdays.jpg&quot; class=&quot;image fit&quot; style=&quot;margin:0px auto; max-width: 1050px;&quot; /&gt;&lt;/p&gt;

&lt;h1 id=&quot;table-of-contents&quot;&gt;Table of contents&lt;/h1&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;#observability-for-emerging-infra-what-got-you-here-wont-get-you-there-by-charity-majors&quot;&gt;Observability for Emerging Infra: What Got You Here Won’t Get You There, by Charity Majors&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#how-convenience-is-killing-open-standards-by-bernd-erk&quot;&gt;How Convenience is Killing Open Standards, by Bernd Erk&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#come-listen-to-me-im-a-fraud-by-joep-piscaer&quot;&gt;Come Listen to me, I’m a fraud, by Joep Piscaer&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#fight-flight-or-freeze--releasing-organizational-trauma-by-matty-stratton&quot;&gt;Fight, Flight or Freeze – Releasing Organizational Trauma, by Matty Stratton&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;observability-for-emerging-infra-what-got-you-here-wont-get-you-there-by-charity-majors&quot;&gt;Observability for Emerging Infra: What Got You Here Won’t Get You There, by Charity Majors&lt;/h2&gt;
&lt;p&gt;&lt;span class=&quot;image left&quot;&gt;&lt;img class=&quot;p-image&quot; alt=&quot;Charity Majors&quot; src=&quot;/img/2020-03-31-devopsdays/charity-majors.jpg&quot; /&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://twitter.com/mipsytipsy&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;Charity Majors&lt;/a&gt; is a co-founder and engineer at &lt;a href=&quot;https://www.honeycomb.io&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;Honeycomb.io&lt;/a&gt;, a monitoring and analyzer tool that can gather information from various sources to provide an overview of what’s happening in your (production) environment.&lt;/p&gt;

&lt;p&gt;Most of you have experience with sieving information through logs and analyzing all kinds of dashboards to find and fully understand what went wrong in your application. 
Finding and understanding the data can be really hard. 
You lack the bigger picture because the tools for doing metrics, logging and tracing (what she calls the “three pillars of observability”) have their own benefits and drawbacks.&lt;/p&gt;

&lt;p&gt;Logs can be useful for compliance reasons but they are not so great to picture the context. 
Metric tools might be more visual than logs, but they are less suitable for debugging purposes or to completely understand why something failed.
&lt;img alt=&quot;Observability venn diagram&quot; src=&quot;/img/2020-03-31-devopsdays/Observability.png&quot; class=&quot;image fit&quot; style=&quot;margin:0px auto; max-width: 750px;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;We as human beings like visual representation to easily perceive why certain situations occurred. 
For example during and after deploying new versions because the chance is higher that something will go wrong. 
According to Charity, deployments are not like ‘flipping a binary switch’. 
It’s more like a step in a long process of being confident in your code that it will work on other environments rather than just on your local machine or development environment.&lt;/p&gt;

&lt;p&gt;Especially deployments to production will not always go as planned and it will be even more difficult to do so, since infrastructure has become more complex over the recent years. 
We see our infrastructure changing from simple &lt;a href=&quot;https://en.wikipedia.org/wiki/LAMP_(software_bundle)&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;LAMP&lt;/a&gt; stacks to replica sets, nodes and micro-service architectures.&lt;/p&gt;

&lt;p&gt;It would be very difficult to quickly grasp what’s going on with your applications and its underlying systems without good observability.&lt;/p&gt;

&lt;p&gt;Observability is a measure of how well internal states of a system can be inferred from knowledge of its external outputs.
It has the advantages of logging, tracing and metrics, and could be achieved with the right tools, if set up correctly. This is what Honeycomb is trying to achieve.&lt;/p&gt;

&lt;p&gt;Charity states that observability is not the same as monitoring. 
That is because monitoring is more like a ‘post-talk’ approach in her eyes. 
You’re typically too late and the damage has already been done upon discovery.
Monitoring systems have not changed significantly in twenty years and have fallen behind the way we build software. 
Software nowadays consists of large distributed systems that are made up of many non-uniform interacting components, while the core functionality of monitoring systems has stagnated.&lt;/p&gt;

&lt;h2 id=&quot;how-convenience-is-killing-open-standards-by-bernd-erk&quot;&gt;How Convenience is Killing Open Standards, by Bernd Erk&lt;/h2&gt;
&lt;p&gt;&lt;span class=&quot;image left&quot;&gt;&lt;img class=&quot;p-image&quot; alt=&quot;Bernd Erk&quot; src=&quot;/img/2020-03-31-devopsdays/bernd-erk.jpg&quot; /&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;You may know that migrating configurations from one cloud provider to another can be challenging.
Cloud providers are mostly lacking an ‘open standard’ to make it easier. 
&lt;a href=&quot;https://twitter.com/gethash&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;Bernd&lt;/a&gt;’s talk wants us to think about what Open Standards and Open Source could bring to us and how they have led to the success of Linux and Open Source communities we have today.&lt;/p&gt;

&lt;p&gt;In his early career, Bernd was a Solaris system engineer who maintained more than just Solaris systems within his company such as Unix-like systems &lt;a href=&quot;https://en.wikipedia.org/wiki/IBM_AIX&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;AIX&lt;/a&gt; and &lt;a href=&quot;https://en.wikipedia.org/wiki/HP-UX&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;HP-UX&lt;/a&gt;.
Managing unfamiliar platforms was hard, but luckily, most *NIX systems are relying on the POSIX standard. 
POSIX made it possible to develop other libraries such as GNU tools so they weren’t forced to use Sun’s (proprietary) freeware for instance. 
Fast-forwarding to 2019, we see that open source is becoming more popular than ever before. 
However, regarding Open Standards, there is still some work to do.&lt;/p&gt;

&lt;p&gt;The market has changed over the recent decade. 
Public and hybrid cloud are emerging and on-premise deployment is declining. 
We see that especially AWS and Azure have been expanding in the recent years as more and more customers are using their services. 
All those cloud providers like AWS, Google Cloud, Azure,… have their own APIs and those are not interchangeable since they are lacking a standard. 
The fact that an API is open does not imply that it is a standard, it’s only something you have access to. 
That is why tools like &lt;a href=&quot;https://www.terraform.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;Terraform&lt;/a&gt; are becoming popular. 
People have a need for a unified standard to manage their resources. 
Bernd thinks that Open Source is very important to have open standards although those are not the same.&lt;/p&gt;

&lt;p&gt;There is also a problem if a certain cloud provider uses Open Software. 
If they use a certain piece of open source software, there is no direct connection between the customer and the original developer of that software, because that layer was cut. 
No matter what business model, the creator of the software has to earn money.&lt;/p&gt;

&lt;p&gt;Open Source tools in the cloud make sure that you have direct contact to the creators of the software to help you out. 
AWS, on the other hand, has their own versions of Open Source Software like Open Distro which is basically their own distribution of ElasticSearch. 
This removes the connection with the original developer, because you can only contact them for support. 
It brings fear and protection to the developers of the software because they are afraid that money and intellectual property goes away. 
That’s the reason why they came up with own licenses like Server-Side Public License (SSPL) that MongoDB uses, for instance. 
This tells you that if you alter it to sell it as a SaaS offering, you have to contribute to that code.
And Redis prohibits you to sell their enterprise model as their cloud solution.&lt;/p&gt;

&lt;p&gt;Bernd doesn’t like that people come up with new licenses, but he also understands that they are afraid that their money stream would go away, and they see this as a possible solution. 
We have to see that we support enough Open Source and Open Standards, because they need it to improve and maintain their software or service.&lt;/p&gt;

&lt;p&gt;In today’s oligopoly of cloud providers, it’s really difficult to new players to emerge their new business, although this will be good to have a more diverse internet. 
Most companies are focusing on the more human side of things when it comes to diversity, which is great, but there is a lot of work on the technology side as well.
He compares it to when there are only a few companies that control the availability of Insulin because there’s no market law to reduce prices. 
It would be a lot cheaper if there were more players that provide Insulin.
“Abuse of Power comes as no surprise”.&lt;/p&gt;

&lt;p&gt;At the end of his talk, he draws some conclusions:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Be reasonable&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Think about what you are doing.&lt;/li&gt;
  &lt;li&gt;It must be easier for new players to enter the cloud market, with the help of open standards.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Interoperability is important&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;You can easily work with different services from different providers so you can work together.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Support variety&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Try to be out there and have a look on the industry on how it is. Think about what your next move will be.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Demand contribution&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Demand as a customer what you want to obtain from your provider.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Diversity is up to you&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Demand more diversity on the technical level.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;come-listen-to-me-im-a-fraud-by-joep-piscaer&quot;&gt;Come Listen to me, I’m a fraud, by Joep Piscaer&lt;/h2&gt;
&lt;p&gt;&lt;span class=&quot;image left&quot;&gt;&lt;img class=&quot;p-image&quot; alt=&quot;Joep Piscaer&quot; src=&quot;/img/2020-03-31-devopsdays/joep-piscaer.jpg&quot; /&gt;&lt;/span&gt;&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;“&lt;em&gt;Do you tend to chalk your accomplishments up to luck or timing&lt;/em&gt;”; “&lt;em&gt;do you hate making a mistake, being less than fully prepared or not doing things perfectly or do you even fear feedback?&lt;/em&gt;”&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href=&quot;https://twitter.com/jpiscaer&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;Joep&lt;/a&gt;’s talk started with an exercise to see if the people in the audience have some form of &lt;a href=&quot;https://en.wikipedia.org/wiki/Impostor_syndrome&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;Impostor Syndrome&lt;/a&gt; by asking several questions like the one mentioned above.
People had to raise their hand if the question applied to them and to keep them up during the next questions. 
At the end of his question round, more than half the audience had raised their hand.&lt;/p&gt;

&lt;p&gt;A collection of feelings of individual doubts that overwhelmed their successes and accomplishments which makes them think they are a ‘fraud’. 
He described Impostor syndrome as an internal measuring stick that is broken or Pluralistic ignorance. 
Doubting yourself privately, believing you are alone in thinking that way because no one voices their doubts. 
It is very likely that one or more of your colleagues have Impostor Syndrome although they will not admit they suffer from it. 
Some are more open about that topic than others. 
No matter how successful they are in their personal life and career, they ‘suffer’ Impostor Syndrome in some way or another. 
Mike Cannon-Brookes, CEO of one of the larges DevOps companies in the world is very open about it during his TED talk.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;“&lt;em&gt;Other people feel like this, too. And apparently it doesn’t go away with more success.&lt;/em&gt;” - Mike Cannon-Brookes, Atlassian&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Atlassian started, like most big tech companies, from a garage. 
It grew bigger and bigger and at some point, they needed an HR-person. 
While Mike was interviewing his potential HR-person, he felt a bit unsure, because he has never worked in a company with an HR-person before. 
So how will he know if the potential HR-person has the right skills and attitude?&lt;/p&gt;

&lt;p&gt;Like with many things, there is always a beginning where you have to figure out what way is the right way to do things. 
There is mostly not &lt;em&gt;one&lt;/em&gt; best practice since everyone has their own. 
It is sometimes hard to know if your way is the right way, the good way or just bad. 
That will mostly lead to discussions and insecurity with people, because they don’t know or they are not really sure if their statement is well grounded.&lt;/p&gt;

&lt;p&gt;Especially technology can change rapidly over time. 
By the time you have learned a new thing it’s already obsolete.&lt;/p&gt;

&lt;p&gt;&lt;img alt=&quot;Meme - Your Facts No Longer Apply&quot; src=&quot;/img/2020-03-31-devopsdays/your-facts-no-longer-apply.png&quot; class=&quot;image fit&quot; style=&quot;margin:0px auto; max-width: 750px;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Joep learned about Novell back when it was the latest and the greatest server Operating System you could have.
By the time Joep became a guru, it was already obsolete and surpassed by other Operating Systems.&lt;/p&gt;

&lt;p&gt;The tech landscape changes every couple of years and so sometime, you have to learn things again. 
That doesn’t really help when the &lt;a href=&quot;https://en.wikipedia.org/wiki/Dunning-Kruger_effect&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;Dunning-Kruger&lt;/a&gt; effect applies when learning new stuff. 
Most people don’t really discuss that certain things are new to them and that they are not really good at it yet. 
They feel insecure sometimes because they are unsure or afraid that their idea or statement is incorrect or a best practice.&lt;/p&gt;

&lt;p&gt;&lt;img alt=&quot;Dunning-Kruger Effect&quot; src=&quot;/img/2020-03-31-devopsdays/dunning-kruger-effect.png&quot; class=&quot;image fit&quot; style=&quot;margin:0px auto; max-width: 750px;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;There are certain things you can do to reduce the feeling of the Impostor Syndrome (or to recalibrate your ‘internal ruler’ so to speak).&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Nothing compares to you.&lt;/strong&gt; &lt;br /&gt;
Every time you say something negative about yourself, say two things that are positive about yourself. 
It is as easy as that to retrain your internal NLP (Neuro Linguistic Programming) filter. 
At some point, your negative thoughts will diminish, and the positive ones will stay. 
Make sure to try this in front of a mirror!&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;I will not compare myself to strangers on the internet.&lt;/strong&gt; &lt;br /&gt;
You shouldn’t compare yourself to others, especially to people on the internet, because they are the worst.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Practice on giving compliments to others. And learn to receive them.&lt;/strong&gt; &lt;br /&gt;
They can come from different perspectives. 
For a kid it’s an accomplishment if he or she is able to tie his/her own shoelaces because it is new to him/her.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Learn how others make stuff and let others learn from you.&lt;/strong&gt; &lt;br /&gt;
Other people, no matter how professional they are, make mistakes as well and can learn things from you and you can learn from them.
&lt;br /&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Pair programming&lt;/li&gt;
  &lt;li&gt;Pair review&lt;/li&gt;
  &lt;li&gt;Celebrate your failure&lt;/li&gt;
  &lt;li&gt;Speak publicly&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Find something you’re passionate about and keep being tremendously interested in it.&lt;/strong&gt;&lt;br /&gt;
Like a hobby where you can screw things up without consequences.&lt;/p&gt;

&lt;h2 id=&quot;fight-flight-or-freeze--releasing-organizational-trauma-by-matty-stratton&quot;&gt;Fight, Flight or Freeze – Releasing Organizational Trauma, by Matty Stratton&lt;/h2&gt;
&lt;p&gt;&lt;span class=&quot;image left&quot;&gt;&lt;img class=&quot;p-image&quot; alt=&quot;Matty Stratton&quot; src=&quot;/img/2020-03-31-devopsdays/matt-stratton.jpg&quot; /&gt;&lt;/span&gt;
Imagine a zebra grazing in the savanna of the African wilderness when suddenly a predator goes after the zebra. 
Of course, the zebra will run for its life (the flee state). 
When the zebra is caught by the predator, it ‘freezes’ because the zebra’s nervous system is overwhelmed and it has no further solutions anymore, hoping the predator will drop him and go on. 
After the zebra has managed to get away, it literally shakes all his stress off and goes back to grazing like nothing happened. 
Humans can react the same way zebras do, although we are, of course, not a zebra. 
We humans on the other hand can experience traumas long after a dreadful situation has occurred.&lt;/p&gt;

&lt;p&gt;Animals are not traumatized by routine threats to their lives, where humans on the other hand, are really overwhelmed and often subject to traumatic symptoms of hyper arousal, shutdown and dysregulation, as Peter Levine’s calls it. 
During day two, &lt;a href=&quot;https://twitter.com/mattstratton&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;Matty Stratton&lt;/a&gt;, DevOps advocate at PagerDuty, was talking about crisis management and traumatic events within organizations and teams based on his own experience with post-traumatic stress.&lt;/p&gt;

&lt;p&gt;Let’s start on how traumas can occur, although it’s rather complex to explain.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Traumas occur when one’s solutions (active response to threat) does not work. 
The case where your nervous system can’t handle it.
Traumas can result from both real or perceived threats. 
Even a perception of a ‘threat’ can also cause or recall traumatic situations.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Trauma is subjective and relative. 
Everyone experiences and handles stress in a different way. 
People from the military, for example, experience stress and traumas in a different way than people in software projects. 
But that doesn’t mean that your experience isn’t real, even though the experience from a soldier is much worse.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;But how does that apply to an organization? 
You can deal with common situations and everything will go back to normal. 
It’s always business as usual (the gray line in the normal range), but severe outages or a similar event, where the team’s capacity for a solution does not work, can lead to non-discharged stress (the red line).&lt;/p&gt;

&lt;p&gt;&lt;img alt=&quot;Dunning-Kruger Effect&quot; src=&quot;/img/2020-03-31-devopsdays/Symptoms-of-undischarged-traumatic-stress.png&quot; class=&quot;image fit&quot; style=&quot;margin:0px auto; max-width: 750px;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Hyperarousal organizations are hyper-vigilant (like they are fighting Voldemort). 
They are hyper-aware of threats which causes a slowdown in moving forward. 
It’s not necessarily bad for an organization to be vigilant but it is bad when it loses a sane balance between vigilant and the will to move forward and innovate.&lt;/p&gt;

&lt;p&gt;Organizations can also be in a ‘freeze’ state when they believe that they are ‘immune’ to a standstill so they won’t make any changes on how they operate.&lt;/p&gt;

&lt;p&gt;Humans like pattern recognition. 
We see signals that might remind us of events that happened in the past and motivate us to respond the way we did last time. 
But the thing is that nothing is the same as it ever was back in the day as systems are becoming more complex as they grow.&lt;/p&gt;

&lt;p&gt;Today’s challenge is to make organizations more resilient against dreadful events. 
Resilient organizations are not traumatized by routine threats to their mission or business. 
Non-resilient organizations are readily overwhelmed and often subject to the symptoms of overreaction, shutdown and lack of regulated effort.&lt;/p&gt;

&lt;p&gt;What you can do to be more resilient is to learn from your mistakes. 
Organize game days where you can practice an incident or outage in a relax and safe way.&lt;/p&gt;

&lt;h2 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h2&gt;

&lt;p&gt;DevOpsDays has a different but interesting format.
There are talks in the morning and lightning talks and open spaces during the afternoon/evening where you can bring your own topics that you want to discuss with others. 
What I also like is the fact that there’s a good variety between the amount of technical and soft-skills talks.&lt;/p&gt;

&lt;p&gt;The badges that DevOpsDays handed out were actually seed mats that you can plant afterwards (which I’ve done already)! 
UPDATE: Unfortunately nothing came out of it.
&lt;img alt=&quot;Conference badge&quot; src=&quot;/img/2020-03-31-devopsdays/badge.jpg&quot; class=&quot;image fit&quot; style=&quot;margin:0px auto; max-width: 750px;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Overall, it was a good and informative conference that I can recommend to anyone who is interested in DevOps and teamwork optimizations within organizations.&lt;/p&gt;

&lt;p&gt;More conference pictures can be found &lt;a href=&quot;https://photos.app.goo.gl/vm3oYVJUFt18uGbx8&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;</content><author><name>{&quot;first_name&quot;=&gt;&quot;Johan&quot;, &quot;last_name&quot;=&gt;&quot;Silkens&quot;, &quot;permalink&quot;=&gt;&quot;/author/johan-silkens/&quot;, &quot;avatar&quot;=&gt;&quot;johan-silkens.jpg&quot;, &quot;title&quot;=&gt;&quot;Java Developer&quot;, &quot;linkedin&quot;=&gt;&quot;johan-silkens-848bb1b2&quot;, &quot;twitter&quot;=&gt;&quot;SilkensJ&quot;, &quot;email&quot;=&gt;&quot;johan.silkens@ordina.be&quot;, &quot;github&quot;=&gt;&quot;JSilkens&quot;, &quot;bio&quot;=&gt;&quot;Johan is a Java Developer at Ordina Belgium. He is passionate about technology and science since he was as kid and is always up for a challenge.&quot;}</name><email>johan.silkens@ordina.be</email></author><category term="Conference" /><category term="DevOps" /><category term="Conference" /><summary type="html">The 7th edition of DevOpsDays Amsterdam in ‘Pakhuis de Zwijger’ was my first experience with DevOpsDays. I’d like to share some talks and my impressions about the conference, because sharing ideas worth spreading is what we aim for at JWorks.</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://ordina-jworks.github.io/img/2020-03-31-devopsdays/devopsdays-amsterdam-2019.png" /><media:content medium="image" url="https://ordina-jworks.github.io/img/2020-03-31-devopsdays/devopsdays-amsterdam-2019.png" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">Managing the size of your shiny monorepo</title><link href="https://ordina-jworks.github.io/architecture/2020/03/31/nx-sparse-checkout.html" rel="alternate" type="text/html" title="Managing the size of your shiny monorepo" /><published>2020-03-31T00:00:00+00:00</published><updated>2020-03-31T00:00:00+00:00</updated><id>https://ordina-jworks.github.io/architecture/2020/03/31/nx-sparse-checkout</id><content type="html" xml:base="https://ordina-jworks.github.io/architecture/2020/03/31/nx-sparse-checkout.html">&lt;h2 id=&quot;the-problem&quot;&gt;The problem&lt;/h2&gt;

&lt;p&gt;Using a monorepo has some great advantages, including no longer having to manage npm dependencies for each individual project and the ability to easily create libraries and reuse them between applications.
You can create libraries, for example about authentication, that each team in your organisation can include in their application and if an update should be needed to that library, the tooling you use can automatically build each (and only those) application that include that library.&lt;/p&gt;

&lt;p&gt;When talking about monorepo’s within frontend development communities, Nrwl’s Nx solution will certainly be mentioned.
It allows to create a workspace in which all your applications might exist together, using one single &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;package.json&lt;/code&gt;, no longer solely focused on Angular, but also React, simple web applications or NodeJS applications.
It also includes some useful tslint extensions and scripts to automate build steps using a dependency graph.&lt;/p&gt;

&lt;p&gt;But what happens when you have a lot of applications in your organisation?
Your IDE might start to work slower, its intellisense might get cluttered, or when searching for a specific file you receive a lot of results you don’t need for the application you’re working on.
This happens because there are just too many files in your repository.&lt;/p&gt;

&lt;h2 id=&quot;the-solution&quot;&gt;The solution&lt;/h2&gt;

&lt;p&gt;Git has a little-known (experimental) feature called sparse checkout.
From the &lt;a href=&quot;https://www.git-scm.com/docs/git-sparse-checkout&quot;&gt;git-scm.com&lt;/a&gt;:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;“Sparse checkout” allows populating the working directory sparsely.
It uses the skip-worktree bit (see git-update-index) to tell Git whether a file in the working directory is worth looking at.
If the skip-worktree bit is set, then the file is ignored in the working directory.
Git will not populate the contents of those files, which makes a sparse checkout helpful when working in a repository with many files, but only a few are important to the current user.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;In short, it allows you to checkout only a part of the repository, and when committing, only those folders that are checked out will also be committed to.
It’s a bit like &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.gitignore&lt;/code&gt;, but local only.
It doesn’t affect the repository itself.&lt;/p&gt;

&lt;p&gt;The information for which files to checkout is stored in a file &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;$GIT_DIR/info/sparse-checkout&lt;/code&gt; and the contents have a similar syntax of the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.gitignore&lt;/code&gt; file.
So using a line like &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;!/folder/my-folder-to-ignore&lt;/code&gt; would remove that folder from your working directory, while never affecting it on the remote repository.&lt;/p&gt;

&lt;p&gt;Now the idea is to remove those folders that are irrelevant to the project you’re working on by adding their paths to the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;sparse-checkout&lt;/code&gt; file.
When a new checkout is performed, the changes in the file are applied and you would have a little less clutter in your workspace.&lt;/p&gt;

&lt;p&gt;If you want to know more details and some extra commands, read &lt;a href=&quot;https://github.blog/2020-01-17-bring-your-monorepo-down-to-size-with-sparse-checkout/&quot;&gt;this GitHub blog post&lt;/a&gt; from Derrick Stolee.&lt;/p&gt;

&lt;h2 id=&quot;the-tool&quot;&gt;The tool&lt;/h2&gt;

&lt;p&gt;Of course it’s always better to automate these things to reduce errors.
I developed a tool &lt;a href=&quot;https://www.npmjs.com/package/nx-sparse-checkout&quot;&gt;nx-sparse-checkout&lt;/a&gt;, which can be added to a workspace using Nx 8.11 and above.
I used the idea from &lt;a href=&quot;https://twitter.com/kwintenp&quot;&gt;KwintenP&lt;/a&gt;, updated it for use in Nx 8 and made some other enhancements to improve the user experience.&lt;/p&gt;

&lt;div style=&quot;text-align: center;&quot;&gt;
  &lt;img src=&quot;/img/2020-03-31-nx-sparse-checkout/example.gif&quot; alt=&quot;Example of nx-sparse-checkout&quot; width=&quot;100%&quot; height=&quot;100%&quot; /&gt;
&lt;/div&gt;

&lt;p&gt;The tool allows you to choose the projects you want to checkout (either comma-separated or interactive) and then uses Nx’s dependency graph to determine which projects your selection is depending on and adds those to the list of projects to checkout.
It then sets all projects that are not needed to be ignored using the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;sparse-checkout&lt;/code&gt; file.
This way all other files (like &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;package.json&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;tsconfig.json&lt;/code&gt;, etc…) and other folders (like tools) are still available to you.
Resetting can be done by either selecting everything or passing the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;--all&lt;/code&gt; parameter.&lt;/p&gt;

&lt;p&gt;Using this technique, you have the advantages of a monorepo, while not having to deal with an enormous folder structure.&lt;/p&gt;</content><author><name>{&quot;first_name&quot;=&gt;&quot;Orjan&quot;, &quot;last_name&quot;=&gt;&quot;De Smet&quot;, &quot;permalink&quot;=&gt;&quot;/author/orjan-de-smet&quot;, &quot;avatar&quot;=&gt;&quot;orjan-de-smet.jpg&quot;, &quot;title&quot;=&gt;&quot;Frontend Developer&quot;, &quot;email&quot;=&gt;&quot;orjan.desmet@ordina.be&quot;, &quot;twitter&quot;=&gt;&quot;orjandesmet&quot;, &quot;github&quot;=&gt;&quot;orjandesmet&quot;, &quot;bio&quot;=&gt;&quot;Orjan is a Frontend Developer at Ordina Belgium, keen on building structured quality applications with a focus on Reactive Programming and dealing with it. He is always interested to try new technologies and to share his experiences. In his spare time, he enjoys a good game or movie or dining out.&quot;}</name><email>orjan.desmet@ordina.be</email></author><category term="Architecture" /><category term="Monorepo" /><category term="Nx" /><category term="Git" /><summary type="html">The problem</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://ordina-jworks.github.io/img/2020-03-31-nx-sparse-checkout/header.png" /><media:content medium="image" url="https://ordina-jworks.github.io/img/2020-03-31-nx-sparse-checkout/header.png" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">Healthcare on FHIR</title><link href="https://ordina-jworks.github.io/ehealth/2020/03/28/Healthcare-on-FHIR.html" rel="alternate" type="text/html" title="Healthcare on FHIR" /><published>2020-03-28T00:00:00+00:00</published><updated>2020-03-28T00:00:00+00:00</updated><id>https://ordina-jworks.github.io/ehealth/2020/03/28/Healthcare-on-FHIR</id><content type="html" xml:base="https://ordina-jworks.github.io/ehealth/2020/03/28/Healthcare-on-FHIR.html">&lt;h1 id=&quot;and-then-there-was-fhir&quot;&gt;And then there was FHIR&lt;/h1&gt;
&lt;p&gt;The healthcare industry is currently buried under mountains of data, and much of it is unorganized or out of reach. For instance, care givers who are responsible for emergency care may not always have access to the patient’s history they need.
This might force them to resort to guessing or basing their treatment on the information the patient provides. If the patient is unable to give a medical history or other information such as allergies, the problem gets worse.&lt;/p&gt;

&lt;p&gt;Exchanging healthcare information in a safer and faster manner is therefore a primary goal in the healthcare industry.
Software developers and IT professionals in this industry are tasked with integrating software applications without sacrificing security of sensitive patient information.&lt;/p&gt;

&lt;p&gt;Today’s health IT environment is also very fragmented. 
Integrating with different health systems as well as sharing data is a difficult and expensive process.
Each of these systems tend to favor flexibility of their specific function or department over interoperability with external applications.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Fast Healthcare Interoperability Resources&lt;/strong&gt; (FHIR, pronounced “fire”) is a set of standards providing a mechanism for exchanging data between healthcare applications. 
It was first sponsored by &lt;a href=&quot;http://www.hl7.org/&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;Health Level Seven International (HL7)&lt;/a&gt; in 2011, and now incorporates the best features from previously developed standards.&lt;/p&gt;

&lt;p&gt;The introduction of the FHIR specification was driven by the following:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Patient-centric healthcare: the patient is in control of his own medical data therefore sharing data across organizations and disciplines becomes more important.&lt;/li&gt;
  &lt;li&gt;Shift from offline to online, from desktop to cloud and from desktop to tablet.
FHIR is based on the REST architectural style, thus being suitable for lightweight devices.&lt;/li&gt;
  &lt;li&gt;Data transparency becomes more and more important. 
FHIR acts as an ‘Open API’ to access data silos so systems can more easily collaborate with each other.&lt;/li&gt;
  &lt;li&gt;Data analytics is a hot topic and requires data transparency but also for the data itself to be in a format which is optimized for analysis.
Standardized and well-documented models as well as support for JSON-like formats by modern databases make FHIR an interesting choice.&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;p&gt;“The intended scope of FHIR is broad, covering human and veterinary, clinical care, public health, clinical trials, administration and financial aspects. The standard is intended for global use and in a wide variety of architectures and scenarios.”&lt;/p&gt;

  &lt;p&gt;&lt;em&gt;- HL7 (Health Level Seven International)&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;This relatively new protocol has several advantages:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;The FHIR specification is free to use, open source with no restrictions and entirely available online at &lt;a href=&quot;https://www.hl7.org/fhir&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;https://www.hl7.org/fhir/&lt;/a&gt;.
It has been licensed under the Creative Commons Public Domain License, a license that permits the following: “You can copy, modify, distribute and perform the work, even for commercial purposes, all without asking permission.”&lt;/li&gt;
  &lt;li&gt;It has a strong focus on fast and easy implementation by using common tools, formats and web-based technologies without a steep learning curve. 
Multiple implementation libraries are available with many examples to kickstart development.
For instance, the &lt;a href=&quot;https://hapifhir.io&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;HAPI FHIR library&lt;/a&gt; is an open source implementation of the HL7 FHIR specification for Java.&lt;/li&gt;
  &lt;li&gt;The FHIR format is human-readable.
Although it is not intended for direct human viewing, being directly understandable helps both implementers and medical personnel.
The base out-of-the-box interoperable resources can be used as is, but can also be extended and adapted for local or regional requirements.&lt;/li&gt;
  &lt;li&gt;FHIR leverages modern web-based communication technologies such as XML, JSON, HTTP, Atom, OAuth, …
It supports RESTful architectures, but other information exchange architectures/paradigms as well. The Document paradigm allows a system to send over a collection of resources about a Patient, for instance a referral to a specialist which involves the patient’s history including medications and diagnoses. FHIR also supports the Messaging paradigm which is often based on real-world events like a Patient being discharged from the hospital.&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;why-should-you-be-excited-about-fhir&quot;&gt;Why should you be excited about FHIR?&lt;/h1&gt;
&lt;p&gt;FHIR has the potential to make healthcare much more similar to other internet-based experiences that consumers nowadays enjoy in different industries.&lt;br /&gt;
The Internet of Medical Things (IoMT) is a subset of IoT devices that captures and transmits patient-generated health data (PGHD). 
IoMT represents one of the largest technology revolutions and is growing at a lightning pace. 
The mountains of PGHD are growing every day but remain meaningless to healthcare providers if they’re not able to access the essence of the data quickly and easily. 
FHIR may be the glue between your electronic health record (EHR) on the one hand and your smart electric toothbrush, blood glucose monitor and fitness tracker on the other hand.
It allows connecting PGHD to streamlined healthcare provider workflows and filtering the bulk-load of data in a way that makes the data useful and actionable for your care provider.&lt;/p&gt;

&lt;p&gt;Patients who see multiple care providers in different health systems might no longer have to worry about having three or four patient portals from organizations using different EHRs.
One single personal health record, which integrates data from different formats, can deliver a comprehensive view of all medications, problems, and allergies.&lt;/p&gt;

&lt;p&gt;FHIR includes all aspects of healthcare-related interoperability through RESTful APIs and a common format for hundreds of clinical data models. This is useful for:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;healthcare integrators: Transitioning to FHIR formatted XML/JSON objects in a RESTful architecture will enable you to have atomic data access to individual items within a resource, for example the Patient demographics or Observations for lab results.&lt;/li&gt;
  &lt;li&gt;healthcare systems: Building and running applications on this API standard will result in richer products with data connected from external systems.&lt;/li&gt;
  &lt;li&gt;patients: You can get and share your medical data in more ways than ever before, including with apps that you use.&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;what-about-the-tech-giants&quot;&gt;What about the tech giants?&lt;/h1&gt;
&lt;ul&gt;
  &lt;li&gt;Microsoft recently released &lt;a href=&quot;https://docs.microsoft.com/en-gb/azure/healthcare-apis/overview&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;FHIR server for Azure&lt;/a&gt;, an easy way to manage and persist health information in the cloud.
It allows you to create and deploy a FHIR service in minutes, and leverage the elastic scale of the cloud.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://cloud.google.com/healthcare&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;Google Healthcare API&lt;/a&gt; bridges the gap between care systems and applications built on Google Cloud.
It supports the industry standard interoperability protocols such as HL7, DICOM, and of course FHIR.
Google lets its customers use this medical data for analytics and machine learning in the cloud which can unlock insights that lead to clinical improvements for patients.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.apple.com/healthcare/health-records/&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;Apple’s Health Records app&lt;/a&gt; uses FHIR to let consumers download data from their health care providers in the U.S.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://aws.amazon.com/comprehend/medical/&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;Amazon Comprehend Medical&lt;/a&gt; works through &lt;a href=&quot;https://aws.amazon.com/&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;Amazon Web Services&lt;/a&gt; and is a natural processing service that uses machine learning to extract relevant medical information from unstructured text and map it to FHIR resources.&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;-and-the-community&quot;&gt;… and the community?&lt;/h1&gt;
&lt;p&gt;A community is important for knowledge sharing and connecting experts to people and teams that need help. 
Luckily the FHIR specification has a strong community that helps connecting people for both giving and getting value:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Lots of &lt;a href=&quot;https://wiki.hl7.org/Publicly_Available_FHIR_Servers_for_testing&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;public FHIR servers&lt;/a&gt; are available for testing.&lt;/li&gt;
  &lt;li&gt;FHIR developers participate actively on &lt;a href=&quot;https://stackoverflow.com/questions/tagged/hl7_fhir&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;StackOverflow&lt;/a&gt;.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.devdays.com/&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;DevDays&lt;/a&gt; is the most important and largest FHIR-only event in the world.
The DevDays mission is to give health IT professionals around the the world the opportunity to learn about FHIR, to meet with colleagues and exchange ideas, and to apply what they have learned in their day-to-day work.&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;what-does-fhir-look-like&quot;&gt;What does FHIR look like?&lt;/h1&gt;
&lt;p&gt;The following patient browser application gives an idea of what FHIR looks like and how easy it is to exchange data: &lt;a href=&quot;https://patient-browser.smarthealthit.org&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;https://patient-browser.smarthealthit.org&lt;/a&gt;. 
Definitely check out this demo app!&lt;/p&gt;

&lt;h2 id=&quot;fhir-resources&quot;&gt;FHIR Resources&lt;/h2&gt;
&lt;p&gt;A resource is the smallest unit of exchange with a defined behavior and meaning in interoperability, such as a Patient, a Device, an Observation, an Allergy Intolerance, … .
It has an identity and location (URI) where it can be found.
Furthermore, it is made up of elements of a particular datatype, and can be represented either as an XML document or a JSON document.&lt;/p&gt;

&lt;p&gt;An exhaustive list of FHIR base resources is described here: &lt;a href=&quot;http://www.hl7.org/implement/standards/fhir/resourcelist.html&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;http://www.hl7.org/implement/standards/fhir/resourcelist.html&lt;/a&gt;. 
The FHIR development team has adopted the 80% rule for resources: only define and include concepts applicable to 80% of normal implementations.
Adherence to the 80% rule is key to keeping the standard usable and not too overwhelming.
What about the other 20%? FHIR has a built-in extensibility capability for specific requirements of a particular region, discipline or organizational process.
To make extensions manageable, a set of requirements is defined that must be met as part of their use and definition.&lt;/p&gt;

&lt;p&gt;Each resource is annotated with a number or an N letter.
This is the FMM (FHIR Maturity Level) which goes from 0 to 5 and finally N (Normative).
&lt;em&gt;0&lt;/em&gt; means that the resource is still a draft.
&lt;em&gt;5&lt;/em&gt; means that it has been published in two formal publication release cycles and has been implemented in at least five independent production systems in more than one country.
A resource is &lt;em&gt;Normative&lt;/em&gt; when it is considered stable.
Other metadata also include a Security Category which represents the sensitivity level (i.e Anonymous, Business, Individual, Patient).
The Boundaries and Relationships metadata describe when to use it and which resources are related to or referenced from this one.&lt;/p&gt;

&lt;p&gt;Example of a Patient:&lt;/p&gt;
&lt;p style=&quot;text-align: center;&quot;&gt;&lt;img src=&quot;/img/2020-03-28-Healthcare-on-FHIR/resource-structure.png&quot; alt=&quot;FHIR Resource structure&quot; class=&quot;image&quot; style=&quot;margin:0px auto; max-width:70%&quot; /&gt;&lt;/p&gt;
&lt;p style=&quot;text-align: center;&quot;&gt;FHIR Resource structure&lt;/p&gt;
&lt;p&gt;The &lt;a href=&quot;https://www.hl7.org/fhir/patient.html&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;full specification&lt;/a&gt; can be found on the HL7 FHIR website.&lt;/p&gt;

&lt;h2 id=&quot;example-fhir-architectures&quot;&gt;Example FHIR architectures&lt;/h2&gt;
&lt;p&gt;Building your solution with FHIR does not change your development process nor does it enforce a specific architecture or technology stack. FHIR can be used in a lightweight or heavyweight client, in a monolith or a microservices architecture, in a push or pull-based design, …
In any case, you will still need to complete a project discovery phase, formulate a project vision and scope. You can continue to use your favorite agile practices, test driven development, CQRS and Event Sourcing, DevOps and Continuous Integration.&lt;/p&gt;

&lt;p&gt;The following section gives an example of 2 possible FHIR architectures.&lt;/p&gt;

&lt;h3 id=&quot;fhir-server-with-existing-back-end&quot;&gt;FHIR server with existing back-end&lt;/h3&gt;
&lt;p&gt;This is the most common scenario where you supply an interoperable FHIR API on top of an existing solution so it can be easily understood and consumed by clients.
This approach results largely in a mapping effort as the existing data model needs to be converted to FHIR resources.
It is possible to have a mix of both a FHIR and a proprietary API.
This can have several reasons like:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;the backend does not (yet) support the FHIR capabilities the client needs&lt;/li&gt;
  &lt;li&gt;the FHIR specification does not describe your healthcare domain or use case&lt;/li&gt;
&lt;/ul&gt;

&lt;p style=&quot;text-align: center;&quot;&gt;&lt;img src=&quot;/img/2020-03-28-Healthcare-on-FHIR/fhir-existing-backend.png&quot; alt=&quot;Mixed FHIR/Proprietary API with existing back-end&quot; class=&quot;image&quot; style=&quot;margin:0px auto; max-width:100%&quot; /&gt;&lt;/p&gt;
&lt;p style=&quot;text-align: center;&quot;&gt;Mixed FHIR/Proprietary API with existing back-end&lt;/p&gt;

&lt;h3 id=&quot;native-fhir-server-with-fhir-back-end&quot;&gt;Native FHIR server with FHIR back-end&lt;/h3&gt;
&lt;p&gt;This architecture is a FHIR-native solution because FHIR becomes the central design element of the system. 
FHIR is used as a platform specification that is stored directly in the SQL or NoSQL back-end data store and comes with some powerful features:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;a healthcare domain model (aka the Resources) and its extension capabilities&lt;/li&gt;
  &lt;li&gt;description of the types of search capabilities supported by a FHIR server&lt;/li&gt;
  &lt;li&gt;description for a FHIR server to advertise its capabilities to other systems&lt;/li&gt;
&lt;/ul&gt;

&lt;p style=&quot;text-align: center;&quot;&gt;&lt;img src=&quot;/img/2020-03-28-Healthcare-on-FHIR/fhir-fhir-backend.png&quot; alt=&quot;Native FHIR server with FHIR back-end&quot; class=&quot;image&quot; style=&quot;margin:0px auto; max-width:100%&quot; /&gt;&lt;/p&gt;
&lt;p style=&quot;text-align: center;&quot;&gt;Native FHIR server with FHIR back-end&lt;/p&gt;

&lt;h1 id=&quot;summary&quot;&gt;Summary&lt;/h1&gt;
&lt;p&gt;Today, there’s lots of buzz about FHIR.
You might find it anywhere from federal agencies to major technology companies.
Google, Microsoft and Apple have all thrown in their considerable weight and cloud-based resources behind FHIR and are improving interoperability in healthcare.
The underlying concepts behind FHIR are important drivers of the push towards interoperability.
It supports the exchange of data between software applications in healthcare, combining the best features of HL7’s existing interoperability protocols while leveraging the latest web standards and applying a tight focus on implementability. 
FHIR is worth paying attention to because it is a huge step forward in working with healthcare data and is likely to have a significant impact on health IT.&lt;/p&gt;</content><author><name>{&quot;first_name&quot;=&gt;&quot;Martin&quot;, &quot;last_name&quot;=&gt;&quot;Kwee&quot;, &quot;permalink&quot;=&gt;&quot;/author/martin-kwee/&quot;, &quot;avatar&quot;=&gt;&quot;martin-kwee.jpg&quot;, &quot;title&quot;=&gt;&quot;Principal Consultant&quot;, &quot;email&quot;=&gt;&quot;martin.kwee@ordina.be&quot;, &quot;linkedin&quot;=&gt;&quot;martinkwee&quot;, &quot;bio&quot;=&gt;&quot;Martin is a Java consultant at Ordina Belgium. He enjoys a good technical challenge and has a strong interest in architecture and eHealth.&quot;}</name><email>martin.kwee@ordina.be</email></author><category term="eHealth" /><category term="eHealth" /><category term="Architecture" /><category term="FHIR" /><category term="Interoperability" /><summary type="html">And then there was FHIR The healthcare industry is currently buried under mountains of data, and much of it is unorganized or out of reach. For instance, care givers who are responsible for emergency care may not always have access to the patient’s history they need. This might force them to resort to guessing or basing their treatment on the information the patient provides. If the patient is unable to give a medical history or other information such as allergies, the problem gets worse.</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://ordina-jworks.github.io/img/2020-03-28-Healthcare-on-FHIR/FHIR_logo.png" /><media:content medium="image" url="https://ordina-jworks.github.io/img/2020-03-28-Healthcare-on-FHIR/FHIR_logo.png" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">Charting the Non-Functional Waters</title><link href="https://ordina-jworks.github.io/architecture/2020/03/24/Charting-non-functionals.html" rel="alternate" type="text/html" title="Charting the Non-Functional Waters" /><published>2020-03-24T00:00:00+00:00</published><updated>2020-03-24T00:00:00+00:00</updated><id>https://ordina-jworks.github.io/architecture/2020/03/24/Charting-non-functionals</id><content type="html" xml:base="https://ordina-jworks.github.io/architecture/2020/03/24/Charting-non-functionals.html">&lt;h1 id=&quot;introduction&quot;&gt;Introduction&lt;/h1&gt;

&lt;p&gt;Where functional requirements are relatable to most stakeholders as they are derived from their areas of expertise, specifying the brunt of the non-functionals tends to fall to the solution architect. 
As these requirements are more technical in nature, the affinity of other stakeholders with them is not as pronounced. 
When inquiring about their relevance, the typical answer will be in very generic fashion, for example: “The application needs to be fast.” 
Trying to get more concrete and measurable statements is not an easy endeavor. 
We’ll get back to this further on in the blog post.&lt;/p&gt;

&lt;h1 id=&quot;formalizing-the-requirements&quot;&gt;Formalizing the Requirements&lt;/h1&gt;

&lt;p&gt;Once we have the appropriate numbers, we need to formalize them and get them validated. 
Just as the structure and formalization of the functional requirements is expressed as user stories, or in some cases even more detailed in the form of Business Processes and use cases, in a similar manner will we structure and formalize the non-functionals based on the ISO 25010 standard. 
Some older architecture documents could also still make a reference to the ISO 9126 standard, which is its predecessor.&lt;/p&gt;

&lt;p style=&quot;text-align: center;&quot;&gt;&lt;img src=&quot;/img/2020-03-24-Charting-non-functionals/iso25010.png&quot; alt=&quot;Workspace&quot; class=&quot;image&quot; style=&quot;margin:0px auto; max-width:100%&quot; /&gt;&lt;/p&gt;
&lt;p style=&quot;text-align: center;&quot;&gt;ISO 25010 Standard&lt;/p&gt;

&lt;p&gt;Since the ISO standard focuses on quality and acceptance of the delivered product, the same model should be the basis to compose requirements as well. 
As a result, the quality attributes can be considered as the non-functional requirements of the product focusing on expectations about functionality, usability, reliability, efficiency, maintainability and portability. 
However, in order to make the factors more complete and representative, each of the characteristics has been split up into its proper set of sub-characteristics.&lt;/p&gt;

&lt;h1 id=&quot;prioritizing-the-requirements&quot;&gt;Prioritizing the Requirements&lt;/h1&gt;

&lt;p&gt;Note however that not all characteristics and associated sub-characteristics are as important to each and every project. 
On a case-by-case basis, some of them can be given a very low priority or even entirely neglected. 
Hence, the priority indication is very important in the specification for every requirement. 
These are the tradeoffs that an architect needs to chart to arrive at the proper solution. 
One of the ways to weigh them was described in the &lt;a href=&quot;https://www.amazon.co.uk/Software-Requirements-Developer-Best-Practices/dp/0735679665/ref=sr_1_1&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;book “Software Requirements” by Karl Wiegers and Joy Beatty&lt;/a&gt;. 
The idea is to chart them in a matrix which marks the requirements that take precedence over others when they have conflicting impacts on the solution. 
For example: When business stakeholders ask for a speed of delivery that is contradicted by security concerns demanding a mandatory waiting period for customer due diligence purposes, a decision needs to be taken on which of these requirements gets the upper hand for the implementation.&lt;/p&gt;

&lt;p style=&quot;text-align: center;&quot;&gt;&lt;img src=&quot;/img/2020-03-24-Charting-non-functionals/nonfuncprios.png&quot; alt=&quot;Workspace&quot; class=&quot;image&quot; style=&quot;margin:0px auto; max-width:100%&quot; /&gt;&lt;/p&gt;

&lt;p&gt;A reflection of this type of requirements contradiction can be found in the CAP theorem. 
The CAP theorem, also named Brewer’s theorem after computer scientist Eric Brewer, states that it is impossible for a distributed computer system to simultaneously provide more than two out of three of the following guarantees: Consistency. Availability. Partition tolerance. 
Consistency is the characteristic that determines that a service will always give the same answer across multiple nodes. 
Availability reflects that every service request should get a response. Partition tolerance is the ability to handle the occasional failure in communication between two services. 
A balance matching the needs of the solution must be determined between these three requirements in order to implement a solution that fits the bill.&lt;/p&gt;

&lt;p&gt;There are some frameworks that already have some form of priority already built in. They implement this by reducing the number of non-functional categories to only those relevant in their point of view. For example, when we take the AWS Well-Architected Framework, the determining non-functionals are reduced to five categories based on Amazon’s experiences and best practices. For each of these pillars AWS has published a white paper on how to improve and optimize them. IT also provides tooling and labs to help the architect make the proper tradeoffs.&lt;/p&gt;

&lt;p style=&quot;text-align: center;&quot;&gt;&lt;img src=&quot;/img/2020-03-24-Charting-non-functionals/awswellarch.png&quot; alt=&quot;Workspace&quot; class=&quot;image&quot; style=&quot;margin:0px auto; max-width:100%&quot; /&gt;&lt;/p&gt;
&lt;p style=&quot;text-align: center;&quot;&gt;Pillars of the AWS Well-Architected Framework&lt;/p&gt;

&lt;p&gt;When maturing the requirement list set out for the solution, it might become a difficult and complex task to get accurate numbers to quantify the requirements and make them measurable. We can gather the logs of existing systems that we are replacing to get a grip on what traffic we can expect. But this is not always an option. Suppose we are developing a solution for registering timesheets of employees in a small business that have just gotten a significant enough growth in its sales to justify the cost of such a solution. It doesn’t have numbers on how many times the services of such a system should be called and it doesn’t have an existing system from which to extract them. This is where we start to rely on deduction. We start from relevant data that we do have access to or make assumptions based on experience and we extrapolate from there. In the case of our timesheet solution, we count the number of employees (relevant data) and multiply it by the number of times a week we assume they will access the timesheet solution resulting in a quantified requirement.&lt;/p&gt;

&lt;h1 id=&quot;data-solution-requirements&quot;&gt;Data Solution Requirements&lt;/h1&gt;

&lt;p&gt;Most of the requirements stipulated by the ISO 25010 standard apply to software solutions. The game changes a bit if this solution is primarily or even solely focused on the data facet. When designing a data solution such as for example a solution that gathers and evaluates the available data for a specific topic, we look at a sister standard of the one previously mentioned. The ISO 25012 is part of the same family and offers requirements fitting two categories with some these shared by both. These categories are:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Inherent Data Quality: This category gathers all requirements that deal with the inherent data quality of the data sets that are being used in the solution.&lt;/li&gt;
  &lt;li&gt;System-Dependent Data Quality: This category deals with the requirements that have to do with the capabilities of maintaining the quality inherent in the data sets.&lt;/li&gt;
&lt;/ul&gt;

&lt;p style=&quot;text-align: center;&quot;&gt;&lt;img src=&quot;/img/2020-03-24-Charting-non-functionals/iso25012.png&quot; alt=&quot;Workspace&quot; class=&quot;image&quot; style=&quot;margin:0px auto; max-width:100%&quot; /&gt;&lt;/p&gt;
&lt;p style=&quot;text-align: center;&quot;&gt;ISO 25012 Standard&lt;/p&gt;

&lt;h1 id=&quot;operational-requirements&quot;&gt;Operational Requirements&lt;/h1&gt;

&lt;p&gt;When a solution finally goes live, it will have an impact on the existing way of working within the organization. 
Not only are its users a stakeholder, but there is also the team that will support the solution to consider as well. 
Therefore, a set of operational requirements is usually determined by analyzing how the managed services team will keep the solution up and running, how they will cope with bug fixing and evolutionary maintenance, and how to cope with negative impact.&lt;/p&gt;

&lt;p&gt;As with non-functional requirements, so can these requirements be categorized by using an ISO standard, in this case the ISO 25022 standard, or the “Quality in Use” Model. 
This standard defines measures for the characteristics of the previously mentioned ISO 25010 standard and consists of a basic set of impact measures and methodologies to quantify each of them. 
This standard is a collection of suggested measures and is by no means an exhaustive list. A visual representation of these requirements can be seen in the illustration below.&lt;/p&gt;

&lt;p style=&quot;text-align: center;&quot;&gt;&lt;img src=&quot;/img/2020-03-24-Charting-non-functionals/iso25022.png&quot; alt=&quot;Workspace&quot; class=&quot;image&quot; style=&quot;margin:0px auto; max-width:100%&quot; /&gt;&lt;/p&gt;
&lt;p style=&quot;text-align: center;&quot;&gt;ISO 25022 Standard&lt;/p&gt;

&lt;h1 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h1&gt;

&lt;p&gt;In summary, an architect needs to be able to get a handle on all the angles of the solution as soon as possible in the development process, and requirements, both functional and non-functional, allow him or her the overarching vision to guide development along. 
Be wary of analysis paralysis though. 
To quote the former US Secretary of Defence Donald Rumsfeld: “There are known unknowns, that is to say, there are things that we now know we don’t know them.” 
So, avoid trying to get the perfect picture of the requirements, and instead factor into your solution that new requirements can pop up and hidden ones can be revealed during the later stages of the project.&lt;/p&gt;</content><author><name>{&quot;first_name&quot;=&gt;&quot;Peter&quot;, &quot;last_name&quot;=&gt;&quot;De Kinder&quot;, &quot;github&quot;=&gt;&quot;peterdekinder&quot;, &quot;linkedin&quot;=&gt;&quot;peterdekinder&quot;, &quot;permalink&quot;=&gt;&quot;/author/peterdekinder/&quot;, &quot;avatar&quot;=&gt;&quot;peterdekinder.jpg&quot;, &quot;title&quot;=&gt;&quot;Solution Architect&quot;, &quot;email&quot;=&gt;&quot;peter.dekinder@ordina.be&quot;, &quot;bio&quot;=&gt;&quot;Peter is a Solution Architect with firm roots in the Java technosphere, but with a wide interest in all things architecture. His areas of specialization include Service Oriented Architectures, Business Process Management and Security.&quot;}</name><email>peter.dekinder@ordina.be</email></author><category term="Architecture" /><category term="Architecture" /><summary type="html">Introduction</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://ordina-jworks.github.io/img/2020-03-24-Charting-non-functionals/nonfunc_background.jpg" /><media:content medium="image" url="https://ordina-jworks.github.io/img/2020-03-24-Charting-non-functionals/nonfunc_background.jpg" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">Zero Plastic Rivers - explained</title><link href="https://ordina-jworks.github.io/cloud/2020/03/16/ZPR-explained.html" rel="alternate" type="text/html" title="Zero Plastic Rivers - explained" /><published>2020-03-16T00:00:00+00:00</published><updated>2020-03-16T00:00:00+00:00</updated><id>https://ordina-jworks.github.io/cloud/2020/03/16/ZPR-explained</id><content type="html" xml:base="https://ordina-jworks.github.io/cloud/2020/03/16/ZPR-explained.html">&lt;h1 id=&quot;table-of-contents&quot;&gt;Table Of Contents&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;#introduction&quot;&gt;Introduction&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#architecture&quot;&gt;Architecture&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#security&quot;&gt;Security&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#developer-experience&quot;&gt;Developer experience&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#conclusion&quot;&gt;Conclusion&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;introduction&quot;&gt;Introduction&lt;/h1&gt;

&lt;p&gt;As a society we treat plastic irresponsibly. Because of us, enormous amounts of plastic waste end up in our rivers.&lt;br /&gt;
And if we don’t remove this plastic from the rivers before it reaches the estuary, this plastic will inevitably end up in the plastic soup, which in turn gets bigger.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://zeroplasticrivers.com&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;The Zero Plastic Rivers (ZPR) initiative&lt;/a&gt;  tries to solve this problem by doing three things: measure, prevent and clean up.&lt;br /&gt;
Plastic pollutes our seas and oceans.&lt;br /&gt;
Currently at least 150 million tons of plastic waste floats in our oceans, forming the infamous plastic soup.&lt;br /&gt;
And it is getting worse; it’s estimated another 8 million tons is added every year.&lt;br /&gt;
That’s about one truck of plastic per minute that get’s dumped into our oceans.&lt;/p&gt;

&lt;h2 id=&quot;approach&quot;&gt;Approach&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;The Zero Plastic Rivers initiative&lt;/strong&gt;  wants to make sure that our rivers no longer bring plastic waste to the seas.&lt;br /&gt;
We want to do this based on a scientific and structured approach, inspired by the principles of quantitative optimization as defined by &lt;strong&gt;Six Sigma.&lt;/strong&gt;&lt;/p&gt;

&lt;h2 id=&quot;endgoal&quot;&gt;Endgoal&lt;/h2&gt;
&lt;p&gt;Our rivers are severely polluted with plastic, making them the largest source of plastic soup in our oceans, even up to 80%.&lt;br /&gt;
We can only solve this problem by ensuring that our rivers no longer supply plastic to the sea.&lt;br /&gt;
And that is why we are striving for Zero Plastic Rivers.&lt;/p&gt;

&lt;p&gt;To be more effective in the fight against the plastic soup it is important to get more insight in how plastic moves through the rivers.&lt;br /&gt;
This is where Bert Teunkens together with the University of Antwerp comes into play.&lt;br /&gt;
The subject of his PhD is: Quantification and characterization of the plastic fluxes in the Scheldt basin, with the ultimate goal of setting-up an efficient remediation.&lt;/p&gt;

&lt;p&gt;To help him reach his goal of creating strategies to combat the plastic pollution he needs insights in how different kinds of plastic moves through our waterways.&lt;br /&gt;
Bert came up with different ways to gather this data:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;using citizen science&lt;/li&gt;
  &lt;li&gt;IoT&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;citizen-science&quot;&gt;Citizen science&lt;/h3&gt;

&lt;div style=&quot;text-align: center;&quot;&gt;
  &lt;img alt=&quot;Zero Plastic Rivers Plastic&quot; src=&quot;/img/2020-03-16-ZPR-explained/zpr_allplastic.jpg&quot; width=&quot;auto&quot; height=&quot;40%&quot; target=&quot;_blank&quot; class=&quot;image fit&quot; /&gt;
&lt;/div&gt;

&lt;p&gt;A large quantity of plastic objects were dipped in fluorescent paint and were tagged with water resistant stickers containing metadata about that object.&lt;br /&gt;
These objects were released in the waterways with the assumption they would wash ashore eventually.&lt;br /&gt;
Because they were brightly colored, they would be easy to spot by passers-by.&lt;br /&gt;
These people could then enter various information about the object such as the unique object identifier, GPS location, pictures, description, …&lt;/p&gt;

&lt;h3 id=&quot;iot&quot;&gt;IoT&lt;/h3&gt;

&lt;div style=&quot;text-align: center;&quot;&gt;
  &lt;img alt=&quot;Zero Plastic Rivers Sensor&quot; src=&quot;/img/2020-03-16-ZPR-explained/zpr_tracker.jpg&quot; width=&quot;auto&quot; height=&quot;40%&quot; target=&quot;_blank&quot; class=&quot;image fit&quot; /&gt;
&lt;/div&gt;

&lt;p&gt;Another great way to gather datapoints was through GPS trackers.&lt;br /&gt;
Various industrial grade battery powered GPS trackers were put in a waterproof casing and then deployed into the river.&lt;br /&gt;
Using a 2G network, these GPS trackers would travel along the river and transmit a new GPS fix every hour.&lt;br /&gt;
Various measures were taken to optimize battery consumption as we expected the trackers to travel for an extended period of time. This was done by putting a specific configuration on these devices.&lt;/p&gt;

&lt;h2 id=&quot;partnering&quot;&gt;Partnering&lt;/h2&gt;
&lt;p&gt;Bert approached Ordina because of our deep IoT knowledge and user centric end-to-end project approach.&lt;/p&gt;

&lt;p&gt;Ordina helped create an application to gather the datapoints and visualise them so that he could formulate ways of setting up efficient remediation.&lt;/p&gt;

&lt;p&gt;This was quite an exciting and important project for Ordina and the JWorks crew as it checks 2 boxes at the same time: doing a project with the latest and greatest technology while having a significant impact on society!&lt;/p&gt;

&lt;p&gt;This project would allow us to use all our skills to build a solution that would solve a major problem for society.&lt;br /&gt;
With our multi-disciplinary team we were able to tackle following domains: user experience, application and cloud architecture, frontend and backend development, security and managed application hosting.&lt;/p&gt;

&lt;h1 id=&quot;user-experience&quot;&gt;User Experience&lt;/h1&gt;
&lt;p&gt;From the get-go it seemed very crucial to nail the user experience for the citizen science part of the application.&lt;br /&gt;
The success of the project depended on benevolent strangers to pick up our brightly colored plastic waste, read the instruction and input a significant amount of data into our system.&lt;br /&gt;
This process needed to be clear, painless and concise. &lt;br /&gt;
Bad user interaction would lead to no datapoints and thus doom the project.&lt;/p&gt;

&lt;p&gt;The initial idea was to put QR tags on all the plastic objects and have users scan them.&lt;br /&gt;
Altough everyone deemed this an elegant and efficient way of working, we decided to test this on “regular people”.&lt;br /&gt;
This was done by conducting guerilla testing: talking to random people outside our office building, showing them a ZPR plastic object with a tag and seeing what they would do.&lt;/p&gt;

&lt;p&gt;Turns out very few people instinctively know what to do with a QR code.&lt;br /&gt;
To counter this, we opted to add a very short url on the object: www.zpr.one&lt;br /&gt;
This allowed more users to reach our application and fill in all the data we needed.&lt;/p&gt;

&lt;p&gt;Once they were in the application we had to make it straightforward for them to collect all the data we needed.&lt;br /&gt;
Various rapid iteration of the UI were made using wireframes and mockups.&lt;br /&gt;
These were tested and validated to create an optimal flow through the various screens as we wanted a very low threshold for users to input the data.&lt;/p&gt;

&lt;p&gt;We opted to create a Progressive Web Application (PWA) instead of a native application as we felt that users did not want to install yet another app.
As we required access to native features such as GPS and camera a PWA seemed perfect for the job!&lt;/p&gt;

&lt;h1 id=&quot;architecture&quot;&gt;Architecture&lt;/h1&gt;

&lt;p&gt;To build and run this modern and complex project we opted to use the AWS platform.&lt;br /&gt;
For a considerable amount of time we at JWorks have been investing our efforts and resources to build up our AWS portfolio.&lt;br /&gt;
This means we work on building up the AWS skills of our people and in parallel we work on building up our portfolio of AWS enabled solutions.&lt;br /&gt;
We have worked out several reference architectures that we prefer to use now.&lt;br /&gt;
The advantage of these architectures is that every consultant within our unit knows how to use them and develop applications using them.&lt;/p&gt;

&lt;p&gt;The Zero Plastic Rivers project proved to be an excellent opportunity to put some of these into practice.&lt;br /&gt;
You can view the architecture we opted to build in the following picture.&lt;/p&gt;

&lt;div style=&quot;text-align: center;&quot;&gt;
  &lt;img alt=&quot;Zero Plastic Rivers&quot; src=&quot;/img/2020-03-16-ZPR-explained/zpr_architecture.jpg&quot; width=&quot;auto&quot; height=&quot;40%&quot; target=&quot;_blank&quot; class=&quot;image fit&quot; /&gt;
&lt;/div&gt;

&lt;p&gt;This big architectural picture can be divided in 3 big sections:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Backend java application&lt;/li&gt;
  &lt;li&gt;Frontend ionic app&lt;/li&gt;
  &lt;li&gt;IoT sensor data ingestion&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;We will highlight some key features of each architectural section in the following paragraphs.&lt;/p&gt;

&lt;h2 id=&quot;backend-application&quot;&gt;Backend application&lt;/h2&gt;

&lt;div style=&quot;text-align: center;&quot;&gt;
  &lt;img alt=&quot;Zero Plastic Rivers&quot; src=&quot;/img/2020-03-16-ZPR-explained/zpr_arch_backend.jpg&quot; width=&quot;auto&quot; height=&quot;40%&quot; target=&quot;_blank&quot; class=&quot;image fit&quot; /&gt;
&lt;/div&gt;

&lt;h3 id=&quot;the-backend-itself&quot;&gt;The backend itself&lt;/h3&gt;
&lt;p&gt;Since we are called JWorks and we mainly focus on Java/Javacript development it should be no surprise that our backend application is written in Java with the Spring Boot framework.&lt;br /&gt;
In general we prefer to write backends in the microservices paradigm, but in this case the backend was sufficiently small that it only consists of 1 microservice.&lt;br /&gt;
The application itself is a pretty standard spring boot application.&lt;br /&gt;
We use a postgreSQL server hosted in RDS as our persistent datastore on the backend, supplemented with an elasticache Redis cluster to cache database queries and configurations for the IoT sensors used in the IoT sensor data ingestion part.&lt;br /&gt;
Our backend service is reachable over a REST interface for the outside world, we will talk more about this interface when we discuss the frontend application.&lt;/p&gt;

&lt;h3 id=&quot;hosting-of-the-application&quot;&gt;Hosting of the application&lt;/h3&gt;
&lt;p&gt;The backend application is hosted on our Kubernetes cluster in the AWS cloud. This cluster is an EKS cluster that we use to run several projects for customers and is also used for some of our internal applications.&lt;br /&gt;
The EKS cluster is a multi-worker node cluster setup with multiple Auto Scaling Groups so we can guarantuee almost 100% uptime on our applications that run on this cluster.&lt;br /&gt;
We have been using Kubernetes in different forms (on-premise, AKS, PKS,  …) for a long time now which means we have a very clear image of how to use it and how to run applications on a cluster.&lt;br /&gt;
We make heavy use of several key features like: secrets, configmaps, …&lt;br /&gt;
Our EKS cluster is running several plugins that allow us to quickly configure infrastructure components on the AWS cloud from within our cluster.&lt;br /&gt;
For example the REST interface of the application is exposed through a Kubernetes ingress which is hooked up to the ALB controller plugin.&lt;br /&gt;
This means that whenever we create a new ingress a new Application Load Balancer will be automatically provisioned in the AWS cloud to expose our deployment to the outside world. This makes it very easy to work with and allows us a lot of flexibility.&lt;/p&gt;

&lt;h2 id=&quot;frontend&quot;&gt;Frontend&lt;/h2&gt;

&lt;div style=&quot;text-align: center;&quot;&gt;
  &lt;img alt=&quot;Zero Plastic Rivers&quot; src=&quot;/img/2020-03-16-ZPR-explained/zpr_arch_frontend.jpg&quot; width=&quot;auto&quot; height=&quot;40%&quot; target=&quot;_blank&quot; class=&quot;image fit&quot; /&gt;
&lt;/div&gt;

&lt;p&gt;Our frontend application consists of two parts.&lt;br /&gt;
The first part is aimed at citizens who wish to help the cause. They can feed data in the system via the citizen science application when they find a bottle as shown in the image below.&lt;br /&gt;
This is the first way that data from the plastic bottles comes into our system. We allow the user to upload an optional image when submitting this data. These images are stored in a secure S3 bucket.&lt;br /&gt;
The second part is aimed at the researchers, and could be seen as the backoffice of the project, where the data given by the GPS trackers and the citizens is visualized in a clear and orderly way.&lt;/p&gt;

&lt;div style=&quot;text-align: center;&quot;&gt;
  &lt;img alt=&quot;Zero Plastic Rivers&quot; src=&quot;/img/2020-03-16-ZPR-explained/zpr-frontend-application.png&quot; width=&quot;auto&quot; height=&quot;40%&quot; target=&quot;_blank&quot; class=&quot;image fit&quot; /&gt;
&lt;/div&gt;

&lt;p&gt;To develop this application we have chosen to use Ionic. &lt;a href=&quot;https://ionicframework.com/&quot;&gt;Ionic&lt;/a&gt; is a free-to-use web-based framework that allows you to build hybrid mobile apps for iOS and Android, all from one codebase. In other words, Ionic is a tool for cross-platform mobile development. Ionic enables you to develop mobile apps using web technologies and languages like HTML, CSS, JavaScript, Angular, and TypeScript.&lt;/p&gt;

&lt;h3 id=&quot;data-visualization&quot;&gt;Data visualization&lt;/h3&gt;

&lt;div style=&quot;text-align: center;&quot;&gt;
  &lt;img alt=&quot;Zero Plastic Rivers&quot; src=&quot;/img/2020-03-16-ZPR-explained/zpr_arch_data_ingestion.jpg&quot; width=&quot;auto&quot; height=&quot;40%&quot; target=&quot;_blank&quot; class=&quot;image fit&quot; /&gt;
&lt;/div&gt;

&lt;p&gt;One of the most relevant components in this application is the map where the sensors and the plastic bottles in the river are visualized by means of the coordinates registered in these items as shown in the image above. For this we have chosen to use &lt;a href=&quot;https://leafletjs.com/&quot;&gt;Leaflet&lt;/a&gt; which is an open source JavaScript library for adding interactivity to maps. They have a ton of features and plugins to support doing pretty much anything with a map that you can think of.&lt;/p&gt;

&lt;p&gt;Ionic offers a wide variety of ready to use plug-ins and one of them is the camera that enables users who decide to participate in this project to take pictures of the bottles to update the status and deterioration of each bottle in the river.&lt;/p&gt;

&lt;h3 id=&quot;frontend-testing&quot;&gt;Frontend Testing&lt;/h3&gt;

&lt;p&gt;In reference to software testing we have mainly used Unit Testing to reduce the number of errors that are released during deployment, which we consider critical for effective software development.&lt;/p&gt;

&lt;h3 id=&quot;frontend-deployment&quot;&gt;Frontend deployment&lt;/h3&gt;

&lt;p&gt;Originally we planned to host this application in a nginx webserver in our EKS cluster. We changed to S3 as it is an easier to maintain solution than running your own webserver on Kubernetes. We have setup a hosted zone in Route53 which serves as the entry point of users into our application. Route53 then forwards users who visit zpr.one to our Cloudfront distribution. Cloudfront serves the ionic app from our S3 bucket which has static webhosting enabled. This setup seems optimal as it is low maintenance, tightly secured and highly scalable.&lt;/p&gt;

&lt;h4 id=&quot;low-maintenance&quot;&gt;Low maintenance&lt;/h4&gt;
&lt;p&gt;To explain why this setup is low maintenance let us take a look at the components used in this architecture.&lt;br /&gt;
We are making use of Cloudfront, S3 and Route53 in this setup.&lt;br /&gt;
All of these services are managed services provided by AWS.&lt;br /&gt;
This means that there is no maintenance required on our part as AWS guarantees uptime and makes sure that everything is running smoothly.&lt;br /&gt;
The only manual actions that have occurred on our side in this setup so far was to clear the Cloudfront cache after releasing a new version to have the new version more quickly available to users of the app.&lt;/p&gt;

&lt;h4 id=&quot;tightly-secured&quot;&gt;Tightly secured&lt;/h4&gt;
&lt;p&gt;Since we are using only managed services from AWS the burden of patching those services and making sure they are secured is on AWS itself.&lt;br /&gt;
AWS has an excellent reputation on this regard so we feel very comfortable in this regard.&lt;br /&gt;
We also make use of several additional features provided by AWS to secure our application further.&lt;br /&gt;
For example the S3 bucket that is used to host the website is only accessible through the Cloudfront distribution.&lt;br /&gt;
So users do not need access to the S3 resources itself, we implemented this nicely through Bucket policies and IAM access control.&lt;/p&gt;

&lt;h4 id=&quot;highly-scalable&quot;&gt;Highly scalable&lt;/h4&gt;
&lt;p&gt;Since we are only allowing traffic to our application from the Cloudfront distribution this means that we get all the benefits from this global CDN.&lt;br /&gt;
Cloudfront operates on the AWS edge locations which are spread throughout the world.&lt;br /&gt;
Because our application is mostly Belgium based this was not as important to us but the fact that Cloudfront routes its requests over the internal AWS backbone makes a huge difference in speed which is a nice feature if you are working with global applications.&lt;br /&gt;
The S3 service which acts as the origin for our Cloudfront distribution is &lt;strong&gt;nearly infinitely scalable&lt;/strong&gt; as proclaimed by AWS itself.&lt;br /&gt;
The interaction between our frontend and backend happens over REST services provided by our backend in the EKS cluster which is exposed over an ALB so we are very confident that we can scale up as needed.&lt;/p&gt;

&lt;h2 id=&quot;iot-sensor-data-ingestion&quot;&gt;IoT sensor data ingestion&lt;/h2&gt;

&lt;p&gt;IoT is all about processing a large quantity of messages.&lt;/p&gt;

&lt;p&gt;What makes IoT data challenging from a developer perspective is threefold:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Protocol&lt;/li&gt;
  &lt;li&gt;Data format&lt;/li&gt;
  &lt;li&gt;Message Content&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Imagine you have a device that captures and delivers GPS data. 
Seems simple enough right? Guess again!&lt;/p&gt;

&lt;p&gt;A hardware vendor can decide to mix and match these 3 components.&lt;/p&gt;

&lt;p&gt;The vendor can those over which protocol he wants to send the data.
Some examples are: HTTP(S), TCP, UDP, MQTT, COAP, …&lt;/p&gt;

&lt;p&gt;He can also use different kinds of data-serialization formats to get the information across the network of choice: JSON, XML, Hex, Binary, something proprietary, … Different kinds of parsers will be needed.&lt;/p&gt;

&lt;p&gt;And last but not least: he can organise the way a message is structured. He can name fields any way he wants and use any kind of data type. Imagine two vendors reporting battery capacity. One could report it by sending a field called “battery” and reporting battery voltage.
Another could use a field called “power” and return a battery fill level percentage.&lt;/p&gt;

&lt;p&gt;Soon, it can become quite complex due to the number of combinations possible.&lt;/p&gt;

&lt;p&gt;Some of our plastic containers send their location via the 2G cellular network at regular intervals.&lt;br /&gt;
These messages reach us via a public network through the tcp protocol.&lt;/p&gt;

&lt;p&gt;As various protocols such as TCP and UDP are quite prevalent in IoT solutions, we do see that they are not yet first class citizens in the cloud.
Eventhough it is possible to modify the ingress to kubernetes on our NGINX to allow TCP data to pass through, this is not a scalable solution. Imagine having thousands upon thousands of devices starting new TCP connections. This would kill our NGINX.
To solve this problem we used a native AWS component: the network load balancer. 
This allowed limitless scaling of TCP connections. These TCP connections would then end up on an Spring Boot application hosted on AWS Beanstalk, which is basically a managed horizontally scalable Tomcat server. This application has to handle the interactions with the devices and acts as a “sensor gateway”.
The sensors can receive instructions and updates, but this has to happen inside the same open tcp connection within a very short timeframe.&lt;br /&gt;
This gateway consults the Elasticache for any needed instructions or updates.&lt;br /&gt;
If a return message is needed, it is sent through the open tcp connection.&lt;br /&gt;
The sensor detection message is then passed on to an SQS queue. From here on out, the focus of handling the message is less time-sensitive.&lt;br /&gt;
A Lambda function decodes the message on the queue and then pushes it to another SQS message queue.&lt;br /&gt;
A Spring Boot backend that is deployed in our kubernetes cluster handles these last events and persists them to our database.&lt;/p&gt;

&lt;h1 id=&quot;security&quot;&gt;Security&lt;/h1&gt;

&lt;p&gt;One key element of the security is controlling who has access to an application. To strengthen security, reduce risk and improve compliance, it is essential that only authorized users get to access specific data in an application and that authentication is required before that access is granted. This means that authentication is a critical component for most applications and in this project it was no exception, as we needed to secure the data visualization part of the application so that only researchers have access to advanced functionality.&lt;/p&gt;

&lt;p&gt;To perform this authentication, we have chosen to use AWS Cognito as it dramatically simplifies application development by providing an authentication service that is simple to integrate into any modern application. In addition to storing login information, Cognito can store standard and custom user account settings. Learn more about AWS Cognito and its advantages &lt;a href=&quot;https://aws.amazon.com/cognito/&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Another advantage of AWS Cognito is that it supports OpenID Connect which is a simple identity layer built on top of the OAuth 2.0 protocol, which allows clients to verify the identity of an end user based on the authentication performed by an authorization server or identity provider (IdP), as well as to obtain basic profile information about the end user in an interoperable and REST-like manner. Learn more about OpenID Connect &lt;a href=&quot;https://openid.net/connect/&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;h3 id=&quot;aws-cognito-and-openid-connect&quot;&gt;AWS Cognito and OpenID Connect&lt;/h3&gt;

&lt;p&gt;To carry out authentication using the OpenID Connect standard with Cognito we have chosen to use the Authorization Code Grant which is the preferred and most secure method for authorizing end users. Instead of directly providing user pool tokens to an end user upon authentication, an authorization code is provided. This code is then sent to a custom application that can exchange it for the desired tokens. Because the tokens are never exposed directly to an end user, they are less likely to become compromised.&lt;/p&gt;

&lt;p&gt;The image below illustrates the flow, and, in this &lt;a href=&quot;https://aws.amazon.com/blogs/mobile/understanding-amazon-cognito-user-pool-oauth-2-0-grants/&quot;&gt;blogpost&lt;/a&gt;, you can find more information about this approach.&lt;/p&gt;

&lt;p&gt;&lt;img alt=&quot;Authorization Code Grant Diagram&quot; src=&quot;/img/2020-03-16-ZPR-explained/zpr_aws_cognito.jpg&quot; class=&quot;image fit&quot; style=&quot;margin:0px auto;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;To secure our frontend we have used Manfred Steyer’s &lt;a href=&quot;https://github.com/manfredsteyer/angular-oauth2-oidc&quot;&gt;Angular-oauth2-oidc&lt;/a&gt; library but you could use any library as long as it is &lt;a href=&quot;https://openid.net/certification/&quot;&gt;OpenID certified&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Our colleague Jeroen wrote a fantastic &lt;a href=&quot;https://ordina-jworks.github.io/security/2019/08/22/Securing-Web-Applications-With-Keycloak.html#setting-up-the-front-end-and-back-end-applications&quot;&gt;blogpost&lt;/a&gt; that was very helpful to us. Jeroen shows the necessary steps to follow to secure any web application using OpenID Connect.&lt;/p&gt;

&lt;h1 id=&quot;d-day&quot;&gt;D-Day&lt;/h1&gt;

&lt;div style=&quot;text-align: center;&quot;&gt;
  &lt;img alt=&quot;Zero Plastic Rivers release&quot; src=&quot;/img/2020-03-16-ZPR-explained/zpr_release.jpg&quot; width=&quot;auto&quot; height=&quot;40%&quot; target=&quot;_blank&quot; class=&quot;image fit&quot; /&gt;
&lt;/div&gt;

&lt;div style=&quot;text-align: center;&quot;&gt;
  &lt;img alt=&quot;Zero Plastic Rivers trail&quot; src=&quot;/img/2020-03-16-ZPR-explained/zpr_plastictrail.jpg&quot; width=&quot;auto&quot; height=&quot;40%&quot; target=&quot;_blank&quot; class=&quot;image fit&quot; /&gt;
&lt;/div&gt;

&lt;div style=&quot;text-align: center;&quot;&gt;
  &lt;img alt=&quot;Zero Plastic Rivers trail2&quot; src=&quot;/img/2020-03-16-ZPR-explained/zpr_plastictrail2.jpg&quot; width=&quot;auto&quot; height=&quot;40%&quot; target=&quot;_blank&quot; class=&quot;image fit&quot; /&gt;
&lt;/div&gt;

&lt;p&gt;Tuesday December 17th was D-day. That day the bottles and sensors were finally thrown into the water. We had a tight timing because the bottles had to be thrown in the Scheldt river at high tide, at 3 different locations. 
It was a nice dry day and our client was quite nervous. Are all the signals coming in properly, is the sensor packed waterproof, …?  Especially because we were not able to test all that much with the sensors due to the tight timing. 
At high tide, it was time to throw the bottles in the water and register the sensor via our Ionic App. Everything runs smoothly and the signals from the sensors come in. You see the customer cheer up and leave satisfied to the next location. Everything goes as planned all day long and after just a few days the first users start registering the objects on our website.
And today, so many weeks later, we still receive new registrations. 
It was a nice ending of a fascinating and instructive project.&lt;/p&gt;

&lt;h1 id=&quot;developer-experience&quot;&gt;Developer-experience&lt;/h1&gt;

&lt;p&gt;For some developers on the team, Zero Plastic Rivers was the first experience with AWS and even their first cloud project.&lt;br /&gt;
In the beginning it was quite intimidating because a lot of different technologies of AWS were used.&lt;br /&gt;
But soon it turned out to be quite easy to configure and with some help from other colleagues (thanks guys) I got everything up and running pretty quickly.&lt;br /&gt;
In the beginning I was quite sceptical about the use of lambdas in our application, I didn’t immediately see the advantage of it but in the end it turned out to be the best option, especially if we want to build applications with many more sensors in the future. Although it was sometimes difficult to find the correct documentation.&lt;br /&gt;
My favorite technology was definitely Cognito. In a few lines of code you have a user administration of an entire application without having to worry about possible security holes.&lt;br /&gt;
In the end it was a very pleasant experience to get started with AWS.
Due to this eye-opening experience several developers are looking forward to becoming AWS certified and gaining a deeper and more complete AWS skillset.&lt;/p&gt;

&lt;h1 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h1&gt;

&lt;p&gt;All in all we were very pleased with how we delivered this project. As this project was fully staffed with an Ordina High Performance Team, we were able to do everything by the book. We used the best methodologies for software delivery coupled with our preferred technology stack to build a true cloud native application.
We embraced the devops mindset: you build it, you run it.
Next to that we also embraced the agile mindset: respect, collaboration, improvement and learning cycles, pride in ownership, focus on delivering value, and the ability to adapt to change.&lt;/p&gt;

&lt;p&gt;We had a great team dynamic: experienced developers coaching and mentoring younger colleagues and helping them grow.
Meanwhile the senior developers could work on their coaching and mentoring skills while discussing advanced architectures, also allowing them to grow.
Seems like a win-win, right?&lt;/p&gt;

&lt;p&gt;This scientific project will run for at least two years and we can’t wait to see what kind of insights will be revealed and the impact we will make on our environment and society!&lt;/p&gt;

&lt;p&gt;We also ended up getting some national press coverage. As you can imagine, this made us very proud!&lt;/p&gt;

&lt;p&gt;https://www.vrt.be/vrtnws/nl/2020/02/28/opnieuw-fluoplastic-in-schelde/
https://www.hln.be/in-de-buurt/antwerpen/wetenschappers-gooien-plastic-in-de-schelde-in-strijd-tegen-plasticvervuiling~a39b64e0/&lt;/p&gt;</content><author><name>{&quot;first_name&quot;=&gt;&quot;Bas&quot;, &quot;last_name&quot;=&gt;&quot;Moorkens&quot;, &quot;permalink&quot;=&gt;&quot;/author/bas-moorkens/&quot;, &quot;title&quot;=&gt;&quot;Senior Java Developer&quot;, &quot;title2&quot;=&gt;&quot;DevOps Engineer&quot;, &quot;email&quot;=&gt;&quot;bas.moorkens@ordina.be&quot;, &quot;linkedin&quot;=&gt;&quot;basmoorkens&quot;, &quot;avatar&quot;=&gt;&quot;bas-moorkens.jpg&quot;, &quot;github&quot;=&gt;&quot;basmoorkens&quot;, &quot;bio&quot;=&gt;&quot;Bas is a cloud platform architect at Ordina Belgium who is fascinated by aws, containers and pipeline automation. He started off as a Java full stack developer but got more and more into the devOps and cloud world where he currently spends most of his time.&quot;}</name><email>bas.moorkens@ordina.be</email></author><category term="Cloud" /><category term="AWS" /><category term="EKS" /><category term="Architecture" /><category term="Ionic" /><category term="Beanstalk" /><category term="Cloudfront" /><summary type="html">Table Of Contents</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://ordina-jworks.github.io/img/2020-03-16-ZPR-explained/zpr-banner.jpg" /><media:content medium="image" url="https://ordina-jworks.github.io/img/2020-03-16-ZPR-explained/zpr-banner.jpg" xmlns:media="http://search.yahoo.com/mrss/" /></entry></feed>