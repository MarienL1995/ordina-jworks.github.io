{
	"version": 3,
	"file": "ie8.css",
	"sources": [
		"ie8.scss",
		"_sass/libs/_vars.scss",
		"_sass/libs/_functions.scss",
		"_sass/libs/_mixins.scss",
		"_sass/libs/_skel.scss"
	],
	"sourcesContent": [
		"@import '../_sass/libs/vars';\n@import '../_sass/libs/functions';\n@import '../_sass/libs/mixins';\n@import '../_sass/libs/skel';\n\n/*\n\tSolid State by HTML5 UP\n\thtml5up.net | @ajlkn\n\tFree for personal and commercial use under the CCA 3.0 license (html5up.net/license)\n*/\n\n/* Basic */\n\nbody {\n  -ms-behavior: url('js/ie/backgroundsize.min.htc');\n}\n\n/* Type */\n\nh1, h2, h3, h4, h5, h6 {\n  &.major {\n    border-bottom: solid 2px _palette(fg-bold);\n  }\n}\n\nblockquote {\n  border-left: solid 4px _palette(fg-bold);\n}\n\ncode {\n  border: solid 2px _palette(fg-bold);\n}\n\nhr {\n  border-bottom: solid 2px _palette(fg-bold);\n}\n\n/* Button */\n\ninput[type=\"submit\"],\ninput[type=\"reset\"],\ninput[type=\"button\"],\nbutton,\n.button {\n  position: relative;\n  -ms-behavior: url('js/ie/PIE.htc');\n  border: solid 2px _palette(fg-bold);\n\n  &.special {\n    border: 0;\n  }\n}\n\n/* Form */\n\ninput[type=\"text\"],\ninput[type=\"password\"],\ninput[type=\"email\"],\ninput[type=\"tel\"],\nselect,\ntextarea {\n  position: relative;\n  -ms-behavior: url('js/ie/PIE.htc');\n  background: transparent;\n  border: solid 2px _palette(fg-bold);\n}\n\n/* Table */\n\ntable {\n  tbody {\n    tr {\n      border: solid 1px _palette(fg-bold);\n      border-left: 0;\n      border-right: 0;\n    }\n  }\n\n  &.alt {\n    tbody {\n      tr {\n        td {\n          border: solid 1px _palette(fg-bold);\n          border-left-width: 0;\n          border-top-width: 0;\n\n          &:first-child {\n            border-left-width: 1px;\n          }\n        }\n\n        &:first-child {\n          td {\n            border-top-width: 1px;\n          }\n        }\n      }\n    }\n\n    thead {\n      border-bottom: 0;\n    }\n\n    tfoot {\n      border-top: 0;\n    }\n  }\n}\n\n/* Features */\n\n.features {\n  article {\n    -ms-behavior: url('js/ie/PIE.htc');\n    position: relative;\n    width: 44%;\n\n    .image {\n      margin-top: 0;\n      margin-left: 0;\n      width: 100%;\n    }\n  }\n}\n\n/* Menu */\n\n#menu {\n  background: _palette(bg);\n\n  h2 {\n    border-bottom: solid 2px _palette(fg-bold);\n  }\n}\n\n/* Header */\n\n#header {\n  background-color: desaturate(lighten(_palette(bg), 3), 1.5);\n}\n\n/* Wrapper */\n\n.wrapper {\n  &:before, &:after {\n    display: none;\n  }\n\n  margin: 0;\n\n  &.spotlight {\n    .image {\n      -ms-behavior: url('js/ie/PIE.htc');\n\n      img {\n        position: relative;\n        -ms-behavior: url('js/ie/PIE.htc');\n      }\n    }\n  }\n}\n\n/* Banner */\n\n#banner {\n  .logo {\n    .icon {\n      border: solid 2px _palette(fg-bold);\n      -ms-behavior: url('js/ie/PIE.htc');\n    }\n  }\n\n  h2 {\n    border-bottom: solid 2px _palette(fg-bold);\n  }\n}\n\n/* Footer */\n\n#footer {\n  .inner {\n    .copyright {\n      border-top: solid 2px _palette(fg-bold);\n\n      li {\n        border-left: solid 2px _palette(fg-bold);\n      }\n    }\n  }\n}",
		"// Misc.\n$misc: (\n        z-index-base: 10000,\n        max-wrapper-styles: 6\n);\n\n// Duration.\n$duration: (\n        menu: 0.35s,\n        transition: 0.2s\n);\n\n// Size.\n$size: (\n        border-radius: 5px,\n        element-height: 2.75em,\n        element-margin: 2em,\n        inner: 55em,\n        section-spacing: (\n                large: 3em,\n                medium: 2em,\n                small: 1.75em\n        ),\n        wrapper-edges: (\n                large: 5.5em,\n                medium: 3.75em,\n                small: 2.5em\n        )\n);\n\n// Font.\n$font: (\n        family: ('Source Sans Pro', Helvetica, sans-serif),\n        family-fixed: ('Courier New', monospace),\n        family-heading: ('Futura Md BT', Helvetica, sans-serif),\n        weight: 300,\n        weight-bold: 600,\n        weight-heading: 200,\n        weight-heading-bold: 700,\n        kern-heading: 0.1em\n);\n\n// Palette.\n$palette: (\n        //bg: #fdfffc,\n        bg: #e7904b,\n        bg-header:#464646,\n        bg-menu:#928f8c,\n        bg-post: #fff,\n        bg-spotlight:#e37c30,\n        //bg-spotlight:#e7904b,\n        bg-section2:#f7d1a7,\n        bg-section3:#e7904b,\n        fg: #011627,\n        fg-bold: #011424,\n        fg-light: rgba(24, 43, 58, 0.35),\n        fg-header:#fff,\n        //fg-header-light:#bdb9b6,\n        //fg-header-light:#464646,\n        fg-header-light:#fff,\n        border: rgba(255, 159, 28, 0.25),\n        border-bg: rgba(255, 159, 28, 0.05),\n        border2: rgba(255, 159, 28, 0.25),\n        border2-bg: rgba(255, 159, 28, 0.15),\n        border-title:#f7d1a7,\n        accent: #f7d1a7,\n        ordina: rgba(255, 228, 193, 1.0),\n        \n        light_orange: #f7d1a7,\n        orange: #e7904b,\n        dark_orange: #e37c30,\n        light_grey: #928f8c,\n        grey: #635f5a,\n        dark_grey: #464646,\n        white: #fff\n);\n",
		"/// Gets a duration value.\n/// @param {string} $keys Key(s).\n/// @return {string} Value.\n@function _duration($keys...) {\n  @return val($duration, $keys...);\n}\n\n/// Gets a font value.\n/// @param {string} $keys Key(s).\n/// @return {string} Value.\n@function _font($keys...) {\n  @return val($font, $keys...);\n}\n\n/// Gets a misc value.\n/// @param {string} $keys Key(s).\n/// @return {string} Value.\n@function _misc($keys...) {\n  @return val($misc, $keys...);\n}\n\n/// Gets a palette value.\n/// @param {string} $keys Key(s).\n/// @return {string} Value.\n@function _palette($keys...) {\n  @return val($palette, $keys...);\n}\n\n/// Gets a size value.\n/// @param {string} $keys Key(s).\n/// @return {string} Value.\n@function _size($keys...) {\n  @return val($size, $keys...);\n}",
		"/// Makes an element's :before pseudoelement a FontAwesome icon.\n/// @param {string} $content Optional content value to use.\n@mixin icon($content: false) {\n\n  text-decoration: none;\n\n  &:before {\n\n    @if $content {\n      content: $content;\n    }\n\n    -moz-osx-font-smoothing: grayscale;\n    -webkit-font-smoothing: antialiased;\n    font-family: FontAwesome;\n    font-style: normal;\n    font-weight: normal;\n    text-transform: none !important;\n\n  }\n\n}\n\n/// Applies padding to an element, taking the current element-margin value into account.\n/// @param {mixed} $tb Top/bottom padding.\n/// @param {mixed} $lr Left/right padding.\n/// @param {list} $pad Optional extra padding (in the following order top, right, bottom, left)\n/// @param {bool} $important If true, adds !important.\n@mixin padding($tb, $lr, $pad: (0, 0, 0, 0), $important: null) {\n\n  @if $important {\n    $important: '!important';\n  }\n\n  padding: ($tb + nth($pad,1)) ($lr + nth($pad,2)) max(0.1em, $tb - _size(element-margin) + nth($pad,3)) ($lr + nth($pad,4)) #{$important};\n\n}\n\n/// Encodes a SVG data URL so IE doesn't choke (via codepen.io/jakob-e/pen/YXXBrp).\n/// @param {string} $svg SVG data URL.\n/// @return {string} Encoded SVG data URL.\n@function svg-url($svg) {\n\n  $svg: str-replace($svg, '\"', '\\'');\n  $svg: str-replace($svg, '<', '%3C');\n  $svg: str-replace($svg, '>', '%3E');\n  $svg: str-replace($svg, '&', '%26');\n  $svg: str-replace($svg, '#', '%23');\n  $svg: str-replace($svg, '{', '%7B');\n  $svg: str-replace($svg, '}', '%7D');\n  $svg: str-replace($svg, ';', '%3B');\n\n  @return url(\"data:image/svg+xml;charset=utf8,#{$svg}\");\n\n}",
		"// skel.scss v3.0.1 | (c) skel.io | MIT licensed */\n\n// Vars.\n$breakpoints: null;\n\n/// Breakpoints.\n/// @var {list}\n$breakpoints: () !global;\n\n/// Vendor prefixes.\n/// @var {list}\n$vendor-prefixes: (\n    '-moz-',\n    '-webkit-',\n    '-ms-',\n    ''\n);\n\n/// Properties that should be vendorized.\n/// @var {list}\n$vendor-properties: (\n    'align-content',\n    'align-items',\n    'align-self',\n    'animation',\n    'animation-delay',\n    'animation-direction',\n    'animation-duration',\n    'animation-fill-mode',\n    'animation-iteration-count',\n    'animation-name',\n    'animation-play-state',\n    'animation-timing-function',\n    'appearance',\n    'backface-visibility',\n    'box-sizing',\n    'filter',\n    'flex',\n    'flex-basis',\n    'flex-direction',\n    'flex-flow',\n    'flex-grow',\n    'flex-shrink',\n    'flex-wrap',\n    'justify-content',\n    'order',\n    'perspective',\n    'pointer-events',\n    'transform',\n    'transform-origin',\n    'transform-style',\n    'transition',\n    'transition-delay',\n    'transition-duration',\n    'transition-property',\n    'transition-timing-function',\n    'user-select'\n);\n\n/// Values that should be vendorized.\n/// @var {list}\n$vendor-values: (\n    'filter',\n    'flex',\n    'linear-gradient',\n    'radial-gradient',\n    'transform'\n);\n\n// Functions.\n\n/// Removes a specific item from a list.\n/// @author Hugo Giraudel\n/// @param {list} $list List.\n/// @param {integer} $index Index.\n/// @return {list} Updated list.\n@function remove-nth($list, $index) {\n\n    $result: null;\n\n    @if type-of($index) != number {\n        @warn \"$index: #{quote($index)} is not a number for `remove-nth`.\";\n    }\n    @else if $index == 0 {\n        @warn \"List index 0 must be a non-zero integer for `remove-nth`.\";\n    }\n    @else if abs($index) > length($list) {\n        @warn \"List index is #{$index} but list is only #{length($list)} item long for `remove-nth`.\";\n    }\n    @else {\n\n        $result: ();\n        $index: if($index < 0, length($list) + $index + 1, $index);\n\n        @for $i from 1 through length($list) {\n\n            @if $i != $index {\n                $result: append($result, nth($list, $i));\n            }\n\n        }\n\n    }\n\n    @return $result;\n\n}\n\n/// Replaces a substring within another string.\n/// @author Hugo Giraudel\n/// @param {string} $string String.\n/// @param {string} $search Substring.\n/// @param {string} $replace Replacement.\n/// @return {string} Updated string.\n@function str-replace($string, $search, $replace: '') {\n\n    $index: str-index($string, $search);\n\n    @if $index {\n        @return str-slice($string, 1, $index - 1) + $replace + str-replace(str-slice($string, $index + str-length($search)), $search, $replace);\n    }\n\n    @return $string;\n\n}\n\n/// Replaces a substring within each string in a list.\n/// @param {list} $strings List of strings.\n/// @param {string} $search Substring.\n/// @param {string} $replace Replacement.\n/// @return {list} Updated list of strings.\n@function str-replace-all($strings, $search, $replace: '') {\n\n    @each $string in $strings {\n        $strings: set-nth($strings, index($strings, $string), str-replace($string, $search, $replace));\n    }\n\n    @return $strings;\n\n}\n\n/// Gets a value from a map.\n/// @author Hugo Giraudel\n/// @param {map} $map Map.\n/// @param {string} $keys Key(s).\n/// @return {string} Value.\n@function val($map, $keys...) {\n\n    @if nth($keys, 1) == null {\n        $keys: remove-nth($keys, 1);\n    }\n\n    @each $key in $keys {\n        $map: map-get($map, $key);\n    }\n\n    @return $map;\n\n}\n\n// Mixins.\n\n/// Sets the global box model.\n/// @param {string} $model Model (default is content).\n@mixin boxModel($model: 'content') {\n\n    $x: $model + '-box';\n\n    *, *:before, *:after {\n        -moz-box-sizing: #{$x};\n        -webkit-box-sizing: #{$x};\n        box-sizing: #{$x};\n    }\n\n}\n\n/// Wraps @content in a @media block using a given breakpoint.\n/// @param {string} $breakpoint Breakpoint.\n/// @param {map} $queries Additional queries.\n@mixin breakpoint($breakpoint: null, $queries: null) {\n\n    $query: 'screen';\n\n    // Breakpoint.\n        @if $breakpoint and map-has-key($breakpoints, $breakpoint) {\n            $query: $query + ' and ' + map-get($breakpoints, $breakpoint);\n        }\n\n    // Queries.\n        @if $queries {\n            @each $k, $v in $queries {\n                $query: $query + ' and (' + $k + ':' + $v + ')';\n            }\n        }\n\n    @media #{$query} {\n        @content;\n    }\n\n}\n\n/// Wraps @content in a @media block targeting a specific orientation.\n/// @param {string} $orientation Orientation.\n@mixin orientation($orientation) {\n    @media screen and (orientation: #{$orientation}) {\n        @content;\n    }\n}\n\n/// Utility mixin for containers.\n/// @param {mixed} $width Width.\n@mixin containers($width) {\n\n    // Locked?\n        $lock: false;\n\n        @if length($width) == 2 {\n            $width: nth($width, 1);\n            $lock: true;\n        }\n\n    // Modifiers.\n        .container.\\31 25\\25\t\t{ width: 100%; max-width: $width * 1.25; min-width: $width; }\n        .container.\\37 5\\25\t\t\t{ width: $width * 0.75; }\n        .container.\\35 0\\25\t\t\t{ width: $width * 0.5; }\n        .container.\\32 5\\25\t\t\t{ width: $width * 0.25; }\n\n    // Main class.\n        .container {\n            @if $lock {\n                width: $width !important;\n            }\n            @else {\n                width: $width;\n            }\n        }\n\n}\n\n/// Utility mixin for grid.\n/// @param {list} $gutters Column and row gutters (default is 40px).\n/// @param {string} $breakpointName Optional breakpoint name.\n@mixin grid($gutters: 40px, $breakpointName: null) {\n\n    // Gutters.\n        @include grid-gutters($gutters);\n        @include grid-gutters($gutters, \\32 00\\25, 2);\n        @include grid-gutters($gutters, \\31 50\\25, 1.5);\n        @include grid-gutters($gutters, \\35 0\\25, 0.5);\n        @include grid-gutters($gutters, \\32 5\\25, 0.25);\n\n    // Cells.\n        $x: '';\n\n        @if $breakpointName {\n            $x: '\\\\28' + $breakpointName + '\\\\29';\n        }\n\n        .\\31 2u#{$x}, .\\31 2u\\24#{$x} { width: 100%; clear: none; margin-left: 0; }\n        .\\31 1u#{$x}, .\\31 1u\\24#{$x} { width: 91.6666666667%; clear: none; margin-left: 0; }\n        .\\31 0u#{$x}, .\\31 0u\\24#{$x} { width: 83.3333333333%; clear: none; margin-left: 0; }\n        .\\39 u#{$x}, .\\39 u\\24#{$x} { width: 75%; clear: none; margin-left: 0; }\n        .\\38 u#{$x}, .\\38 u\\24#{$x} { width: 66.6666666667%; clear: none; margin-left: 0; }\n        .\\37 u#{$x}, .\\37 u\\24#{$x} { width: 58.3333333333%; clear: none; margin-left: 0; }\n        .\\36 u#{$x}, .\\36 u\\24#{$x} { width: 50%; clear: none; margin-left: 0; }\n        .\\35 u#{$x}, .\\35 u\\24#{$x} { width: 41.6666666667%; clear: none; margin-left: 0; }\n        .\\34 u#{$x}, .\\34 u\\24#{$x} { width: 33.3333333333%; clear: none; margin-left: 0; }\n        .\\33 u#{$x}, .\\33 u\\24#{$x} { width: 25%; clear: none; margin-left: 0; }\n        .\\32 u#{$x}, .\\32 u\\24#{$x} { width: 16.6666666667%; clear: none; margin-left: 0; }\n        .\\31 u#{$x}, .\\31 u\\24#{$x} { width: 8.3333333333%; clear: none; margin-left: 0; }\n\n        .\\31 2u\\24#{$x} + *,\n        .\\31 1u\\24#{$x} + *,\n        .\\31 0u\\24#{$x} + *,\n        .\\39 u\\24#{$x} + *,\n        .\\38 u\\24#{$x} + *,\n        .\\37 u\\24#{$x} + *,\n        .\\36 u\\24#{$x} + *,\n        .\\35 u\\24#{$x} + *,\n        .\\34 u\\24#{$x} + *,\n        .\\33 u\\24#{$x} + *,\n        .\\32 u\\24#{$x} + *,\n        .\\31 u\\24#{$x} + * {\n            clear: left;\n        }\n\n        .\\-11u#{$x} { margin-left: 91.6666666667% }\n        .\\-10u#{$x} { margin-left: 83.3333333333% }\n        .\\-9u#{$x} { margin-left: 75% }\n        .\\-8u#{$x} { margin-left: 66.6666666667% }\n        .\\-7u#{$x} { margin-left: 58.3333333333% }\n        .\\-6u#{$x} { margin-left: 50% }\n        .\\-5u#{$x} { margin-left: 41.6666666667% }\n        .\\-4u#{$x} { margin-left: 33.3333333333% }\n        .\\-3u#{$x} { margin-left: 25% }\n        .\\-2u#{$x} { margin-left: 16.6666666667% }\n        .\\-1u#{$x} { margin-left: 8.3333333333% }\n\n}\n\n/// Utility mixin for grid.\n/// @param {list} $gutters Gutters.\n/// @param {string} $class Optional class name.\n/// @param {integer} $multiplier Multiplier (default is 1).\n@mixin grid-gutters($gutters, $class: null, $multiplier: 1) {\n\n    // Expand gutters if it's not a list.\n        @if length($gutters) == 1 {\n            $gutters: ($gutters, 0);\n        }\n\n    // Get column and row gutter values.\n        $c: nth($gutters, 1);\n        $r: nth($gutters, 2);\n\n    // Get class (if provided).\n        $x: '';\n\n        @if $class {\n            $x: '.' + $class;\n        }\n\n    // Default.\n        .row#{$x} > * { padding: ($r * $multiplier) 0 0 ($c * $multiplier); }\n        .row#{$x} { margin: ($r * $multiplier * -1) 0 -1px ($c * $multiplier * -1); }\n\n    // Uniform.\n        .row.uniform#{$x} > * { padding: ($c * $multiplier) 0 0 ($c * $multiplier); }\n        .row.uniform#{$x} { margin: ($c * $multiplier * -1) 0 -1px ($c * $multiplier * -1); }\n\n}\n\n/// Wraps @content in vendorized keyframe blocks.\n/// @param {string} $name Name.\n@mixin keyframes($name) {\n\n    @-moz-keyframes #{$name} { @content; }\n    @-webkit-keyframes #{$name} { @content; }\n    @-ms-keyframes #{$name} { @content; }\n    @keyframes #{$name} { @content; }\n\n}\n\n///\n/// Sets breakpoints.\n/// @param {map} $x Breakpoints.\n///\n@mixin skel-breakpoints($x: ()) {\n    $breakpoints: $x !global;\n}\n\n///\n/// Initializes layout module.\n/// @param {map} config Config.\n///\n@mixin skel-layout($config: ()) {\n\n    // Config.\n        $configPerBreakpoint: ();\n\n        $z: map-get($config, 'breakpoints');\n\n        @if $z {\n            $configPerBreakpoint: $z;\n        }\n\n    // Reset.\n        $x: map-get($config, 'reset');\n\n        @if $x {\n\n            /* Reset */\n\n            @include reset($x);\n\n        }\n\n    // Box model.\n        $x: map-get($config, 'boxModel');\n\n        @if $x {\n\n            /* Box Model */\n\n            @include boxModel($x);\n\n        }\n\n    // Containers.\n        $containers: map-get($config, 'containers');\n\n        @if $containers {\n\n            /* Containers */\n\n            .container {\n                margin-left: auto;\n                margin-right: auto;\n            }\n\n            // Use default is $containers is just \"true\".\n                @if $containers == true {\n                    $containers: 960px;\n                }\n\n            // Apply base.\n                @include containers($containers);\n\n            // Apply per-breakpoint.\n                @each $name in map-keys($breakpoints) {\n\n                    // Get/use breakpoint setting if it exists.\n                        $x: map-get($configPerBreakpoint, $name);\n\n                        // Per-breakpoint config exists?\n                            @if $x {\n                                $y: map-get($x, 'containers');\n\n                                // Setting exists? Use it.\n                                    @if $y {\n                                        $containers: $y;\n                                    }\n\n                            }\n\n                    // Create @media block.\n                        @media screen and #{map-get($breakpoints, $name)} {\n                            @include containers($containers);\n                        }\n\n                }\n\n        }\n\n    // Grid.\n        $grid: map-get($config, 'grid');\n\n        @if $grid {\n\n            /* Grid */\n\n            // Use defaults if $grid is just \"true\".\n                @if $grid == true {\n                    $grid: ();\n                }\n\n            // Sub-setting: Gutters.\n                $grid-gutters: 40px;\n                $x: map-get($grid, 'gutters');\n\n                @if $x {\n                    $grid-gutters: $x;\n                }\n\n            // Rows.\n                .row {\n                    border-bottom: solid 1px transparent;\n                    -moz-box-sizing: border-box;\n                    -webkit-box-sizing: border-box;\n                    box-sizing: border-box;\n                }\n\n                .row > * {\n                    float: left;\n                    -moz-box-sizing: border-box;\n                    -webkit-box-sizing: border-box;\n                    box-sizing: border-box;\n                }\n\n                .row:after, .row:before {\n                    content: '';\n                    display: block;\n                    clear: both;\n                    height: 0;\n                }\n\n                .row.uniform > * > :first-child {\n                    margin-top: 0;\n                }\n\n                .row.uniform > * > :last-child {\n                    margin-bottom: 0;\n                }\n\n            // Gutters (0%).\n                @include grid-gutters($grid-gutters, \\30 \\25, 0);\n\n            // Apply base.\n                @include grid($grid-gutters);\n\n            // Apply per-breakpoint.\n                @each $name in map-keys($breakpoints) {\n\n                    // Get/use breakpoint setting if it exists.\n                        $x: map-get($configPerBreakpoint, $name);\n\n                        // Per-breakpoint config exists?\n                            @if $x {\n                                $y: map-get($x, 'grid');\n\n                                // Setting exists?\n                                    @if $y {\n\n                                        // Sub-setting: Gutters.\n                                            $x: map-get($y, 'gutters');\n\n                                            @if $x {\n                                                $grid-gutters: $x;\n                                            }\n\n                                    }\n\n                            }\n\n                    // Create @media block.\n                        @media screen and #{map-get($breakpoints, $name)} {\n                            @include grid($grid-gutters, $name);\n                        }\n\n                }\n\n        }\n\n}\n\n/// Resets browser styles.\n/// @param {string} $mode Mode (default is 'normalize').\n@mixin reset($mode: 'normalize') {\n\n    @if $mode == 'normalize' {\n\n        // normalize.css v3.0.2 | MIT License | git.io/normalize\n            html{font-family:sans-serif;-ms-text-size-adjust:100%;-webkit-text-size-adjust:100%}body{margin:0}article,aside,details,figcaption,figure,footer,header,hgroup,main,menu,nav,section,summary{display:block}audio,canvas,progress,video{display:inline-block;vertical-align:baseline}audio:not([controls]){display:none;height:0}[hidden],template{display:none}a{background-color:transparent}a:active,a:hover{outline:0}abbr[title]{border-bottom:1px dotted}b,strong{font-weight:700}dfn{font-style:italic}h1{font-size:2em;margin:.67em 0}mark{background:#ff0;color:#000}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sup{top:-.5em}sub{bottom:-.25em}img{border:0}svg:not(:root){overflow:hidden}figure{margin:1em 40px}hr{-moz-box-sizing:content-box;box-sizing:content-box;height:0}pre{overflow:auto}code,kbd,pre,samp{font-family:monospace,monospace;font-size:1em}button,input,optgroup,select,textarea{color:inherit;font:inherit;margin:0}button{overflow:visible}button,select{text-transform:none}button,html input[type=button],input[type=reset],input[type=submit]{-webkit-appearance:button;cursor:pointer}button[disabled],html input[disabled]{cursor:default}button::-moz-focus-inner,input::-moz-focus-inner{border:0;padding:0}input{line-height:normal}input[type=checkbox],input[type=radio]{box-sizing:border-box;padding:0}input[type=number]::-webkit-inner-spin-button,input[type=number]::-webkit-outer-spin-button{height:auto}input[type=search]{-webkit-appearance:textfield;-moz-box-sizing:content-box;-webkit-box-sizing:content-box;box-sizing:content-box}input[type=search]::-webkit-search-cancel-button,input[type=search]::-webkit-search-decoration{-webkit-appearance:none}fieldset{border:1px solid silver;margin:0 2px;padding:.35em .625em .75em}legend{border:0;padding:0}textarea{overflow:auto}optgroup{font-weight:700}table{border-collapse:collapse;border-spacing:0}td,th{padding:0}\n\n    }\n    @else if $mode == 'full' {\n\n        // meyerweb.com/eric/tools/css/reset v2.0 | 20110126 | License: none (public domain)\n            html,body,div,span,applet,object,iframe,h1,h2,h3,h4,h5,h6,p,blockquote,pre,a,abbr,acronym,address,big,cite,code,del,dfn,em,img,ins,kbd,q,s,samp,small,strike,strong,sub,sup,tt,var,b,u,i,center,dl,dt,dd,ol,ul,li,fieldset,form,label,legend,table,caption,tbody,tfoot,thead,tr,th,td,article,aside,canvas,details,embed,figure,figcaption,footer,header,hgroup,menu,nav,output,ruby,section,summary,time,mark,audio,video{margin:0;padding:0;border:0;font-size:100%;font:inherit;vertical-align:baseline;}article,aside,details,figcaption,figure,footer,header,hgroup,menu,nav,section{display:block;}body{line-height:1;}ol,ul{list-style:none;}blockquote,q{quotes:none;}blockquote:before,blockquote:after,q:before,q:after{content:'';content:none;}table{border-collapse:collapse;border-spacing:0;}body{-webkit-text-size-adjust:none}\n\n    }\n\n}\n\n/// Vendorizes a declaration's property and/or value(s).\n/// @param {string} $property Property.\n/// @param {mixed} $value String/list of value(s).\n@mixin vendor($property, $value) {\n\n    // Determine if property should expand.\n        $expandProperty: index($vendor-properties, $property);\n\n    // Determine if value should expand (and if so, add '-prefix-' placeholder).\n        $expandValue: false;\n\n        @each $x in $value {\n            @each $y in $vendor-values {\n                @if $y == str-slice($x, 1, str-length($y)) {\n\n                    $value: set-nth($value, index($value, $x), '-prefix-' + $x);\n                    $expandValue: true;\n\n                }\n            }\n        }\n\n    // Expand property?\n        @if $expandProperty {\n            @each $vendor in $vendor-prefixes {\n                #{$vendor}#{$property}: #{str-replace-all($value, '-prefix-', $vendor)};\n            }\n        }\n\n    // Expand just the value?\n        @elseif $expandValue {\n            @each $vendor in $vendor-prefixes {\n                #{$property}: #{str-replace-all($value, '-prefix-', $vendor)};\n            }\n        }\n\n    // Neither? Treat them as a normal declaration.\n        @else {\n            #{$property}: #{$value};\n        }\n\n}"
	],
	"names": [],
	"mappings": "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"
}